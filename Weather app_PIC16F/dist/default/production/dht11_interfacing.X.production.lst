

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Oct 07 13:36:34 2019

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000D                     	;# 
    41  000E                     	;# 
    42  000E                     	;# 
    43  000F                     	;# 
    44  0010                     	;# 
    45  0011                     	;# 
    46  0012                     	;# 
    47  0013                     	;# 
    48  0014                     	;# 
    49  0015                     	;# 
    50  0015                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001B                     	;# 
    58  001C                     	;# 
    59  001D                     	;# 
    60  001E                     	;# 
    61  001F                     	;# 
    62  0081                     	;# 
    63  0085                     	;# 
    64  0086                     	;# 
    65  0087                     	;# 
    66  0088                     	;# 
    67  0089                     	;# 
    68  008C                     	;# 
    69  008D                     	;# 
    70  008E                     	;# 
    71  0091                     	;# 
    72  0092                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0098                     	;# 
    76  0099                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  010C                     	;# 
    82  010D                     	;# 
    83  010E                     	;# 
    84  010F                     	;# 
    85  018C                     	;# 
    86  018D                     	;# 
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	strings
   209  0003                     __pstrings:	
   210  0003                     stringtab:	
   211  0003                     __stringtab:	
   212  0003                     stringcode:	
   213                           ;	String table - string pointers are 1 byte each
   214                           
   215  0003                     stringdir:	
   216  0003  3000               	movlw	high stringdir
   217  0004  008A               	movwf	10
   218  0005  0804               	movf	4,w
   219  0006  0A84               	incf	4,f
   220  0007  0782               	addwf	2,f
   221  0008                     __stringbase:	
   222  0008  3400               	retlw	0
   223  0009                     __end_of__stringtab:	
   224  0009                     _tmr0_mask:	
   225  0009  34FF               	retlw	255
   226  000A                     __end_of_tmr0_mask:	
   227  000B                     _INTCONbits	set	11
   228  0006                     _PORTB	set	6
   229  0006                     _PORTBbits	set	6
   230  0008                     _PORTDbits	set	8
   231  0001                     _TMR0	set	1
   232  0081                     _OPTION_REGbits	set	129
   233  0086                     _TRISB	set	134
   234  0088                     _TRISDbits	set	136
   235  000A                     STR_8:	
   236  000A  3420               	retlw	32	;' '
   237  000B  3420               	retlw	32	;' '
   238  000C  3420               	retlw	32	;' '
   239  000D  3420               	retlw	32	;' '
   240  000E  3420               	retlw	32	;' '
   241  000F  3420               	retlw	32	;' '
   242  0010  3420               	retlw	32	;' '
   243  0011  3420               	retlw	32	;' '
   244  0012  3420               	retlw	32	;' '
   245  0013  3420               	retlw	32	;' '
   246  0014  3420               	retlw	32	;' '
   247  0015  3420               	retlw	32	;' '
   248  0016  3420               	retlw	32	;' '
   249  0017  3420               	retlw	32	;' '
   250  0018  3420               	retlw	32	;' '
   251  0019  3420               	retlw	32	;' '
   252  001A  3400               	retlw	0
   253  001B                     STR_13:	
   254  001B  3477               	retlw	119	;'w'
   255  001C  3469               	retlw	105	;'i'
   256  001D  3474               	retlw	116	;'t'
   257  001E  3468               	retlw	104	;'h'
   258  001F  3420               	retlw	32	;' '
   259  0020  3450               	retlw	80	;'P'
   260  0021  3449               	retlw	73	;'I'
   261  0022  3443               	retlw	67	;'C'
   262  0023  3431               	retlw	49	;'1'
   263  0024  3436               	retlw	54	;'6'
   264  0025  3446               	retlw	70	;'F'
   265  0026  3438               	retlw	56	;'8'
   266  0027  3437               	retlw	55	;'7'
   267  0028  3437               	retlw	55	;'7'
   268  0029  3441               	retlw	65	;'A'
   269  002A  3400               	retlw	0
   270  002B                     STR_5:	
   271  002B  3443               	retlw	67	;'C'
   272  002C  3468               	retlw	104	;'h'
   273  002D  3465               	retlw	101	;'e'
   274  002E  3463               	retlw	99	;'c'
   275  002F  346B               	retlw	107	;'k'
   276  0030  3420               	retlw	32	;' '
   277  0031  3473               	retlw	115	;'s'
   278  0032  3475               	retlw	117	;'u'
   279  0033  346D               	retlw	109	;'m'
   280  0034  3420               	retlw	32	;' '
   281  0035  3465               	retlw	101	;'e'
   282  0036  3472               	retlw	114	;'r'
   283  0037  3472               	retlw	114	;'r'
   284  0038  346F               	retlw	111	;'o'
   285  0039  3472               	retlw	114	;'r'
   286  003A  3400               	retlw	0
   287  003B                     STR_11:	
   288  003B  3463               	retlw	99	;'c'
   289  003C  3469               	retlw	105	;'i'
   290  003D  3472               	retlw	114	;'r'
   291  003E  3463               	retlw	99	;'c'
   292  003F  3475               	retlw	117	;'u'
   293  0040  3469               	retlw	105	;'i'
   294  0041  3474               	retlw	116	;'t'
   295  0042  3420               	retlw	32	;' '
   296  0043  3444               	retlw	68	;'D'
   297  0044  3469               	retlw	105	;'i'
   298  0045  3467               	retlw	103	;'g'
   299  0046  3465               	retlw	101	;'e'
   300  0047  3473               	retlw	115	;'s'
   301  0048  3474               	retlw	116	;'t'
   302  0049  3400               	retlw	0
   303  004A                     STR_7:	
   304  004A  344E               	retlw	78	;'N'
   305  004B  346F               	retlw	111	;'o'
   306  004C  3420               	retlw	32	;' '
   307  004D  3452               	retlw	82	;'R'
   308  004E  3465               	retlw	101	;'e'
   309  004F  3473               	retlw	115	;'s'
   310  0050  3470               	retlw	112	;'p'
   311  0051  346F               	retlw	111	;'o'
   312  0052  346E               	retlw	110	;'n'
   313  0053  3473               	retlw	115	;'s'
   314  0054  3465               	retlw	101	;'e'
   315  0055  342E               	retlw	46	;'.'
   316  0056  3400               	retlw	0
   317  0057                     STR_12:	
   318  0057  3444               	retlw	68	;'D'
   319  0058  3448               	retlw	72	;'H'
   320  0059  3454               	retlw	84	;'T'
   321  005A  3431               	retlw	49	;'1'
   322  005B  3431               	retlw	49	;'1'
   323  005C  3420               	retlw	32	;' '
   324  005D  3453               	retlw	83	;'S'
   325  005E  3465               	retlw	101	;'e'
   326  005F  346E               	retlw	110	;'n'
   327  0060  3473               	retlw	115	;'s'
   328  0061  346F               	retlw	111	;'o'
   329  0062  3472               	retlw	114	;'r'
   330  0063  3400               	retlw	0
   331  0064                     STR_3:	
   332  0064  3448               	retlw	72	;'H'
   333  0065  3475               	retlw	117	;'u'
   334  0066  346D               	retlw	109	;'m'
   335  0067  3469               	retlw	105	;'i'
   336  0068  3464               	retlw	100	;'d'
   337  0069  3469               	retlw	105	;'i'
   338  006A  3474               	retlw	116	;'t'
   339  006B  3479               	retlw	121	;'y'
   340  006C  343A               	retlw	58	;':'
   341  006D  3420               	retlw	32	;' '
   342  006E  3400               	retlw	0
   343  006F                     STR_10:	
   344  006F  3457               	retlw	87	;'W'
   345  0070  3465               	retlw	101	;'e'
   346  0071  346C               	retlw	108	;'l'
   347  0072  3463               	retlw	99	;'c'
   348  0073  346F               	retlw	111	;'o'
   349  0074  346D               	retlw	109	;'m'
   350  0075  3465               	retlw	101	;'e'
   351  0076  3420               	retlw	32	;' '
   352  0077  3474               	retlw	116	;'t'
   353  0078  346F               	retlw	111	;'o'
   354  0079  3400               	retlw	0
   355  007A                     STR_6:	
   356  007A  3445               	retlw	69	;'E'
   357  007B  3472               	retlw	114	;'r'
   358  007C  3472               	retlw	114	;'r'
   359  007D  346F               	retlw	111	;'o'
   360  007E  3472               	retlw	114	;'r'
   361  007F  3421               	retlw	33	;'!'
   362  0080  3421               	retlw	33	;'!'
   363  0081  3421               	retlw	33	;'!'
   364  0082  3400               	retlw	0
   365  0083                     STR_1:	
   366  0083  3454               	retlw	84	;'T'
   367  0084  3465               	retlw	101	;'e'
   368  0085  346D               	retlw	109	;'m'
   369  0086  3470               	retlw	112	;'p'
   370  0087  343A               	retlw	58	;':'
   371  0088  3420               	retlw	32	;' '
   372  0089  3400               	retlw	0
   373  008A                     STR_2:	
   374  008A  3443               	retlw	67	;'C'
   375  008B  3420               	retlw	32	;' '
   376  008C  3420               	retlw	32	;' '
   377  008D  3420               	retlw	32	;' '
   378  008E  3400               	retlw	0
   379  008F                     STR_4:	
   380  008F  3425               	retlw	37	;'%'
   381  0090  3420               	retlw	32	;' '
   382  0091  3420               	retlw	32	;' '
   383  0092  3400               	retlw	0
   384  000A                     
   385                           ; #config settings
   386  0000                     
   387                           	psect	cinit
   388  07F2                     start_initialization:	
   389  07F2                     __initialization:	
   390                           
   391                           ; Clear objects allocated to BITBANK0
   392  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   393  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   394  07F4  01CC               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   395                           
   396                           ; Clear objects allocated to BANK0
   397  07F5  1383               	bcf	3,7	;select IRP bank0
   398  07F6  3020               	movlw	low __pbssBANK0
   399  07F7  0084               	movwf	4
   400  07F8  303F               	movlw	low (__pbssBANK0+31)
   401  07F9  120A  118A  23B8   	fcall	clear_ram0
   402  07FC                     end_of_initialization:	
   403                           ;End of C runtime variable initialization code
   404                           
   405  07FC                     __end_of__initialization:	
   406  07FC  0183               	clrf	3
   407  07FD  120A  118A  2E9C   	ljmp	_main	;jump to C main() function
   408                           
   409                           	psect	bitbssBANK0
   410  0260                     __pbitbssBANK0:	
   411  0260                     _status:	
   412  0260                     	ds	1
   413                           
   414                           	psect	bssBANK0
   415  0020                     __pbssBANK0:	
   416  0020                     _num:	
   417  0020                     	ds	20
   418  0034                     TMR0_ISR@CountCallBack:	
   419  0034                     	ds	2
   420  0036                     _Check_bit:	
   421  0036                     	ds	1
   422  0037                     _Himudity:	
   423  0037                     	ds	1
   424  0038                     _RH:	
   425  0038                     	ds	1
   426  0039                     _RH_byte_1:	
   427  0039                     	ds	1
   428  003A                     _RH_byte_2:	
   429  003A                     	ds	1
   430  003B                     _Sumation:	
   431  003B                     	ds	1
   432  003C                     _Temp_byte_1:	
   433  003C                     	ds	1
   434  003D                     _Temp_byte_2:	
   435  003D                     	ds	1
   436  003E                     _c:	
   437  003E                     	ds	1
   438                           
   439                           	psect	clrtext
   440  03B8                     clear_ram0:	
   441                           ;	Called with FSR containing the base address, and
   442                           ;	W with the last address+1
   443                           
   444  03B8  0064               	clrwdt	;clear the watchdog before getting into this loop
   445  03B9                     clrloop0:	
   446  03B9  0180               	clrf	0	;clear RAM location pointed to by FSR
   447  03BA  0A84               	incf	4,f	;increment pointer
   448  03BB  0604               	xorwf	4,w	;XOR with final address
   449  03BC  1903               	btfsc	3,2	;have we reached the end yet?
   450  03BD  3400               	retlw	0	;all done for this memory range, return
   451  03BE  0604               	xorwf	4,w	;XOR again to restore value
   452  03BF  2BB9               	goto	clrloop0	;do the next byte
   453                           
   454                           	psect	cstackCOMMON
   455  0070                     __pcstackCOMMON:	
   456  0070                     ?_system_init:	
   457  0070                     ?_dht11_init:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ??_dht11_init:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_find_response:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ??_find_response:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_read_dht11:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ??_read_dht11:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_lcd_com:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_lcd_puts:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_lcd_data:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_clear_screen:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_lcd_init:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_introduction_screen:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_main:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_delay:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_lcd_init_write:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?___awdiv:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     delay@j:	
   506                           ; 2 bytes @ 0x0
   507                           
   508  0070                     ___awdiv@divisor:	
   509                           ; 2 bytes @ 0x0
   510                           
   511                           
   512                           ; 2 bytes @ 0x0
   513  0070                     	ds	2
   514  0072                     ??_delay:	
   515  0072                     read_dht11@data:	
   516                           ; 1 bytes @ 0x2
   517                           
   518  0072                     delay@i:	
   519                           ; 1 bytes @ 0x2
   520                           
   521  0072                     ___awdiv@dividend:	
   522                           ; 2 bytes @ 0x2
   523                           
   524                           
   525                           ; 2 bytes @ 0x2
   526  0072                     	ds	1
   527  0073                     read_dht11@for_count:	
   528                           
   529                           ; 1 bytes @ 0x3
   530  0073                     	ds	1
   531  0074                     ??_lcd_com:	
   532  0074                     ??_lcd_init_write:	
   533                           ; 1 bytes @ 0x4
   534                           
   535  0074                     ??___awdiv:	
   536                           ; 1 bytes @ 0x4
   537                           
   538  0074                     lcd_init_write@a:	
   539                           ; 1 bytes @ 0x4
   540                           
   541                           
   542                           ; 1 bytes @ 0x4
   543  0074                     	ds	1
   544  0075                     ___awdiv@counter:	
   545                           
   546                           ; 1 bytes @ 0x5
   547  0075                     	ds	1
   548  0076                     lcd_com@a:	
   549  0076                     ___awdiv@sign:	
   550                           ; 1 bytes @ 0x6
   551                           
   552                           
   553                           ; 1 bytes @ 0x6
   554  0076                     	ds	1
   555  0077                     lcd_com@temp:	
   556  0077                     ___awdiv@quotient:	
   557                           ; 1 bytes @ 0x7
   558                           
   559                           
   560                           ; 2 bytes @ 0x7
   561  0077                     	ds	1
   562  0078                     ??_lcd_data:	
   563  0078                     ??_lcd_init:	
   564                           ; 1 bytes @ 0x8
   565                           
   566  0078                     lcd_data@a:	
   567                           ; 1 bytes @ 0x8
   568                           
   569                           
   570                           ; 1 bytes @ 0x8
   571  0078                     	ds	1
   572  0079                     ??_lcd_puts:	
   573  0079                     ?___awmod:	
   574                           ; 1 bytes @ 0x9
   575                           
   576  0079                     lcd_puts@i:	
   577                           ; 2 bytes @ 0x9
   578                           
   579  0079                     ___awmod@divisor:	
   580                           ; 2 bytes @ 0x9
   581                           
   582                           
   583                           ; 2 bytes @ 0x9
   584  0079                     	ds	2
   585  007B                     lcd_puts@str:	
   586  007B                     ___awmod@dividend:	
   587                           ; 1 bytes @ 0xB
   588                           
   589                           
   590                           ; 2 bytes @ 0xB
   591  007B                     	ds	1
   592  007C                     ??_system_init:	
   593  007C                     ??_clear_screen:	
   594                           ; 1 bytes @ 0xC
   595                           
   596                           
   597                           ; 1 bytes @ 0xC
   598  007C                     	ds	1
   599  007D                     ??___awmod:	
   600                           
   601                           ; 1 bytes @ 0xD
   602  007D                     	ds	1
   603                           
   604                           	psect	cstackBANK0
   605  003F                     __pcstackBANK0:	
   606  003F                     ??_introduction_screen:	
   607  003F                     ___awmod@counter:	
   608                           ; 1 bytes @ 0x0
   609                           
   610                           
   611                           ; 1 bytes @ 0x0
   612  003F                     	ds	1
   613  0040                     ___awmod@sign:	
   614                           
   615                           ; 1 bytes @ 0x1
   616  0040                     	ds	2
   617  0042                     ??_main:	
   618                           
   619                           ; 1 bytes @ 0x3
   620  0042                     	ds	10
   621                           
   622                           	psect	maintext
   623  069C                     __pmaintext:	
   624 ;;
   625 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   626 ;;
   627 ;; *************** function _main *****************
   628 ;; Defined at:
   629 ;;		line 43 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : B00/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0
   645 ;;      Temps:          0      10       0       0       0
   646 ;;      Totals:         0      10       0       0       0
   647 ;;Total ram usage:       10 bytes
   648 ;; Hardware stack levels required when called:    7
   649 ;; This function calls:
   650 ;;		___awdiv
   651 ;;		___awmod
   652 ;;		_clear_screen
   653 ;;		_dht11_init
   654 ;;		_find_response
   655 ;;		_lcd_com
   656 ;;		_lcd_data
   657 ;;		_lcd_puts
   658 ;;		_read_dht11
   659 ;;		_system_init
   660 ;; This function is called by:
   661 ;;		Startup code after reset
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _main
   667  069C                     _main:	
   668                           
   669                           ;main.c: 44: system_init();
   670                           
   671                           ;incstack = 0
   672                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   673  069C  120A  118A  23CA  120A  118A  	fcall	_system_init
   674  06A1                     l1228:	
   675                           ;main.c: 46: while(1){
   676                           
   677                           
   678                           ;main.c: 47: _delay((unsigned long)((800)*(20000000/4000.0)));
   679  06A1  3015               	movlw	21
   680  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   681  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   682  06A4  00C4               	movwf	??_main+2
   683  06A5  304B               	movlw	75
   684  06A6  00C3               	movwf	??_main+1
   685  06A7  30D1               	movlw	209
   686  06A8  00C2               	movwf	??_main
   687  06A9                     u1027:	
   688  06A9  0BC2               	decfsz	??_main,f
   689  06AA  2EA9               	goto	u1027
   690  06AB  0BC3               	decfsz	??_main+1,f
   691  06AC  2EA9               	goto	u1027
   692  06AD  0BC4               	decfsz	??_main+2,f
   693  06AE  2EA9               	goto	u1027
   694  06AF  0000               	nop
   695                           
   696                           ;main.c: 48: dht11_init();
   697  06B0  120A  118A  2413  120A  118A  	fcall	_dht11_init
   698                           
   699                           ;main.c: 49: find_response();
   700  06B5  120A  118A  242D  120A  118A  	fcall	_find_response
   701                           
   702                           ;main.c: 50: if(Check_bit == 1){
   703  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   704  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   705  06BC  0336               	decf	_Check_bit,w
   706  06BD  1D03               	btfss	3,2
   707  06BE  2FC5               	goto	l1266
   708                           
   709                           ;main.c: 51: RH_byte_1 = read_dht11();
   710  06BF  120A  118A  246A  120A  118A  	fcall	_read_dht11
   711  06C4  1283               	bcf	3,5	;RP0=0, select bank0
   712  06C5  1303               	bcf	3,6	;RP1=0, select bank0
   713  06C6  00C2               	movwf	??_main
   714  06C7  0842               	movf	??_main,w
   715  06C8  00B9               	movwf	_RH_byte_1
   716                           
   717                           ;main.c: 52: RH_byte_2 = read_dht11();
   718  06C9  120A  118A  246A  120A  118A  	fcall	_read_dht11
   719  06CE  1283               	bcf	3,5	;RP0=0, select bank0
   720  06CF  1303               	bcf	3,6	;RP1=0, select bank0
   721  06D0  00C2               	movwf	??_main
   722  06D1  0842               	movf	??_main,w
   723  06D2  00BA               	movwf	_RH_byte_2
   724                           
   725                           ;main.c: 53: Temp_byte_1 = read_dht11();
   726  06D3  120A  118A  246A  120A  118A  	fcall	_read_dht11
   727  06D8  1283               	bcf	3,5	;RP0=0, select bank0
   728  06D9  1303               	bcf	3,6	;RP1=0, select bank0
   729  06DA  00C2               	movwf	??_main
   730  06DB  0842               	movf	??_main,w
   731  06DC  00BC               	movwf	_Temp_byte_1
   732                           
   733                           ;main.c: 54: Temp_byte_2 = read_dht11();
   734  06DD  120A  118A  246A  120A  118A  	fcall	_read_dht11
   735  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   736  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   737  06E4  00C2               	movwf	??_main
   738  06E5  0842               	movf	??_main,w
   739  06E6  00BD               	movwf	_Temp_byte_2
   740                           
   741                           ;main.c: 55: Sumation = read_dht11();
   742  06E7  120A  118A  246A  120A  118A  	fcall	_read_dht11
   743  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   744  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   745  06EE  00C2               	movwf	??_main
   746  06EF  0842               	movf	??_main,w
   747  06F0  00BB               	movwf	_Sumation
   748                           
   749                           ;main.c: 56: if(Sumation == ((RH_byte_1+RH_byte_2+Temp_byte_1+Temp_byte_2) & 0XFF)){
   750  06F1  0839               	movf	_RH_byte_1,w
   751  06F2  073A               	addwf	_RH_byte_2,w
   752  06F3  00C2               	movwf	??_main
   753  06F4  01C3               	clrf	??_main+1
   754  06F5  0DC3               	rlf	??_main+1,f
   755  06F6  083C               	movf	_Temp_byte_1,w
   756  06F7  0742               	addwf	??_main,w
   757  06F8  00C4               	movwf	??_main+2
   758  06F9  3000               	movlw	0
   759  06FA  1803               	skipnc
   760  06FB  3001               	movlw	1
   761  06FC  0743               	addwf	??_main+1,w
   762  06FD  00C5               	movwf	??_main+3
   763  06FE  083D               	movf	_Temp_byte_2,w
   764  06FF  0744               	addwf	??_main+2,w
   765  0700  00C6               	movwf	??_main+4
   766  0701  3000               	movlw	0
   767  0702  1803               	skipnc
   768  0703  3001               	movlw	1
   769  0704  0745               	addwf	??_main+3,w
   770  0705  00C7               	movwf	??_main+5
   771  0706  30FF               	movlw	255
   772  0707  0546               	andwf	??_main+4,w
   773  0708  00C8               	movwf	??_main+6
   774  0709  3000               	movlw	0
   775  070A  0547               	andwf	??_main+5,w
   776  070B  00C9               	movwf	??_main+7
   777  070C  083B               	movf	_Sumation,w
   778  070D  00CA               	movwf	??_main+8
   779  070E  01CB               	clrf	??_main+9
   780  070F  0849               	movf	??_main+7,w
   781  0710  064B               	xorwf	??_main+9,w
   782  0711  1D03               	skipz
   783  0712  2F15               	goto	u785
   784  0713  0848               	movf	??_main+6,w
   785  0714  064A               	xorwf	??_main+8,w
   786  0715                     u785:	
   787  0715  1D03               	skipz
   788  0716  2FC3               	goto	l1264
   789                           
   790                           ;main.c: 57: Himudity = Temp_byte_1;
   791  0717  083C               	movf	_Temp_byte_1,w
   792  0718  00C2               	movwf	??_main
   793  0719  0842               	movf	??_main,w
   794  071A  00B7               	movwf	_Himudity
   795                           
   796                           ;main.c: 58: RH = RH_byte_1;
   797  071B  0839               	movf	_RH_byte_1,w
   798  071C  00C2               	movwf	??_main
   799  071D  0842               	movf	??_main,w
   800  071E  00B8               	movwf	_RH
   801                           
   802                           ;main.c: 59: lcd_com (0x80);
   803  071F  3080               	movlw	128
   804  0720  120A  118A  24AA  120A  118A  	fcall	_lcd_com
   805                           
   806                           ;main.c: 60: lcd_puts("Temp: ");
   807  0725  307B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   808  0726  120A  118A  2448  120A  118A  	fcall	_lcd_puts
   809                           
   810                           ;main.c: 62: lcd_data(48 + ((Himudity / 10) % 10));
   811  072B  300A               	movlw	10
   812  072C  00F9               	movwf	___awmod@divisor
   813  072D  3000               	movlw	0
   814  072E  00FA               	movwf	___awmod@divisor+1
   815  072F  300A               	movlw	10
   816  0730  00F0               	movwf	___awdiv@divisor
   817  0731  3000               	movlw	0
   818  0732  00F1               	movwf	___awdiv@divisor+1
   819  0733  1283               	bcf	3,5	;RP0=0, select bank0
   820  0734  1303               	bcf	3,6	;RP1=0, select bank0
   821  0735  0837               	movf	_Himudity,w
   822  0736  00C2               	movwf	??_main
   823  0737  01C3               	clrf	??_main+1
   824  0738  0842               	movf	??_main,w
   825  0739  00F2               	movwf	___awdiv@dividend
   826  073A  0843               	movf	??_main+1,w
   827  073B  00F3               	movwf	___awdiv@dividend+1
   828  073C  120A  118A  2542  120A  118A  	fcall	___awdiv
   829  0741  0871               	movf	?___awdiv+1,w
   830  0742  00FC               	movwf	___awmod@dividend+1
   831  0743  0870               	movf	?___awdiv,w
   832  0744  00FB               	movwf	___awmod@dividend
   833  0745  120A  118A  24F5  120A  118A  	fcall	___awmod
   834  074A  0879               	movf	?___awmod,w
   835  074B  3E30               	addlw	48
   836  074C  120A  118A  23C0  120A  118A  	fcall	_lcd_data
   837                           
   838                           ;main.c: 63: lcd_data(48 + (Himudity % 10));
   839  0751  300A               	movlw	10
   840  0752  00F9               	movwf	___awmod@divisor
   841  0753  3000               	movlw	0
   842  0754  00FA               	movwf	___awmod@divisor+1
   843  0755  1283               	bcf	3,5	;RP0=0, select bank0
   844  0756  1303               	bcf	3,6	;RP1=0, select bank0
   845  0757  0837               	movf	_Himudity,w
   846  0758  00C2               	movwf	??_main
   847  0759  01C3               	clrf	??_main+1
   848  075A  0842               	movf	??_main,w
   849  075B  00FB               	movwf	___awmod@dividend
   850  075C  0843               	movf	??_main+1,w
   851  075D  00FC               	movwf	___awmod@dividend+1
   852  075E  120A  118A  24F5  120A  118A  	fcall	___awmod
   853  0763  0879               	movf	?___awmod,w
   854  0764  3E30               	addlw	48
   855  0765  120A  118A  23C0  120A  118A  	fcall	_lcd_data
   856                           
   857                           ;main.c: 64: lcd_data(0xDF);
   858  076A  30DF               	movlw	223
   859  076B  120A  118A  23C0  120A  118A  	fcall	_lcd_data
   860                           
   861                           ;main.c: 65: lcd_puts("C   ");
   862  0770  3082               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   863  0771  120A  118A  2448  120A  118A  	fcall	_lcd_puts
   864                           
   865                           ;main.c: 66: lcd_com (0xC0);
   866  0776  30C0               	movlw	192
   867  0777  120A  118A  24AA  120A  118A  	fcall	_lcd_com
   868                           
   869                           ;main.c: 67: lcd_puts("Humidity: ");
   870  077C  305C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   871  077D  120A  118A  2448  120A  118A  	fcall	_lcd_puts
   872                           
   873                           ;main.c: 69: lcd_data(48 + ((RH / 10) % 10));
   874  0782  300A               	movlw	10
   875  0783  00F9               	movwf	___awmod@divisor
   876  0784  3000               	movlw	0
   877  0785  00FA               	movwf	___awmod@divisor+1
   878  0786  300A               	movlw	10
   879  0787  00F0               	movwf	___awdiv@divisor
   880  0788  3000               	movlw	0
   881  0789  00F1               	movwf	___awdiv@divisor+1
   882  078A  1283               	bcf	3,5	;RP0=0, select bank0
   883  078B  1303               	bcf	3,6	;RP1=0, select bank0
   884  078C  0838               	movf	_RH,w
   885  078D  00C2               	movwf	??_main
   886  078E  01C3               	clrf	??_main+1
   887  078F  0842               	movf	??_main,w
   888  0790  00F2               	movwf	___awdiv@dividend
   889  0791  0843               	movf	??_main+1,w
   890  0792  00F3               	movwf	___awdiv@dividend+1
   891  0793  120A  118A  2542  120A  118A  	fcall	___awdiv
   892  0798  0871               	movf	?___awdiv+1,w
   893  0799  00FC               	movwf	___awmod@dividend+1
   894  079A  0870               	movf	?___awdiv,w
   895  079B  00FB               	movwf	___awmod@dividend
   896  079C  120A  118A  24F5  120A  118A  	fcall	___awmod
   897  07A1  0879               	movf	?___awmod,w
   898  07A2  3E30               	addlw	48
   899  07A3  120A  118A  23C0  120A  118A  	fcall	_lcd_data
   900                           
   901                           ;main.c: 70: lcd_data(48 + (RH % 10));
   902  07A8  300A               	movlw	10
   903  07A9  00F9               	movwf	___awmod@divisor
   904  07AA  3000               	movlw	0
   905  07AB  00FA               	movwf	___awmod@divisor+1
   906  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   907  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   908  07AE  0838               	movf	_RH,w
   909  07AF  00C2               	movwf	??_main
   910  07B0  01C3               	clrf	??_main+1
   911  07B1  0842               	movf	??_main,w
   912  07B2  00FB               	movwf	___awmod@dividend
   913  07B3  0843               	movf	??_main+1,w
   914  07B4  00FC               	movwf	___awmod@dividend+1
   915  07B5  120A  118A  24F5  120A  118A  	fcall	___awmod
   916  07BA  0879               	movf	?___awmod,w
   917  07BB  3E30               	addlw	48
   918  07BC  120A  118A  23C0  120A  118A  	fcall	_lcd_data
   919                           
   920                           ;main.c: 71: lcd_puts("%  ");
   921  07C1  3087               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   922  07C2  2FDD               	goto	L1
   923  07C3                     l1264:	
   924                           ;main.c: 72: }
   925                           
   926                           
   927                           ;main.c: 73: else{
   928                           ;main.c: 74: lcd_puts("Check sum error");
   929  07C3  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   930  07C4  2FDD               	goto	L1
   931  07C5                     l1266:	
   932                           ;main.c: 75: }
   933                           ;main.c: 76: }
   934                           
   935                           
   936                           ;main.c: 77: else {
   937                           ;main.c: 78: clear_screen();
   938  07C5  120A  118A  23FC  120A  118A  	fcall	_clear_screen
   939                           
   940                           ;main.c: 79: lcd_com (0x80);
   941  07CA  3080               	movlw	128
   942  07CB  120A  118A  24AA  120A  118A  	fcall	_lcd_com
   943                           
   944                           ;main.c: 80: lcd_puts("Error!!!");
   945  07D0  3072               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   946  07D1  120A  118A  2448  120A  118A  	fcall	_lcd_puts
   947                           
   948                           ;main.c: 81: lcd_com (0xC0);
   949  07D6  30C0               	movlw	192
   950  07D7  120A  118A  24AA  120A  118A  	fcall	_lcd_com
   951                           
   952                           ;main.c: 82: lcd_puts("No Response.");
   953  07DC  3042               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   954  07DD                     L1:	
   955  07DD  120A  118A  2448  120A  118A  	fcall	_lcd_puts
   956                           
   957                           ;main.c: 83: }
   958                           ;main.c: 84: _delay((unsigned long)((1000)*(20000000/4000.0)));
   959  07E2  301A               	movlw	26
   960  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   961  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   962  07E5  00C4               	movwf	??_main+2
   963  07E6  305E               	movlw	94
   964  07E7  00C3               	movwf	??_main+1
   965  07E8  3086               	movlw	134
   966  07E9  00C2               	movwf	??_main
   967  07EA                     u1037:	
   968  07EA  0BC2               	decfsz	??_main,f
   969  07EB  2FEA               	goto	u1037
   970  07EC  0BC3               	decfsz	??_main+1,f
   971  07ED  2FEA               	goto	u1037
   972  07EE  0BC4               	decfsz	??_main+2,f
   973  07EF  2FEA               	goto	u1037
   974  07F0  0000               	nop
   975  07F1  2EA1               	goto	l1228
   976  07F2                     __end_of_main:	
   977                           
   978                           	psect	text1
   979  03CA                     __ptext1:	
   980 ;; *************** function _system_init *****************
   981 ;; Defined at:
   982 ;;		line 136 in file "main.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0
   999 ;;      Totals:         0       0       0       0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    6
  1003 ;; This function calls:
  1004 ;;		_introduction_screen
  1005 ;;		_lcd_init
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _system_init
  1013  03CA                     _system_init:	
  1014                           
  1015                           ;main.c: 137: TRISB = 0;
  1016                           
  1017                           ;incstack = 0
  1018                           ; Regs used in _system_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1019  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1020  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1021  03CC  0186               	clrf	6	;volatile
  1022                           
  1023                           ;main.c: 138: lcd_init();
  1024  03CD  120A  118A  260D  120A  118A  	fcall	_lcd_init
  1025                           
  1026                           ;main.c: 139: introduction_screen();
  1027  03D2  120A  118A  259B   	fcall	_introduction_screen
  1028  03D5  0008               	return
  1029  03D6                     __end_of_system_init:	
  1030                           
  1031                           	psect	text2
  1032  060D                     __ptext2:	
  1033 ;; *************** function _lcd_init *****************
  1034 ;; Defined at:
  1035 ;;		line 73 in file "supporing_cfile/lcd.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0, pclath, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    2
  1056 ;; This function calls:
  1057 ;;		_delay
  1058 ;;		_lcd_com
  1059 ;;		_lcd_init_write
  1060 ;; This function is called by:
  1061 ;;		_system_init
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _lcd_init
  1067  060D                     _lcd_init:	
  1068                           
  1069                           ;lcd.c: 75: delay(300);
  1070                           
  1071                           ;incstack = 0
  1072                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1073  060D  302C               	movlw	44
  1074  060E  00F0               	movwf	delay@j
  1075  060F  3001               	movlw	1
  1076  0610  00F1               	movwf	delay@j+1
  1077  0611  120A  118A  23D6  120A  118A  	fcall	_delay
  1078                           
  1079                           ;lcd.c: 76: lcd_init_write(0x30);
  1080  0616  3030               	movlw	48
  1081  0617  120A  118A  23E9  120A  118A  	fcall	_lcd_init_write
  1082                           
  1083                           ;lcd.c: 77: delay(300);
  1084  061C  302C               	movlw	44
  1085  061D  00F0               	movwf	delay@j
  1086  061E  3001               	movlw	1
  1087  061F  00F1               	movwf	delay@j+1
  1088  0620  120A  118A  23D6  120A  118A  	fcall	_delay
  1089                           
  1090                           ;lcd.c: 78: lcd_init_write(0x30);
  1091  0625  3030               	movlw	48
  1092  0626  120A  118A  23E9  120A  118A  	fcall	_lcd_init_write
  1093                           
  1094                           ;lcd.c: 79: delay(300);
  1095  062B  302C               	movlw	44
  1096  062C  00F0               	movwf	delay@j
  1097  062D  3001               	movlw	1
  1098  062E  00F1               	movwf	delay@j+1
  1099  062F  120A  118A  23D6  120A  118A  	fcall	_delay
  1100                           
  1101                           ;lcd.c: 80: lcd_init_write(0x30);
  1102  0634  3030               	movlw	48
  1103  0635  120A  118A  23E9  120A  118A  	fcall	_lcd_init_write
  1104                           
  1105                           ;lcd.c: 81: delay(300);
  1106  063A  302C               	movlw	44
  1107  063B  00F0               	movwf	delay@j
  1108  063C  3001               	movlw	1
  1109  063D  00F1               	movwf	delay@j+1
  1110  063E  120A  118A  23D6  120A  118A  	fcall	_delay
  1111                           
  1112                           ;lcd.c: 82: lcd_init_write(0x20);
  1113  0643  3020               	movlw	32
  1114  0644  120A  118A  23E9  120A  118A  	fcall	_lcd_init_write
  1115                           
  1116                           ;lcd.c: 83: delay(300);
  1117  0649  302C               	movlw	44
  1118  064A  00F0               	movwf	delay@j
  1119  064B  3001               	movlw	1
  1120  064C  00F1               	movwf	delay@j+1
  1121  064D  120A  118A  23D6  120A  118A  	fcall	_delay
  1122                           
  1123                           ;lcd.c: 84: lcd_com(0xC);
  1124  0652  300C               	movlw	12
  1125  0653  120A  118A  24AA  120A  118A  	fcall	_lcd_com
  1126                           
  1127                           ;lcd.c: 86: delay(300);
  1128  0658  302C               	movlw	44
  1129  0659  00F0               	movwf	delay@j
  1130  065A  3001               	movlw	1
  1131  065B  00F1               	movwf	delay@j+1
  1132  065C  120A  118A  23D6  120A  118A  	fcall	_delay
  1133                           
  1134                           ;lcd.c: 87: lcd_com(4);
  1135  0661  3004               	movlw	4
  1136  0662  120A  118A  24AA  120A  118A  	fcall	_lcd_com
  1137                           
  1138                           ;lcd.c: 88: delay(300);
  1139  0667  302C               	movlw	44
  1140  0668  00F0               	movwf	delay@j
  1141  0669  3001               	movlw	1
  1142  066A  00F1               	movwf	delay@j+1
  1143  066B  120A  118A  23D6  120A  118A  	fcall	_delay
  1144                           
  1145                           ;lcd.c: 89: lcd_com(0x85);
  1146  0670  3085               	movlw	133
  1147  0671  120A  118A  24AA  120A  118A  	fcall	_lcd_com
  1148                           
  1149                           ;lcd.c: 90: delay(300);
  1150  0676  302C               	movlw	44
  1151  0677  00F0               	movwf	delay@j
  1152  0678  3001               	movlw	1
  1153  0679  00F1               	movwf	delay@j+1
  1154  067A  120A  118A  23D6  120A  118A  	fcall	_delay
  1155                           
  1156                           ;lcd.c: 91: lcd_com(6);
  1157  067F  3006               	movlw	6
  1158  0680  120A  118A  24AA  120A  118A  	fcall	_lcd_com
  1159                           
  1160                           ;lcd.c: 92: delay(300);
  1161  0685  302C               	movlw	44
  1162  0686  00F0               	movwf	delay@j
  1163  0687  3001               	movlw	1
  1164  0688  00F1               	movwf	delay@j+1
  1165  0689  120A  118A  23D6  120A  118A  	fcall	_delay
  1166                           
  1167                           ;lcd.c: 93: lcd_com(1);
  1168  068E  3001               	movlw	1
  1169  068F  120A  118A  24AA  120A  118A  	fcall	_lcd_com
  1170                           
  1171                           ;lcd.c: 94: delay(300);
  1172  0694  302C               	movlw	44
  1173  0695  00F0               	movwf	delay@j
  1174  0696  3001               	movlw	1
  1175  0697  00F1               	movwf	delay@j+1
  1176  0698  120A  118A  23D6   	fcall	_delay
  1177  069B  0008               	return
  1178  069C                     __end_of_lcd_init:	
  1179                           
  1180                           	psect	text3
  1181  03E9                     __ptext3:	
  1182 ;; *************** function _lcd_init_write *****************
  1183 ;; Defined at:
  1184 ;;		line 29 in file "supporing_cfile/lcd.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  a               1    wreg     unsigned char 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  a               1    4[COMMON] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, pclath, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         1       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0
  1201 ;;      Totals:         1       0       0       0       0
  1202 ;;Total ram usage:        1 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    1
  1205 ;; This function calls:
  1206 ;;		_delay
  1207 ;; This function is called by:
  1208 ;;		_lcd_init
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function _lcd_init_write
  1214  03E9                     _lcd_init_write:	
  1215                           
  1216                           ;incstack = 0
  1217                           ; Regs used in _lcd_init_write: [wreg+status,2+status,0+pclath+cstack]
  1218                           ;lcd_init_write@a stored from wreg
  1219  03E9  00F4               	movwf	lcd_init_write@a
  1220                           
  1221                           ;lcd.c: 31: PORTBbits.RB0=0;
  1222  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  1223  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  1224  03EC  1006               	bcf	6,0	;volatile
  1225                           
  1226                           ;lcd.c: 32: PORTBbits.RB1=0;
  1227  03ED  1086               	bcf	6,1	;volatile
  1228                           
  1229                           ;lcd.c: 33: PORTB=a;
  1230  03EE  0874               	movf	lcd_init_write@a,w
  1231  03EF  0086               	movwf	6	;volatile
  1232                           
  1233                           ;lcd.c: 34: PORTBbits.RB2=1;
  1234  03F0  1506               	bsf	6,2	;volatile
  1235                           
  1236                           ;lcd.c: 35: delay(300);
  1237  03F1  302C               	movlw	44
  1238  03F2  00F0               	movwf	delay@j
  1239  03F3  3001               	movlw	1
  1240  03F4  00F1               	movwf	delay@j+1
  1241  03F5  120A  118A  23D6   	fcall	_delay
  1242                           
  1243                           ;lcd.c: 36: PORTBbits.RB2=0;
  1244  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  1245  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  1246  03FA  1106               	bcf	6,2	;volatile
  1247  03FB  0008               	return
  1248  03FC                     __end_of_lcd_init_write:	
  1249                           
  1250                           	psect	text4
  1251  059B                     __ptext4:	
  1252 ;; *************** function _introduction_screen *****************
  1253 ;; Defined at:
  1254 ;;		line 159 in file "main.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         0       0       0       0       0
  1269 ;;      Locals:         0       0       0       0       0
  1270 ;;      Temps:          0       3       0       0       0
  1271 ;;      Totals:         0       3       0       0       0
  1272 ;;Total ram usage:        3 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    5
  1275 ;; This function calls:
  1276 ;;		_clear_screen
  1277 ;;		_lcd_com
  1278 ;;		_lcd_puts
  1279 ;; This function is called by:
  1280 ;;		_system_init
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _introduction_screen
  1286  059B                     _introduction_screen:	
  1287                           
  1288                           ;main.c: 160: lcd_com(0x80);
  1289                           
  1290                           ;incstack = 0
  1291                           ; Regs used in _introduction_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1292  059B  3080               	movlw	128
  1293  059C  120A  118A  24AA  120A  118A  	fcall	_lcd_com
  1294                           
  1295                           ;main.c: 161: lcd_puts("Welcome to");
  1296  05A1  3067               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1297  05A2  120A  118A  2448  120A  118A  	fcall	_lcd_puts
  1298                           
  1299                           ;main.c: 162: lcd_com(0xC0);
  1300  05A7  30C0               	movlw	192
  1301  05A8  120A  118A  24AA  120A  118A  	fcall	_lcd_com
  1302                           
  1303                           ;main.c: 163: lcd_puts("circuit Digest");
  1304  05AD  3033               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1305  05AE  120A  118A  2448  120A  118A  	fcall	_lcd_puts
  1306                           
  1307                           ;main.c: 164: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1308  05B3  301A               	movlw	26
  1309  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1310  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1311  05B6  00C1               	movwf	??_introduction_screen+2
  1312  05B7  305E               	movlw	94
  1313  05B8  00C0               	movwf	??_introduction_screen+1
  1314  05B9  3086               	movlw	134
  1315  05BA  00BF               	movwf	??_introduction_screen
  1316  05BB                     u1047:	
  1317  05BB  0BBF               	decfsz	??_introduction_screen,f
  1318  05BC  2DBB               	goto	u1047
  1319  05BD  0BC0               	decfsz	??_introduction_screen+1,f
  1320  05BE  2DBB               	goto	u1047
  1321  05BF  0BC1               	decfsz	??_introduction_screen+2,f
  1322  05C0  2DBB               	goto	u1047
  1323  05C1  0000               	nop
  1324                           
  1325                           ;main.c: 165: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1326  05C2  301A               	movlw	26
  1327  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1328  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1329  05C5  00C1               	movwf	??_introduction_screen+2
  1330  05C6  305E               	movlw	94
  1331  05C7  00C0               	movwf	??_introduction_screen+1
  1332  05C8  3086               	movlw	134
  1333  05C9  00BF               	movwf	??_introduction_screen
  1334  05CA                     u1057:	
  1335  05CA  0BBF               	decfsz	??_introduction_screen,f
  1336  05CB  2DCA               	goto	u1057
  1337  05CC  0BC0               	decfsz	??_introduction_screen+1,f
  1338  05CD  2DCA               	goto	u1057
  1339  05CE  0BC1               	decfsz	??_introduction_screen+2,f
  1340  05CF  2DCA               	goto	u1057
  1341  05D0  0000               	nop
  1342                           
  1343                           ;main.c: 166: clear_screen();
  1344  05D1  120A  118A  23FC  120A  118A  	fcall	_clear_screen
  1345                           
  1346                           ;main.c: 167: lcd_com(0x80);
  1347  05D6  3080               	movlw	128
  1348  05D7  120A  118A  24AA  120A  118A  	fcall	_lcd_com
  1349                           
  1350                           ;main.c: 168: lcd_puts("DHT11 Sensor");
  1351  05DC  304F               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1352  05DD  120A  118A  2448  120A  118A  	fcall	_lcd_puts
  1353                           
  1354                           ;main.c: 169: lcd_com(0xC0);
  1355  05E2  30C0               	movlw	192
  1356  05E3  120A  118A  24AA  120A  118A  	fcall	_lcd_com
  1357                           
  1358                           ;main.c: 170: lcd_puts("with PIC16F877A");
  1359  05E8  3013               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1360  05E9  120A  118A  2448  120A  118A  	fcall	_lcd_puts
  1361                           
  1362                           ;main.c: 171: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1363  05EE  301A               	movlw	26
  1364  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1365  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1366  05F1  00C1               	movwf	??_introduction_screen+2
  1367  05F2  305E               	movlw	94
  1368  05F3  00C0               	movwf	??_introduction_screen+1
  1369  05F4  3086               	movlw	134
  1370  05F5  00BF               	movwf	??_introduction_screen
  1371  05F6                     u1067:	
  1372  05F6  0BBF               	decfsz	??_introduction_screen,f
  1373  05F7  2DF6               	goto	u1067
  1374  05F8  0BC0               	decfsz	??_introduction_screen+1,f
  1375  05F9  2DF6               	goto	u1067
  1376  05FA  0BC1               	decfsz	??_introduction_screen+2,f
  1377  05FB  2DF6               	goto	u1067
  1378  05FC  0000               	nop
  1379                           
  1380                           ;main.c: 172: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1381  05FD  301A               	movlw	26
  1382  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1383  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0600  00C1               	movwf	??_introduction_screen+2
  1385  0601  305E               	movlw	94
  1386  0602  00C0               	movwf	??_introduction_screen+1
  1387  0603  3086               	movlw	134
  1388  0604  00BF               	movwf	??_introduction_screen
  1389  0605                     u1077:	
  1390  0605  0BBF               	decfsz	??_introduction_screen,f
  1391  0606  2E05               	goto	u1077
  1392  0607  0BC0               	decfsz	??_introduction_screen+1,f
  1393  0608  2E05               	goto	u1077
  1394  0609  0BC1               	decfsz	??_introduction_screen+2,f
  1395  060A  2E05               	goto	u1077
  1396  060B  0000               	nop
  1397  060C  0008               	return
  1398  060D                     __end_of_introduction_screen:	
  1399                           
  1400                           	psect	text5
  1401  03FC                     __ptext5:	
  1402 ;; *************** function _clear_screen *****************
  1403 ;; Defined at:
  1404 ;;		line 147 in file "main.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1418 ;;      Params:         0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0
  1421 ;;      Totals:         0       0       0       0       0
  1422 ;;Total ram usage:        0 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    4
  1425 ;; This function calls:
  1426 ;;		_lcd_com
  1427 ;;		_lcd_puts
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;;		_introduction_screen
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _clear_screen
  1436  03FC                     _clear_screen:	
  1437                           
  1438                           ;main.c: 148: lcd_com(0x80);
  1439                           
  1440                           ;incstack = 0
  1441                           ; Regs used in _clear_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1442  03FC  3080               	movlw	128
  1443  03FD  120A  118A  24AA  120A  118A  	fcall	_lcd_com
  1444                           
  1445                           ;main.c: 149: lcd_puts("                ");
  1446  0402  3002               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1447  0403  120A  118A  2448  120A  118A  	fcall	_lcd_puts
  1448                           
  1449                           ;main.c: 150: lcd_com(0xC0);
  1450  0408  30C0               	movlw	192
  1451  0409  120A  118A  24AA  120A  118A  	fcall	_lcd_com
  1452                           
  1453                           ;main.c: 151: lcd_puts("                ");
  1454  040E  3002               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1455  040F  120A  118A  2448   	fcall	_lcd_puts
  1456  0412  0008               	return
  1457  0413                     __end_of_clear_screen:	
  1458                           
  1459                           	psect	text6
  1460  0448                     __ptext6:	
  1461 ;; *************** function _lcd_puts *****************
  1462 ;; Defined at:
  1463 ;;		line 96 in file "supporing_cfile/lcd.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  str             1    wreg     PTR unsigned char 
  1466 ;;		 -> STR_13(16), STR_12(13), STR_11(15), STR_10(11), 
  1467 ;;		 -> STR_9(17), STR_8(17), STR_7(13), STR_6(9), 
  1468 ;;		 -> STR_5(16), STR_4(4), STR_3(11), STR_2(5), 
  1469 ;;		 -> STR_1(7), 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  str             1   11[COMMON] PTR unsigned char 
  1472 ;;		 -> STR_13(16), STR_12(13), STR_11(15), STR_10(11), 
  1473 ;;		 -> STR_9(17), STR_8(17), STR_7(13), STR_6(9), 
  1474 ;;		 -> STR_5(16), STR_4(4), STR_3(11), STR_2(5), 
  1475 ;;		 -> STR_1(7), 
  1476 ;;  i               2    9[COMMON] unsigned int 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         3       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0
  1489 ;;      Totals:         3       0       0       0       0
  1490 ;;Total ram usage:        3 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    3
  1493 ;; This function calls:
  1494 ;;		_lcd_data
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;;		_clear_screen
  1498 ;;		_introduction_screen
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _lcd_puts
  1504  0448                     _lcd_puts:	
  1505                           
  1506                           ;incstack = 0
  1507                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1508                           ;lcd_puts@str stored from wreg
  1509  0448  00FB               	movwf	lcd_puts@str
  1510                           
  1511                           ;lcd.c: 98: unsigned int i=0;
  1512  0449  01F9               	clrf	lcd_puts@i
  1513  044A  01FA               	clrf	lcd_puts@i+1
  1514  044B                     l1054:	
  1515                           ;lcd.c: 99: for(;str[i]!=0;i++)
  1516                           
  1517  044B  0879               	movf	lcd_puts@i,w
  1518  044C  077B               	addwf	lcd_puts@str,w
  1519  044D  0084               	movwf	4
  1520  044E  120A  118A  2003  120A  118A  	fcall	stringdir
  1521  0453  3A00               	xorlw	0
  1522  0454  1903               	btfsc	3,2
  1523  0455  0008               	return
  1524                           
  1525                           ;lcd.c: 100: lcd_data(str[i]);
  1526  0456  0879               	movf	lcd_puts@i,w
  1527  0457  077B               	addwf	lcd_puts@str,w
  1528  0458  0084               	movwf	4
  1529  0459  120A  118A  2003  120A  118A  	fcall	stringdir
  1530  045E  120A  118A  23C0  120A  118A  	fcall	_lcd_data
  1531  0463  3001               	movlw	1
  1532  0464  07F9               	addwf	lcd_puts@i,f
  1533  0465  1803               	skipnc
  1534  0466  0AFA               	incf	lcd_puts@i+1,f
  1535  0467  3000               	movlw	0
  1536  0468  07FA               	addwf	lcd_puts@i+1,f
  1537  0469  2C4B               	goto	l1054
  1538  046A                     __end_of_lcd_puts:	
  1539                           
  1540                           	psect	text7
  1541  03C0                     __ptext7:	
  1542 ;; *************** function _lcd_data *****************
  1543 ;; Defined at:
  1544 ;;		line 67 in file "supporing_cfile/lcd.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  a               1    wreg     unsigned char 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  a               1    8[COMMON] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         0       0       0       0       0
  1559 ;;      Locals:         1       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0
  1561 ;;      Totals:         1       0       0       0       0
  1562 ;;Total ram usage:        1 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    2
  1565 ;; This function calls:
  1566 ;;		_lcd_com
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;;		_lcd_puts
  1570 ;;		_hex2lcd
  1571 ;;		_LCD_ScrollMessage
  1572 ;;		_lcd_print_number
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _lcd_data
  1578  03C0                     _lcd_data:	
  1579                           
  1580                           ;incstack = 0
  1581                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1582                           ;lcd_data@a stored from wreg
  1583  03C0  00F8               	movwf	lcd_data@a
  1584                           
  1585                           ;lcd.c: 69: status=1;
  1586  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1587  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1588  03C3  144C               	bsf	_status/(0+8),_status& (0+7)
  1589                           
  1590                           ;lcd.c: 70: PORTBbits.RB0=1;
  1591  03C4  1406               	bsf	6,0	;volatile
  1592                           
  1593                           ;lcd.c: 71: lcd_com(a);
  1594  03C5  0878               	movf	lcd_data@a,w
  1595  03C6  120A  118A  24AA   	fcall	_lcd_com
  1596  03C9  0008               	return
  1597  03CA                     __end_of_lcd_data:	
  1598                           
  1599                           	psect	text8
  1600  04AA                     __ptext8:	
  1601 ;; *************** function _lcd_com *****************
  1602 ;; Defined at:
  1603 ;;		line 40 in file "supporing_cfile/lcd.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  a               1    wreg     unsigned char 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  a               1    6[COMMON] unsigned char 
  1608 ;;  temp            1    7[COMMON] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, pclath, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1618 ;;      Params:         0       0       0       0       0
  1619 ;;      Locals:         2       0       0       0       0
  1620 ;;      Temps:          2       0       0       0       0
  1621 ;;      Totals:         4       0       0       0       0
  1622 ;;Total ram usage:        4 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    1
  1625 ;; This function calls:
  1626 ;;		_delay
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;;		_clear_screen
  1630 ;;		_introduction_screen
  1631 ;;		_lcd_data
  1632 ;;		_lcd_init
  1633 ;;		_LCD_ScrollMessage
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _lcd_com
  1639  04AA                     _lcd_com:	
  1640                           
  1641                           ;incstack = 0
  1642                           ; Regs used in _lcd_com: [wreg+status,2+status,0+pclath+cstack]
  1643                           ;lcd_com@a stored from wreg
  1644  04AA  00F6               	movwf	lcd_com@a
  1645                           
  1646                           ;lcd.c: 42: unsigned char temp;
  1647                           ;lcd.c: 43: if(status)
  1648  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1649  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1650  04AD  1C4C               	btfss	_status/(0+8),_status& (0+7)
  1651  04AE  2CB1               	goto	l106
  1652                           
  1653                           ;lcd.c: 44: {
  1654                           ;lcd.c: 45: status=0;
  1655  04AF  104C               	bcf	_status/(0+8),_status& (0+7)
  1656                           
  1657                           ;lcd.c: 46: goto next;
  1658  04B0  2CB2               	goto	l107
  1659  04B1                     l106:	
  1660                           
  1661                           ;lcd.c: 47: }
  1662                           ;lcd.c: 48: PORTBbits.RB0=0;
  1663  04B1  1006               	bcf	6,0	;volatile
  1664  04B2                     l107:	
  1665                           ;lcd.c: 49: next:
  1666                           
  1667                           
  1668                           ;lcd.c: 50: PORTBbits.RB1=0;
  1669  04B2  1086               	bcf	6,1	;volatile
  1670                           
  1671                           ;lcd.c: 51: temp=a;
  1672  04B3  0876               	movf	lcd_com@a,w
  1673  04B4  00F4               	movwf	??_lcd_com
  1674  04B5  0874               	movf	??_lcd_com,w
  1675  04B6  00F7               	movwf	lcd_com@temp
  1676                           
  1677                           ;lcd.c: 52: temp&=0xf0;
  1678  04B7  30F0               	movlw	240
  1679  04B8  00F4               	movwf	??_lcd_com
  1680  04B9  0874               	movf	??_lcd_com,w
  1681  04BA  05F7               	andwf	lcd_com@temp,f
  1682                           
  1683                           ;lcd.c: 53: PORTB&=0x0f;
  1684  04BB  300F               	movlw	15
  1685  04BC  00F4               	movwf	??_lcd_com
  1686  04BD  0874               	movf	??_lcd_com,w
  1687  04BE  0586               	andwf	6,f	;volatile
  1688                           
  1689                           ;lcd.c: 54: PORTB|=temp;
  1690  04BF  0877               	movf	lcd_com@temp,w
  1691  04C0  00F4               	movwf	??_lcd_com
  1692  04C1  0874               	movf	??_lcd_com,w
  1693  04C2  0486               	iorwf	6,f	;volatile
  1694                           
  1695                           ;lcd.c: 55: PORTBbits.RB2=1;
  1696  04C3  1506               	bsf	6,2	;volatile
  1697                           
  1698                           ;lcd.c: 56: delay(300);
  1699  04C4  302C               	movlw	44
  1700  04C5  00F0               	movwf	delay@j
  1701  04C6  3001               	movlw	1
  1702  04C7  00F1               	movwf	delay@j+1
  1703  04C8  120A  118A  23D6  120A  118A  	fcall	_delay
  1704                           
  1705                           ;lcd.c: 57: PORTBbits.RB2=0;
  1706  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  1707  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  1708  04CF  1106               	bcf	6,2	;volatile
  1709                           
  1710                           ;lcd.c: 58: temp=a<<4;
  1711  04D0  0876               	movf	lcd_com@a,w
  1712  04D1  00F4               	movwf	??_lcd_com
  1713  04D2  3003               	movlw	3
  1714  04D3                     u475:	
  1715  04D3  1003               	clrc
  1716  04D4  0DF4               	rlf	??_lcd_com,f
  1717  04D5  3EFF               	addlw	-1
  1718  04D6  1D03               	skipz
  1719  04D7  2CD3               	goto	u475
  1720  04D8  1003               	clrc
  1721  04D9  0D74               	rlf	??_lcd_com,w
  1722  04DA  00F5               	movwf	??_lcd_com+1
  1723  04DB  0875               	movf	??_lcd_com+1,w
  1724  04DC  00F7               	movwf	lcd_com@temp
  1725                           
  1726                           ;lcd.c: 59: temp&=0xf0;
  1727  04DD  30F0               	movlw	240
  1728  04DE  00F4               	movwf	??_lcd_com
  1729  04DF  0874               	movf	??_lcd_com,w
  1730  04E0  05F7               	andwf	lcd_com@temp,f
  1731                           
  1732                           ;lcd.c: 60: PORTB&=0x0f;
  1733  04E1  300F               	movlw	15
  1734  04E2  00F4               	movwf	??_lcd_com
  1735  04E3  0874               	movf	??_lcd_com,w
  1736  04E4  0586               	andwf	6,f	;volatile
  1737                           
  1738                           ;lcd.c: 61: PORTB|=temp;
  1739  04E5  0877               	movf	lcd_com@temp,w
  1740  04E6  00F4               	movwf	??_lcd_com
  1741  04E7  0874               	movf	??_lcd_com,w
  1742  04E8  0486               	iorwf	6,f	;volatile
  1743                           
  1744                           ;lcd.c: 62: PORTBbits.RB2=1;
  1745  04E9  1506               	bsf	6,2	;volatile
  1746                           
  1747                           ;lcd.c: 63: delay(300);
  1748  04EA  302C               	movlw	44
  1749  04EB  00F0               	movwf	delay@j
  1750  04EC  3001               	movlw	1
  1751  04ED  00F1               	movwf	delay@j+1
  1752  04EE  120A  118A  23D6   	fcall	_delay
  1753                           
  1754                           ;lcd.c: 64: PORTBbits.RB2=0;
  1755  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1756  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1757  04F3  1106               	bcf	6,2	;volatile
  1758  04F4  0008               	return
  1759  04F5                     __end_of_lcd_com:	
  1760                           
  1761                           	psect	text9
  1762  03D6                     __ptext9:	
  1763 ;; *************** function _delay *****************
  1764 ;; Defined at:
  1765 ;;		line 23 in file "supporing_cfile/lcd.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  j               2    0[COMMON] unsigned int 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  i               2    2[COMMON] unsigned int 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1779 ;;      Params:         2       0       0       0       0
  1780 ;;      Locals:         2       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0
  1782 ;;      Totals:         4       0       0       0       0
  1783 ;;Total ram usage:        4 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_lcd_init_write
  1789 ;;		_lcd_com
  1790 ;;		_lcd_init
  1791 ;;		_LCD_ScrollMessage
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _delay
  1797  03D6                     _delay:	
  1798                           
  1799                           ;lcd.c: 25: unsigned int i=0;
  1800                           
  1801                           ;incstack = 0
  1802                           ; Regs used in _delay: [wreg+status,2]
  1803  03D6  01F2               	clrf	delay@i
  1804  03D7  01F3               	clrf	delay@i+1
  1805                           
  1806                           ;lcd.c: 26: for(i=0;i<j;i++);
  1807  03D8  01F2               	clrf	delay@i
  1808  03D9  01F3               	clrf	delay@i+1
  1809  03DA                     l97:	
  1810  03DA  0871               	movf	delay@j+1,w
  1811  03DB  0273               	subwf	delay@i+1,w
  1812  03DC  1D03               	skipz
  1813  03DD  2BE0               	goto	u455
  1814  03DE  0870               	movf	delay@j,w
  1815  03DF  0272               	subwf	delay@i,w
  1816  03E0                     u455:	
  1817  03E0  1803               	btfsc	3,0
  1818  03E1  0008               	return
  1819  03E2  3001               	movlw	1
  1820  03E3  07F2               	addwf	delay@i,f
  1821  03E4  1803               	skipnc
  1822  03E5  0AF3               	incf	delay@i+1,f
  1823  03E6  3000               	movlw	0
  1824  03E7  07F3               	addwf	delay@i+1,f
  1825  03E8  2BDA               	goto	l97
  1826  03E9                     __end_of_delay:	
  1827                           
  1828                           	psect	text10
  1829  046A                     __ptext10:	
  1830 ;; *************** function _read_dht11 *****************
  1831 ;; Defined at:
  1832 ;;		line 120 in file "main.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  for_count       1    3[COMMON] unsigned char 
  1837 ;;  data            1    2[COMMON] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      unsigned char 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         0       0       0       0       0
  1848 ;;      Locals:         2       0       0       0       0
  1849 ;;      Temps:          2       0       0       0       0
  1850 ;;      Totals:         4       0       0       0       0
  1851 ;;Total ram usage:        4 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _read_dht11
  1862  046A                     _read_dht11:	
  1863                           
  1864                           ;main.c: 121: char data, for_count;
  1865                           ;main.c: 122: for(for_count = 0; for_count < 8; for_count++){
  1866                           
  1867                           ;incstack = 0
  1868                           ; Regs used in _read_dht11: [wreg+status,2+status,0]
  1869  046A  01F3               	clrf	read_dht11@for_count
  1870  046B  3008               	movlw	8
  1871  046C  0273               	subwf	read_dht11@for_count,w
  1872  046D  1803               	btfsc	3,0
  1873  046E  2CA8               	goto	l1140
  1874  046F                     l67:	
  1875                           ;main.c: 123: while(!PORTDbits.RD5);
  1876                           
  1877  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0471  1E88               	btfss	8,5	;volatile
  1880  0472  2C6F               	goto	l67
  1881                           
  1882                           ;main.c: 124: _delay((unsigned long)((30)*(20000000/4000000.0)));
  1883  0473  3031               	movlw	49
  1884  0474  00F0               	movwf	??_read_dht11
  1885  0475                     u1087:	
  1886  0475  0BF0               	decfsz	??_read_dht11,f
  1887  0476  2C75               	goto	u1087
  1888  0477  2C78               	nop2	;nop
  1889                           
  1890                           ;main.c: 125: if(PORTDbits.RD5 == 0){
  1891  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1893  047A  1A88               	btfsc	8,5	;volatile
  1894  047B  2C8E               	goto	l1134
  1895                           
  1896                           ;main.c: 126: data&= ~(1<<(7 - for_count));
  1897  047C  3001               	movlw	1
  1898  047D  00F0               	movwf	??_read_dht11
  1899  047E  0373               	decf	read_dht11@for_count,w
  1900  047F  3AFF               	xorlw	255
  1901  0480  3E07               	addlw	7
  1902  0481  3E01               	addlw	1
  1903  0482  2C85               	goto	u544
  1904  0483                     u545:	
  1905  0483  1003               	clrc
  1906  0484  0DF0               	rlf	??_read_dht11,f
  1907  0485                     u544:	
  1908  0485  3EFF               	addlw	-1
  1909  0486  1D03               	skipz
  1910  0487  2C83               	goto	u545
  1911  0488  0870               	movf	??_read_dht11,w
  1912  0489  3AFF               	xorlw	255
  1913  048A  00F1               	movwf	??_read_dht11+1
  1914  048B  0871               	movf	??_read_dht11+1,w
  1915  048C  05F2               	andwf	read_dht11@data,f
  1916                           
  1917                           ;main.c: 127: }
  1918  048D  2CA0               	goto	l1136
  1919  048E                     l1134:	
  1920                           
  1921                           ;main.c: 128: else{
  1922                           ;main.c: 129: data|= (1 << (7 - for_count));
  1923  048E  3001               	movlw	1
  1924  048F  00F0               	movwf	??_read_dht11
  1925  0490  0373               	decf	read_dht11@for_count,w
  1926  0491  3AFF               	xorlw	255
  1927  0492  3E07               	addlw	7
  1928  0493  3E01               	addlw	1
  1929  0494  2C97               	goto	u554
  1930  0495                     u555:	
  1931  0495  1003               	clrc
  1932  0496  0DF0               	rlf	??_read_dht11,f
  1933  0497                     u554:	
  1934  0497  3EFF               	addlw	-1
  1935  0498  1D03               	skipz
  1936  0499  2C95               	goto	u555
  1937  049A  0870               	movf	??_read_dht11,w
  1938  049B  00F1               	movwf	??_read_dht11+1
  1939  049C  0871               	movf	??_read_dht11+1,w
  1940  049D  04F2               	iorwf	read_dht11@data,f
  1941  049E                     l72:	
  1942                           ;main.c: 130: while(PORTDbits.RD5);
  1943                           
  1944  049E  1A88               	btfsc	8,5	;volatile
  1945  049F  2C9E               	goto	l72
  1946  04A0                     l1136:	
  1947  04A0  3001               	movlw	1
  1948  04A1  00F0               	movwf	??_read_dht11
  1949  04A2  0870               	movf	??_read_dht11,w
  1950  04A3  07F3               	addwf	read_dht11@for_count,f
  1951  04A4  3008               	movlw	8
  1952  04A5  0273               	subwf	read_dht11@for_count,w
  1953  04A6  1C03               	skipc
  1954  04A7  2C6F               	goto	l67
  1955  04A8                     l1140:	
  1956                           
  1957                           ;main.c: 131: }
  1958                           ;main.c: 132: }
  1959                           ;main.c: 133: return data;
  1960  04A8  0872               	movf	read_dht11@data,w
  1961  04A9  0008               	return
  1962  04AA                     __end_of_read_dht11:	
  1963                           
  1964                           	psect	text11
  1965  042D                     __ptext11:	
  1966 ;; *************** function _find_response *****************
  1967 ;; Defined at:
  1968 ;;		line 105 in file "main.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0
  1984 ;;      Temps:          1       0       0       0       0
  1985 ;;      Totals:         1       0       0       0       0
  1986 ;;Total ram usage:        1 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _find_response
  1997  042D                     _find_response:	
  1998                           
  1999                           ;main.c: 106: Check_bit = 0;
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _find_response: [wreg+status,2]
  2003  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2004  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2005  042F  01B6               	clrf	_Check_bit
  2006                           
  2007                           ;main.c: 107: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2008  0430  3042               	movlw	66
  2009  0431  00F0               	movwf	??_find_response
  2010  0432                     u1097:	
  2011  0432  0BF0               	decfsz	??_find_response,f
  2012  0433  2C32               	goto	u1097
  2013  0434  0000               	nop
  2014                           
  2015                           ;main.c: 108: if (PORTDbits.RD5 == 0){
  2016  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0437  1A88               	btfsc	8,5	;volatile
  2019  0438  0008               	return
  2020                           
  2021                           ;main.c: 109: _delay((unsigned long)((80)*(20000000/4000000.0)));
  2022  0439  3085               	movlw	133
  2023  043A  00F0               	movwf	??_find_response
  2024  043B                     u1107:	
  2025  043B  0BF0               	decfsz	??_find_response,f
  2026  043C  2C3B               	goto	u1107
  2027                           
  2028                           ;main.c: 110: if (PORTDbits.RD5 == 1){
  2029  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2030  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2031  043F  1E88               	btfss	8,5	;volatile
  2032  0440  2C43               	goto	l1120
  2033                           
  2034                           ;main.c: 111: Check_bit = 1;
  2035  0441  01B6               	clrf	_Check_bit
  2036  0442  0AB6               	incf	_Check_bit,f
  2037  0443                     l1120:	
  2038                           
  2039                           ;main.c: 112: }
  2040                           ;main.c: 113: _delay((unsigned long)((50)*(20000000/4000000.0)));}
  2041  0443  3053               	movlw	83
  2042  0444  00F0               	movwf	??_find_response
  2043  0445                     u1117:	
  2044  0445  0BF0               	decfsz	??_find_response,f
  2045  0446  2C45               	goto	u1117
  2046  0447  0008               	return
  2047  0448                     __end_of_find_response:	
  2048                           
  2049                           	psect	text12
  2050  0413                     __ptext12:	
  2051 ;; *************** function _dht11_init *****************
  2052 ;; Defined at:
  2053 ;;		line 92 in file "main.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0
  2069 ;;      Temps:          2       0       0       0       0
  2070 ;;      Totals:         2       0       0       0       0
  2071 ;;Total ram usage:        2 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_main
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function _dht11_init
  2082  0413                     _dht11_init:	
  2083                           
  2084                           ;main.c: 93: TRISDbits.TRISD5= 0;
  2085                           
  2086                           ;incstack = 0
  2087                           ; Regs used in _dht11_init: [wreg]
  2088  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2089  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2090  0415  1288               	bcf	8,5	;volatile
  2091                           
  2092                           ;main.c: 94: PORTDbits.RD5 = 0;
  2093  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0418  1288               	bcf	8,5	;volatile
  2096                           
  2097                           ;main.c: 95: _delay((unsigned long)((18)*(20000000/4000.0)));
  2098  0419  3075               	movlw	117
  2099  041A  00F1               	movwf	??_dht11_init+1
  2100  041B  30E1               	movlw	225
  2101  041C  00F0               	movwf	??_dht11_init
  2102  041D                     u1127:	
  2103  041D  0BF0               	decfsz	??_dht11_init,f
  2104  041E  2C1D               	goto	u1127
  2105  041F  0BF1               	decfsz	??_dht11_init+1,f
  2106  0420  2C1D               	goto	u1127
  2107                           
  2108                           ;main.c: 96: PORTDbits.RD5 = 1;
  2109  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0423  1688               	bsf	8,5	;volatile
  2112                           
  2113                           ;main.c: 97: _delay((unsigned long)((30)*(20000000/4000000.0)));
  2114  0424  3031               	movlw	49
  2115  0425  00F0               	movwf	??_dht11_init
  2116  0426                     u1137:	
  2117  0426  0BF0               	decfsz	??_dht11_init,f
  2118  0427  2C26               	goto	u1137
  2119  0428  2C29               	nop2	;nop
  2120                           
  2121                           ;main.c: 98: TRISDbits.TRISD5 = 1;
  2122  0429  1683               	bsf	3,5	;RP0=1, select bank1
  2123  042A  1303               	bcf	3,6	;RP1=0, select bank1
  2124  042B  1688               	bsf	8,5	;volatile
  2125  042C  0008               	return
  2126  042D                     __end_of_dht11_init:	
  2127                           
  2128                           	psect	text13
  2129  04F5                     __ptext13:	
  2130 ;; *************** function ___awmod *****************
  2131 ;; Defined at:
  2132 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  divisor         2    9[COMMON] int 
  2135 ;;  dividend        2   11[COMMON] int 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  sign            1    1[BANK0 ] unsigned char 
  2138 ;;  counter         1    0[BANK0 ] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2    9[COMMON] int 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2148 ;;      Params:         4       0       0       0       0
  2149 ;;      Locals:         0       2       0       0       0
  2150 ;;      Temps:          1       0       0       0       0
  2151 ;;      Totals:         5       2       0       0       0
  2152 ;;Total ram usage:        7 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           
  2162                           ;psect for function ___awmod
  2163  04F5                     ___awmod:	
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2167  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2168  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2169  04F7  01C0               	clrf	___awmod@sign
  2170  04F8  1FFC               	btfss	___awmod@dividend+1,7
  2171  04F9  2D01               	goto	l1196
  2172  04FA  09FB               	comf	___awmod@dividend,f
  2173  04FB  09FC               	comf	___awmod@dividend+1,f
  2174  04FC  0AFB               	incf	___awmod@dividend,f
  2175  04FD  1903               	skipnz
  2176  04FE  0AFC               	incf	___awmod@dividend+1,f
  2177  04FF  01C0               	clrf	___awmod@sign
  2178  0500  0AC0               	incf	___awmod@sign,f
  2179  0501                     l1196:	
  2180  0501  1FFA               	btfss	___awmod@divisor+1,7
  2181  0502  2D08               	goto	l1200
  2182  0503  09F9               	comf	___awmod@divisor,f
  2183  0504  09FA               	comf	___awmod@divisor+1,f
  2184  0505  0AF9               	incf	___awmod@divisor,f
  2185  0506  1903               	skipnz
  2186  0507  0AFA               	incf	___awmod@divisor+1,f
  2187  0508                     l1200:	
  2188  0508  0879               	movf	___awmod@divisor,w
  2189  0509  047A               	iorwf	___awmod@divisor+1,w
  2190  050A  1903               	btfsc	3,2
  2191  050B  2D35               	goto	l1218
  2192  050C  01BF               	clrf	___awmod@counter
  2193  050D  0ABF               	incf	___awmod@counter,f
  2194  050E                     l1208:	
  2195  050E  1BFA               	btfsc	___awmod@divisor+1,7
  2196  050F  2D1C               	goto	l1210
  2197  0510  3001               	movlw	1
  2198  0511                     u715:	
  2199  0511  1003               	clrc
  2200  0512  0DF9               	rlf	___awmod@divisor,f
  2201  0513  0DFA               	rlf	___awmod@divisor+1,f
  2202  0514  3EFF               	addlw	-1
  2203  0515  1D03               	skipz
  2204  0516  2D11               	goto	u715
  2205  0517  3001               	movlw	1
  2206  0518  00FD               	movwf	??___awmod
  2207  0519  087D               	movf	??___awmod,w
  2208  051A  07BF               	addwf	___awmod@counter,f
  2209  051B  2D0E               	goto	l1208
  2210  051C                     l1210:	
  2211  051C  087A               	movf	___awmod@divisor+1,w
  2212  051D  027C               	subwf	___awmod@dividend+1,w
  2213  051E  1D03               	skipz
  2214  051F  2D22               	goto	u735
  2215  0520  0879               	movf	___awmod@divisor,w
  2216  0521  027B               	subwf	___awmod@dividend,w
  2217  0522                     u735:	
  2218  0522  1C03               	skipc
  2219  0523  2D2A               	goto	l1214
  2220  0524  0879               	movf	___awmod@divisor,w
  2221  0525  02FB               	subwf	___awmod@dividend,f
  2222  0526  087A               	movf	___awmod@divisor+1,w
  2223  0527  1C03               	skipc
  2224  0528  03FC               	decf	___awmod@dividend+1,f
  2225  0529  02FC               	subwf	___awmod@dividend+1,f
  2226  052A                     l1214:	
  2227  052A  3001               	movlw	1
  2228  052B                     u745:	
  2229  052B  1003               	clrc
  2230  052C  0CFA               	rrf	___awmod@divisor+1,f
  2231  052D  0CF9               	rrf	___awmod@divisor,f
  2232  052E  3EFF               	addlw	-1
  2233  052F  1D03               	skipz
  2234  0530  2D2B               	goto	u745
  2235  0531  3001               	movlw	1
  2236  0532  02BF               	subwf	___awmod@counter,f
  2237  0533  1D03               	btfss	3,2
  2238  0534  2D1C               	goto	l1210
  2239  0535                     l1218:	
  2240  0535  0840               	movf	___awmod@sign,w
  2241  0536  1903               	btfsc	3,2
  2242  0537  2D3D               	goto	l1222
  2243  0538  09FB               	comf	___awmod@dividend,f
  2244  0539  09FC               	comf	___awmod@dividend+1,f
  2245  053A  0AFB               	incf	___awmod@dividend,f
  2246  053B  1903               	skipnz
  2247  053C  0AFC               	incf	___awmod@dividend+1,f
  2248  053D                     l1222:	
  2249  053D  087C               	movf	___awmod@dividend+1,w
  2250  053E  00FA               	movwf	?___awmod+1
  2251  053F  087B               	movf	___awmod@dividend,w
  2252  0540  00F9               	movwf	?___awmod
  2253  0541  0008               	return
  2254  0542                     __end_of___awmod:	
  2255                           
  2256                           	psect	text14
  2257  0542                     __ptext14:	
  2258 ;; *************** function ___awdiv *****************
  2259 ;; Defined at:
  2260 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  divisor         2    0[COMMON] int 
  2263 ;;  dividend        2    2[COMMON] int 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  quotient        2    7[COMMON] int 
  2266 ;;  sign            1    6[COMMON] unsigned char 
  2267 ;;  counter         1    5[COMMON] unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  2    0[COMMON] int 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2277 ;;      Params:         4       0       0       0       0
  2278 ;;      Locals:         4       0       0       0       0
  2279 ;;      Temps:          1       0       0       0       0
  2280 ;;      Totals:         9       0       0       0       0
  2281 ;;Total ram usage:        9 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_main
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function ___awdiv
  2292  0542                     ___awdiv:	
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2296  0542  01F6               	clrf	___awdiv@sign
  2297  0543  1FF1               	btfss	___awdiv@divisor+1,7
  2298  0544  2D4C               	goto	l1152
  2299  0545  09F0               	comf	___awdiv@divisor,f
  2300  0546  09F1               	comf	___awdiv@divisor+1,f
  2301  0547  0AF0               	incf	___awdiv@divisor,f
  2302  0548  1903               	skipnz
  2303  0549  0AF1               	incf	___awdiv@divisor+1,f
  2304  054A  01F6               	clrf	___awdiv@sign
  2305  054B  0AF6               	incf	___awdiv@sign,f
  2306  054C                     l1152:	
  2307  054C  1FF3               	btfss	___awdiv@dividend+1,7
  2308  054D  2D57               	goto	l1158
  2309  054E  09F2               	comf	___awdiv@dividend,f
  2310  054F  09F3               	comf	___awdiv@dividend+1,f
  2311  0550  0AF2               	incf	___awdiv@dividend,f
  2312  0551  1903               	skipnz
  2313  0552  0AF3               	incf	___awdiv@dividend+1,f
  2314  0553  3001               	movlw	1
  2315  0554  00F4               	movwf	??___awdiv
  2316  0555  0874               	movf	??___awdiv,w
  2317  0556  06F6               	xorwf	___awdiv@sign,f
  2318  0557                     l1158:	
  2319  0557  01F7               	clrf	___awdiv@quotient
  2320  0558  01F8               	clrf	___awdiv@quotient+1
  2321  0559  0870               	movf	___awdiv@divisor,w
  2322  055A  0471               	iorwf	___awdiv@divisor+1,w
  2323  055B  1903               	btfsc	3,2
  2324  055C  2D8E               	goto	l1180
  2325  055D  01F5               	clrf	___awdiv@counter
  2326  055E  0AF5               	incf	___awdiv@counter,f
  2327  055F                     l1168:	
  2328  055F  1BF1               	btfsc	___awdiv@divisor+1,7
  2329  0560  2D6D               	goto	l1170
  2330  0561  3001               	movlw	1
  2331  0562                     u615:	
  2332  0562  1003               	clrc
  2333  0563  0DF0               	rlf	___awdiv@divisor,f
  2334  0564  0DF1               	rlf	___awdiv@divisor+1,f
  2335  0565  3EFF               	addlw	-1
  2336  0566  1D03               	skipz
  2337  0567  2D62               	goto	u615
  2338  0568  3001               	movlw	1
  2339  0569  00F4               	movwf	??___awdiv
  2340  056A  0874               	movf	??___awdiv,w
  2341  056B  07F5               	addwf	___awdiv@counter,f
  2342  056C  2D5F               	goto	l1168
  2343  056D                     l1170:	
  2344  056D  3001               	movlw	1
  2345  056E                     u635:	
  2346  056E  1003               	clrc
  2347  056F  0DF7               	rlf	___awdiv@quotient,f
  2348  0570  0DF8               	rlf	___awdiv@quotient+1,f
  2349  0571  3EFF               	addlw	-1
  2350  0572  1D03               	skipz
  2351  0573  2D6E               	goto	u635
  2352  0574  0871               	movf	___awdiv@divisor+1,w
  2353  0575  0273               	subwf	___awdiv@dividend+1,w
  2354  0576  1D03               	skipz
  2355  0577  2D7A               	goto	u645
  2356  0578  0870               	movf	___awdiv@divisor,w
  2357  0579  0272               	subwf	___awdiv@dividend,w
  2358  057A                     u645:	
  2359  057A  1C03               	skipc
  2360  057B  2D83               	goto	l1176
  2361  057C  0870               	movf	___awdiv@divisor,w
  2362  057D  02F2               	subwf	___awdiv@dividend,f
  2363  057E  0871               	movf	___awdiv@divisor+1,w
  2364  057F  1C03               	skipc
  2365  0580  03F3               	decf	___awdiv@dividend+1,f
  2366  0581  02F3               	subwf	___awdiv@dividend+1,f
  2367  0582  1477               	bsf	___awdiv@quotient,0
  2368  0583                     l1176:	
  2369  0583  3001               	movlw	1
  2370  0584                     u655:	
  2371  0584  1003               	clrc
  2372  0585  0CF1               	rrf	___awdiv@divisor+1,f
  2373  0586  0CF0               	rrf	___awdiv@divisor,f
  2374  0587  3EFF               	addlw	-1
  2375  0588  1D03               	skipz
  2376  0589  2D84               	goto	u655
  2377  058A  3001               	movlw	1
  2378  058B  02F5               	subwf	___awdiv@counter,f
  2379  058C  1D03               	btfss	3,2
  2380  058D  2D6D               	goto	l1170
  2381  058E                     l1180:	
  2382  058E  0876               	movf	___awdiv@sign,w
  2383  058F  1903               	btfsc	3,2
  2384  0590  2D96               	goto	l1184
  2385  0591  09F7               	comf	___awdiv@quotient,f
  2386  0592  09F8               	comf	___awdiv@quotient+1,f
  2387  0593  0AF7               	incf	___awdiv@quotient,f
  2388  0594  1903               	skipnz
  2389  0595  0AF8               	incf	___awdiv@quotient+1,f
  2390  0596                     l1184:	
  2391  0596  0878               	movf	___awdiv@quotient+1,w
  2392  0597  00F1               	movwf	?___awdiv+1
  2393  0598  0877               	movf	___awdiv@quotient,w
  2394  0599  00F0               	movwf	?___awdiv
  2395  059A  0008               	return
  2396  059B                     __end_of___awdiv:	
  2397  007E                     btemp	set	126	;btemp
  2398  007E                     wtemp	set	126
  2399  007E                     wtemp0	set	126
  2400  0080                     wtemp1	set	128
  2401  0082                     wtemp2	set	130
  2402  0084                     wtemp3	set	132
  2403  0086                     wtemp4	set	134
  2404  0088                     wtemp5	set	136
  2405  007F                     wtemp6	set	127
  2406  007E                     ttemp	set	126
  2407  007E                     ttemp0	set	126
  2408  0081                     ttemp1	set	129
  2409  0084                     ttemp2	set	132
  2410  0087                     ttemp3	set	135
  2411  007F                     ttemp4	set	127
  2412  007E                     ltemp	set	126
  2413  007E                     ltemp0	set	126
  2414  0082                     ltemp1	set	130
  2415  0086                     ltemp2	set	134
  2416  0080                     ltemp3	set	128


Data Sizes:
    Strings     137
    Constant    1
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_13(CODE[16]), STR_12(CODE[13]), STR_11(CODE[15]), STR_10(CODE[11]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[13]), STR_6(CODE[9]), 
		 -> STR_5(CODE[16]), STR_4(CODE[4]), STR_3(CODE[11]), STR_2(CODE[5]), 
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _lcd_init->_lcd_com
    _lcd_init_write->_delay
    _introduction_screen->_lcd_puts
    _clear_screen->_lcd_puts
    _lcd_puts->_lcd_data
    _lcd_data->_lcd_com
    _lcd_com->_delay
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    _system_init->_introduction_screen

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   14266
                                              3 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                       _clear_screen
                         _dht11_init
                      _find_response
                            _lcd_com
                           _lcd_data
                           _lcd_puts
                         _read_dht11
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0    7302
                _introduction_screen
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             0     0      0    2640
                              _delay
                            _lcd_com
                     _lcd_init_write
 ---------------------------------------------------------------------------------
 (3) _lcd_init_write                                       1     1      0     864
                                              4 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _introduction_screen                                  3     3      0    4662
                                              0 BANK0      3     3      0
                       _clear_screen
                            _lcd_com
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _clear_screen                                         0     0      0    2331
                            _lcd_com
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (3) _lcd_puts                                             3     3      0    1397
                                              9 COMMON     3     3      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (4) _lcd_data                                             1     1      0     956
                                              8 COMMON     1     1      0
                            _lcd_com
 ---------------------------------------------------------------------------------
 (3) _lcd_com                                              4     4      0     934
                                              4 COMMON     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                4     2      2     842
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _read_dht11                                           4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _find_response                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _dht11_init                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     720
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _clear_screen
     _lcd_com
       _delay
     _lcd_puts
       _lcd_data
         _lcd_com
           _delay
   _dht11_init
   _find_response
   _lcd_com
     _delay
   _lcd_data
     _lcd_com
       _delay
   _lcd_puts
     _lcd_data
       _lcd_com
         _delay
   _read_dht11
   _system_init
     _introduction_screen
       _clear_screen
         _lcd_com
           _delay
         _lcd_puts
           _lcd_data
             _lcd_com
               _delay
       _lcd_com
         _delay
       _lcd_puts
         _lcd_data
           _lcd_com
             _delay
     _lcd_init
       _delay
       _lcd_com
         _delay
       _lcd_init_write
         _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3B       3        0.0%
BITBANK0            50      0       1       4        1.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      2D       5       56.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3B      12        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Oct 07 13:36:34 2019

                           _c 003E                             pc 0002                   __CFG_CP$OFF 0000  
                 lcd_com@temp 0077                            l72 049E                            l67 046F  
                          l97 03DA                            _RH 0038                  ___awdiv@sign 0076  
                          fsr 0004           __end_of_system_init 03D6                           l106 04B1  
                         l107 04B2                  __CFG_CPD$OFF 0000                           u615 0562  
                         u455 03E0                           u544 0485                           u545 0483  
                         u554 0497                           u635 056E                           u715 0511  
                         u555 0495                           u475 04D3                           u645 057A  
                         u655 0584                           u735 0522                           u745 052B  
                         u785 0715                           _num 0020                           fsr0 0004  
                         indf 0000                  ___awmod@sign 0040                  __CFG_FOSC$HS 0000  
                __CFG_LVP$OFF 0000                          l1200 0508                          l1120 0443  
                        l1210 051C                          l1140 04A8                          l1222 053D  
                        l1214 052A                          l1134 048E                          l1054 044B  
                        l1152 054C                          l1208 050E                          l1136 04A0  
                        l1170 056D                          l1218 0535                          l1180 058E  
                        l1228 06A1                          l1158 0557                          l1184 0596  
                        l1176 0583                          l1168 055F                          l1264 07C3  
                        l1266 07C5                          l1196 0501                          STR_1 0083  
                        STR_2 008A                          STR_3 0064                          STR_4 008F  
                        STR_5 002B                          STR_6 007A                          STR_7 004A  
                        STR_8 000A                          STR_9 000A                          u1107 043B  
                        u1027 06A9                          u1117 0445                          u1037 07EA  
                        u1127 041D                          u1047 05BB                          u1137 0426  
                        u1057 05CA                          u1067 05F6                          u1077 0605  
                        u1087 0475                          u1097 0432                          _TMR0 0001  
                __CFG_WRT$OFF 0000                          _main 069C                          btemp 007E  
                 lcd_puts@str 007B                 __CFG_BOREN$ON 0000                          ltemp 007E  
                        start 0000                          ttemp 007E                          wtemp 007E  
                       ?_main 0070               __end_of___awdiv 059B                         STR_10 006F  
                       STR_11 003B                         STR_12 0057                         STR_13 001B  
               __CFG_WDTE$OFF 0000               __end_of___awmod 0542               ___awdiv@divisor 0070  
             ___awdiv@counter 0075                         _PORTB 0006               ??_find_response 0070  
                       _TRISB 0086                 __CFG_PWRTE$ON 0000          __end_of_clear_screen 0413  
             __end_of_lcd_com 04F5                         _delay 03D6                         pclath 000A  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F               __initialization 07F2  
                 _system_init 03CA                  __end_of_main 07F2                        ??_main 0042  
                      ?_delay 0070              ___awdiv@dividend 0072   __end_of_introduction_screen 060D  
            __end_of_lcd_data 03CA              __end_of_lcd_init 069C              __end_of_lcd_puts 046A  
                   ??___awdiv 0074                     ??___awmod 007D                        delay@i 0072  
                      delay@j 0070              ___awdiv@quotient 0077               ___awmod@divisor 0079  
             ___awmod@counter 003F                        _status 0260                     ??_lcd_com 0074  
            ??_lcd_init_write 0074       __end_of__initialization 07FC                __pcstackCOMMON 0070  
                  _dht11_init 0413                 __end_of_delay 03E9         __size_of_clear_screen 0017  
              _OPTION_REGbits 0081         TMR0_ISR@CountCallBack 0034                       ??_delay 0072  
                  __pbssBANK0 0020                    __pmaintext 069C                  _clear_screen 03FC  
                   ?_lcd_data 0070                     ?_lcd_init 0070                     ?_lcd_puts 0070  
                  __stringtab 0003                  ?_system_init 0070                   _Temp_byte_1 003C  
                 _Temp_byte_2 003D                   ?_dht11_init 0070                       ___awdiv 0542  
                     ___awmod 04F5                    _read_dht11 046A                       __ptext1 03CA  
                     __ptext2 060D                       __ptext3 03E9                       __ptext4 059B  
                     __ptext5 03FC                       __ptext6 0448                       __ptext7 03C0  
                     __ptext8 04AA                       __ptext9 03D6                       _lcd_com 04AA  
            ___awmod@dividend 007B         __end_of_find_response 0448                    ??_lcd_data 0078  
                     clrloop0 03B9                    ??_lcd_init 0078                    ??_lcd_puts 0079  
        end_of_initialization 07FC             __end_of_tmr0_mask 000A                     _PORTBbits 0006  
                   _PORTDbits 0008                     _TRISDbits 0088           __size_of_dht11_init 001A  
                   _RH_byte_1 0039                     _RH_byte_2 003A                     _Check_bit 0036  
             lcd_init_write@a 0074                   ?_read_dht11 0070  __size_of_introduction_screen 0072  
               __pbitbssBANK0 0260           start_initialization 07F2          __size_of_system_init 000C  
         read_dht11@for_count 0073                     ___latbits 0002                 __pcstackBANK0 003F  
           __size_of_lcd_data 000A             __size_of_lcd_init 008F           __size_of_read_dht11 0040  
           __size_of_lcd_puts 0022       __size_of_lcd_init_write 0013                  ??_dht11_init 0070  
                    ?___awdiv 0070                      ?___awmod 0079                     __pstrings 0003  
                    ?_lcd_com 0070                __size_of_delay 0013            __end_of_dht11_init 042D  
                   clear_ram0 03B8                     _tmr0_mask 0009                     lcd_data@a 0078  
                 __stringbase 0008                     lcd_puts@i 0079                read_dht11@data 0072  
                    _Himudity 0037           _introduction_screen 059B        __size_of_find_response 001B  
            __size_of___awdiv 0059              __size_of___awmod 004D                  ??_read_dht11 0070  
                    _Sumation 003B          ?_introduction_screen 0070            __end_of__stringtab 0009  
            __size_of_lcd_com 004B                      __ptext10 046A                      __ptext11 042D  
                    __ptext12 0413                      __ptext13 04F5                      __ptext14 0542  
                    _lcd_data 03C0                      _lcd_init 060D                      _lcd_puts 0448  
               __size_of_main 0156            __end_of_read_dht11 04AA                _lcd_init_write 03E9  
               ?_clear_screen 0070                      lcd_com@a 0076         ??_introduction_screen 003F  
                  _INTCONbits 000B                 _find_response 042D        __end_of_lcd_init_write 03FC  
                   stringcode 0003                ??_clear_screen 007C                 ??_system_init 007C  
                    stringdir 0003                      stringtab 0003                ?_find_response 0070  
             ?_lcd_init_write 0070  
