

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Feb 24 11:26:21 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.05
    28                           ; Generated 20/12/2018 GMT
    29                           ; 
    30                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0008                     _PORTD	set	8
   182  0005                     _PORTA	set	5
   183  0005                     _PORTAbits	set	5
   184  000B                     _INTCONbits	set	11
   185  001E                     _ADRESH	set	30
   186  001F                     _ADCON0	set	31
   187  00FA                     _GO_nDONE	set	250
   188  0043                     _RD3	set	67
   189  0041                     _RD1	set	65
   190  0047                     _RD7	set	71
   191  0046                     _RD6	set	70
   192  0045                     _RD5	set	69
   193  0044                     _RD4	set	68
   194  0087                     _TRISC	set	135
   195  0085                     _TRISA	set	133
   196  0088                     _TRISD	set	136
   197  009E                     _ADRESL	set	158
   198  009F                     _ADCON1	set	159
   199                           
   200                           	psect	strings
   201  0003                     __pstrings:	
   202  0003                     stringtab:	
   203  0003                     __stringtab:	
   204  0003                     stringcode:	
   205                           ;	String table - string pointers are 1 byte each
   206                           
   207  0003                     stringdir:	
   208  0003  3000               	movlw	high stringdir
   209  0004  008A               	movwf	10
   210  0005  0804               	movf	4,w
   211  0006  0A84               	incf	4,f
   212  0007  0782               	addwf	2,f
   213  0008                     __stringbase:	
   214  0008  3400               	retlw	0
   215  0009                     __end_of__stringtab:	
   216  0009                     STR_8:	
   217  0009  3456               	retlw	86	;'V'
   218  000A  344F               	retlw	79	;'O'
   219  000B  344C               	retlw	76	;'L'
   220  000C  3454               	retlw	84	;'T'
   221  000D  3441               	retlw	65	;'A'
   222  000E  3447               	retlw	71	;'G'
   223  000F  3445               	retlw	69	;'E'
   224  0010  3420               	retlw	32	;' '
   225  0011  3452               	retlw	82	;'R'
   226  0012  3445               	retlw	69	;'E'
   227  0013  3441               	retlw	65	;'A'
   228  0014  3444               	retlw	68	;'D'
   229  0015  3449               	retlw	73	;'I'
   230  0016  344E               	retlw	78	;'N'
   231  0017  3447               	retlw	71	;'G'
   232  0018  343A               	retlw	58	;':'
   233  0019  3400               	retlw	0
   234  001A                     STR_5:	
   235  001A  3442               	retlw	66	;'B'
   236  001B  3475               	retlw	117	;'u'
   237  001C  3474               	retlw	116	;'t'
   238  001D  3474               	retlw	116	;'t'
   239  001E  346F               	retlw	111	;'o'
   240  001F  346E               	retlw	110	;'n'
   241  0020  3420               	retlw	32	;' '
   242  0021  3469               	retlw	105	;'i'
   243  0022  3473               	retlw	115	;'s'
   244  0023  3420               	retlw	32	;' '
   245  0024  3450               	retlw	80	;'P'
   246  0025  3475               	retlw	117	;'u'
   247  0026  3473               	retlw	115	;'s'
   248  0027  3468               	retlw	104	;'h'
   249  0028  3465               	retlw	101	;'e'
   250  0029  3464               	retlw	100	;'d'
   251  002A  3400               	retlw	0
   252  002B                     STR_1:	
   253  002B  3445               	retlw	69	;'E'
   254  002C  346D               	retlw	109	;'m'
   255  002D  3462               	retlw	98	;'b'
   256  002E  3465               	retlw	101	;'e'
   257  002F  3464               	retlw	100	;'d'
   258  0030  3464               	retlw	100	;'d'
   259  0031  3465               	retlw	101	;'e'
   260  0032  3464               	retlw	100	;'d'
   261  0033  3420               	retlw	32	;' '
   262  0034  3453               	retlw	83	;'S'
   263  0035  3479               	retlw	121	;'y'
   264  0036  3473               	retlw	115	;'s'
   265  0037  3474               	retlw	116	;'t'
   266  0038  3465               	retlw	101	;'e'
   267  0039  346D               	retlw	109	;'m'
   268  003A  3473               	retlw	115	;'s'
   269  003B  3400               	retlw	0
   270  003C                     STR_2:	
   271  003C  344D               	retlw	77	;'M'
   272  003D  3469               	retlw	105	;'i'
   273  003E  346E               	retlw	110	;'n'
   274  003F  3469               	retlw	105	;'i'
   275  0040  3450               	retlw	80	;'P'
   276  0041  3472               	retlw	114	;'r'
   277  0042  346F               	retlw	111	;'o'
   278  0043  346A               	retlw	106	;'j'
   279  0044  3465               	retlw	101	;'e'
   280  0045  3463               	retlw	99	;'c'
   281  0046  3474               	retlw	116	;'t'
   282  0047  342D               	retlw	45	;'-'
   283  0048  3431               	retlw	49	;'1'
   284  0049  3400               	retlw	0
   285  004A                     STR_4:	
   286  004A  3441               	retlw	65	;'A'
   287  004B  3467               	retlw	103	;'g'
   288  004C  3472               	retlw	114	;'r'
   289  004D  3469               	retlw	105	;'i'
   290  004E  3470               	retlw	112	;'p'
   291  004F  3470               	retlw	112	;'p'
   292  0050  3469               	retlw	105	;'i'
   293  0051  346E               	retlw	110	;'n'
   294  0052  3461               	retlw	97	;'a'
   295  0053  3420               	retlw	32	;' '
   296  0054  3457               	retlw	87	;'W'
   297  0055  342E               	retlw	46	;'.'
   298  0056  344D               	retlw	77	;'M'
   299  0057  3400               	retlw	0
   300  0058                     STR_6:	
   301  0058  3450               	retlw	80	;'P'
   302  0059  346C               	retlw	108	;'l'
   303  005A  3465               	retlw	101	;'e'
   304  005B  3461               	retlw	97	;'a'
   305  005C  3473               	retlw	115	;'s'
   306  005D  3465               	retlw	101	;'e'
   307  005E  3420               	retlw	32	;' '
   308  005F  3457               	retlw	87	;'W'
   309  0060  3461               	retlw	97	;'a'
   310  0061  3469               	retlw	105	;'i'
   311  0062  3474               	retlw	116	;'t'
   312  0063  3421               	retlw	33	;'!'
   313  0064  3400               	retlw	0
   314  0065                     STR_3:	
   315  0065  3450               	retlw	80	;'P'
   316  0066  3472               	retlw	114	;'r'
   317  0067  3465               	retlw	101	;'e'
   318  0068  3473               	retlw	115	;'s'
   319  0069  3465               	retlw	101	;'e'
   320  006A  346E               	retlw	110	;'n'
   321  006B  3474               	retlw	116	;'t'
   322  006C  3465               	retlw	101	;'e'
   323  006D  3464               	retlw	100	;'d'
   324  006E  3420               	retlw	32	;' '
   325  006F  3442               	retlw	66	;'B'
   326  0070  3479               	retlw	121	;'y'
   327  0071  3400               	retlw	0
   328  0072                     STR_7:	
   329  0072  3449               	retlw	73	;'I'
   330  0073  3453               	retlw	83	;'S'
   331  0074  3452               	retlw	82	;'R'
   332  0075  3420               	retlw	32	;' '
   333  0076  344F               	retlw	79	;'O'
   334  0077  344E               	retlw	78	;'N'
   335  0078  3400               	retlw	0
   336  0079                     STR_9:	
   337  0079  342E               	retlw	46	;'.'
   338  007A  3400               	retlw	0
   339  007B                     STR_10:	
   340  007B  3456               	retlw	86	;'V'
   341  007C  3400               	retlw	0
   342                           
   343                           ; #config settings
   344  0000                     
   345                           	psect	cinit
   346  07FC                     start_initialization:	
   347  07FC                     __initialization:	
   348  07FC                     end_of_initialization:	
   349                           ;End of C runtime variable initialization code
   350                           
   351  07FC                     __end_of__initialization:	
   352  07FC  0183               	clrf	3
   353  07FD  120A  118A  2BA3   	ljmp	_main	;jump to C main() function
   354                           
   355                           	psect	cstackCOMMON
   356  0070                     __pcstackCOMMON:	
   357  0070                     ?_Lcd_Port:	
   358  0070                     ??_Lcd_Port:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_Lcd_Cmd:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_Lcd_Init:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_Lcd_Write_Char:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_Lcd_Write_String:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_ADC_Initialize:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ??_ADC_Initialize:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_ISR:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_main:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?__Umul8_16:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_Lcd_Clear:	
   389                           ; 2 bytes @ 0x0
   390                           
   391  0070                     ?_ADC_Read:	
   392                           ; 2 bytes @ 0x0
   393                           
   394  0070                     ?___awdiv:	
   395                           ; 2 bytes @ 0x0
   396                           
   397  0070                     ?___xxtofl:	
   398                           ; 2 bytes @ 0x0
   399                           
   400  0070                     Lcd_Port@a:	
   401                           ; 4 bytes @ 0x0
   402                           
   403  0070                     __Umul8_16@multiplicand:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ___awdiv@divisor:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ___xxtofl@val:	
   410                           ; 2 bytes @ 0x0
   411                           
   412                           
   413                           ; 4 bytes @ 0x0
   414  0070                     	ds	1
   415  0071                     ??_Lcd_Cmd:	
   416  0071                     ??_Lcd_Write_Char:	
   417                           ; 1 bytes @ 0x1
   418                           
   419                           
   420                           ; 1 bytes @ 0x1
   421  0071                     	ds	1
   422  0072                     ??__Umul8_16:	
   423  0072                     ??_ADC_Read:	
   424                           ; 1 bytes @ 0x2
   425                           
   426  0072                     Lcd_Write_Char@temp:	
   427                           ; 1 bytes @ 0x2
   428                           
   429  0072                     ___awdiv@dividend:	
   430                           ; 1 bytes @ 0x2
   431                           
   432                           
   433                           ; 2 bytes @ 0x2
   434  0072                     	ds	1
   435  0073                     Lcd_Cmd@a:	
   436  0073                     Lcd_Write_Char@y:	
   437                           ; 1 bytes @ 0x3
   438                           
   439                           
   440                           ; 1 bytes @ 0x3
   441  0073                     	ds	1
   442  0074                     ??_Lcd_Clear:	
   443  0074                     ?_Lcd_Set_Cursor:	
   444                           ; 1 bytes @ 0x4
   445                           
   446  0074                     ??_Lcd_Init:	
   447                           ; 1 bytes @ 0x4
   448                           
   449  0074                     ??___awdiv:	
   450                           ; 1 bytes @ 0x4
   451                           
   452  0074                     ??___xxtofl:	
   453                           ; 1 bytes @ 0x4
   454                           
   455  0074                     Lcd_Set_Cursor@b:	
   456                           ; 1 bytes @ 0x4
   457                           
   458  0074                     Lcd_Write_Char@a:	
   459                           ; 1 bytes @ 0x4
   460                           
   461  0074                     ADC_Read@channel:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     __Umul8_16@product:	
   465                           ; 1 bytes @ 0x4
   466                           
   467                           
   468                           ; 2 bytes @ 0x4
   469  0074                     	ds	1
   470  0075                     ??_Lcd_Set_Cursor:	
   471  0075                     ??_Lcd_Write_String:	
   472                           ; 1 bytes @ 0x5
   473                           
   474  0075                     ___awdiv@counter:	
   475                           ; 1 bytes @ 0x5
   476                           
   477  0075                     Lcd_Write_String@i:	
   478                           ; 1 bytes @ 0x5
   479                           
   480                           
   481                           ; 2 bytes @ 0x5
   482  0075                     	ds	1
   483  0076                     ___awdiv@sign:	
   484  0076                     __Umul8_16@word_mpld:	
   485                           ; 1 bytes @ 0x6
   486                           
   487                           
   488                           ; 2 bytes @ 0x6
   489  0076                     	ds	1
   490  0077                     Lcd_Set_Cursor@a:	
   491  0077                     Lcd_Write_String@a:	
   492                           ; 1 bytes @ 0x7
   493                           
   494  0077                     ___awdiv@quotient:	
   495                           ; 1 bytes @ 0x7
   496                           
   497                           
   498                           ; 2 bytes @ 0x7
   499  0077                     	ds	1
   500  0078                     Lcd_Set_Cursor@z:	
   501  0078                     ___xxtofl@sign:	
   502                           ; 1 bytes @ 0x8
   503                           
   504  0078                     __Umul8_16@multiplier:	
   505                           ; 1 bytes @ 0x8
   506                           
   507                           
   508                           ; 1 bytes @ 0x8
   509  0078                     	ds	1
   510  0079                     ?___awmod:	
   511  0079                     Lcd_Set_Cursor@y:	
   512                           ; 2 bytes @ 0x9
   513                           
   514  0079                     ___xxtofl@exp:	
   515                           ; 1 bytes @ 0x9
   516                           
   517  0079                     ___awmod@divisor:	
   518                           ; 1 bytes @ 0x9
   519                           
   520                           
   521                           ; 2 bytes @ 0x9
   522  0079                     	ds	1
   523  007A                     Lcd_Set_Cursor@temp:	
   524  007A                     ___xxtofl@arg:	
   525                           ; 1 bytes @ 0xA
   526                           
   527                           
   528                           ; 4 bytes @ 0xA
   529  007A                     	ds	1
   530  007B                     ??_ISR:	
   531  007B                     ___awmod@dividend:	
   532                           ; 1 bytes @ 0xB
   533                           
   534                           
   535                           ; 2 bytes @ 0xB
   536  007B                     	ds	2
   537  007D                     ??___awmod:	
   538                           
   539                           ; 1 bytes @ 0xD
   540  007D                     	ds	1
   541                           
   542                           	psect	cstackBANK0
   543  0020                     __pcstackBANK0:	
   544  0020                     ?___flmul:	
   545  0020                     ___awmod@counter:	
   546                           ; 4 bytes @ 0x0
   547                           
   548  0020                     ISR@y:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0020                     ___flmul@b:	
   552                           ; 2 bytes @ 0x0
   553                           
   554                           
   555                           ; 4 bytes @ 0x0
   556  0020                     	ds	1
   557  0021                     ___awmod@sign:	
   558                           
   559                           ; 1 bytes @ 0x1
   560  0021                     	ds	3
   561  0024                     ___flmul@a:	
   562                           
   563                           ; 4 bytes @ 0x4
   564  0024                     	ds	4
   565  0028                     ??___flmul:	
   566                           
   567                           ; 1 bytes @ 0x8
   568  0028                     	ds	5
   569  002D                     ___flmul@sign:	
   570                           
   571                           ; 1 bytes @ 0xD
   572  002D                     	ds	1
   573  002E                     ___flmul@grs:	
   574                           
   575                           ; 4 bytes @ 0xE
   576  002E                     	ds	4
   577  0032                     ___flmul@aexp:	
   578                           
   579                           ; 1 bytes @ 0x12
   580  0032                     	ds	1
   581  0033                     ___flmul@bexp:	
   582                           
   583                           ; 1 bytes @ 0x13
   584  0033                     	ds	1
   585  0034                     ___flmul@prod:	
   586                           
   587                           ; 4 bytes @ 0x14
   588  0034                     	ds	4
   589  0038                     ___flmul@temp:	
   590                           
   591                           ; 2 bytes @ 0x18
   592  0038                     	ds	2
   593  003A                     ?___fltol:	
   594  003A                     ___fltol@f1:	
   595                           ; 4 bytes @ 0x1A
   596                           
   597                           
   598                           ; 4 bytes @ 0x1A
   599  003A                     	ds	4
   600  003E                     ??___fltol:	
   601                           
   602                           ; 1 bytes @ 0x1E
   603  003E                     	ds	5
   604  0043                     ___fltol@sign1:	
   605                           
   606                           ; 1 bytes @ 0x23
   607  0043                     	ds	1
   608  0044                     ___fltol@exp1:	
   609                           
   610                           ; 1 bytes @ 0x24
   611  0044                     	ds	1
   612  0045                     ??_main:	
   613                           
   614                           ; 1 bytes @ 0x25
   615  0045                     	ds	3
   616  0048                     main@k1:	
   617                           
   618                           ; 2 bytes @ 0x28
   619  0048                     	ds	2
   620  004A                     main@k2:	
   621                           
   622                           ; 2 bytes @ 0x2A
   623  004A                     	ds	2
   624  004C                     main@k3:	
   625                           
   626                           ; 2 bytes @ 0x2C
   627  004C                     	ds	2
   628  004E                     main@k4:	
   629                           
   630                           ; 2 bytes @ 0x2E
   631  004E                     	ds	2
   632  0050                     main@flag:	
   633                           
   634                           ; 2 bytes @ 0x30
   635  0050                     	ds	2
   636  0052                     main@adc:	
   637                           
   638                           ; 2 bytes @ 0x32
   639  0052                     	ds	2
   640  0054                     main@i:	
   641                           
   642                           ; 2 bytes @ 0x34
   643  0054                     	ds	2
   644                           
   645                           	psect	maintext
   646  03A3                     __pmaintext:	
   647 ;;
   648 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   649 ;;
   650 ;; *************** function _main *****************
   651 ;; Defined at:
   652 ;;		line 96 in file "main.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  i               2   52[BANK0 ] int 
   657 ;;  adc             2   50[BANK0 ] int 
   658 ;;  flag            2   48[BANK0 ] int 
   659 ;;  k4              2   46[BANK0 ] int 
   660 ;;  k3              2   44[BANK0 ] int 
   661 ;;  k2              2   42[BANK0 ] int 
   662 ;;  k1              2   40[BANK0 ] int 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : B00/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0      14       0       0       0
   674 ;;      Temps:          0       3       0       0       0
   675 ;;      Totals:         0      17       0       0       0
   676 ;;Total ram usage:       17 bytes
   677 ;; Hardware stack levels required when called:    4
   678 ;; This function calls:
   679 ;;		_ADC_Initialize
   680 ;;		_ADC_Read
   681 ;;		_ISR
   682 ;;		_Lcd_Clear
   683 ;;		_Lcd_Init
   684 ;;		_Lcd_Set_Cursor
   685 ;;		_Lcd_Write_Char
   686 ;;		_Lcd_Write_String
   687 ;;		___awdiv
   688 ;;		___awmod
   689 ;;		___flmul
   690 ;;		___fltol
   691 ;;		___xxtofl
   692 ;; This function is called by:
   693 ;;		Startup code after reset
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           
   698                           ;psect for function _main
   699  03A3                     _main:	
   700                           
   701                           ;main.c: 99:   int flag=0;
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   705  03A3  1283               	bcf	3,5	;RP0=0, select bank0
   706  03A4  1303               	bcf	3,6	;RP1=0, select bank0
   707  03A5  01D0               	clrf	main@flag
   708  03A6  01D1               	clrf	main@flag+1
   709                           
   710                           ;main.c: 100:   int k1,k2,k3,k4,adc;;main.c: 101:   TRISA = 0x00;
   711  03A7  1683               	bsf	3,5	;RP0=1, select bank1
   712  03A8  1303               	bcf	3,6	;RP1=0, select bank1
   713  03A9  0185               	clrf	5	;volatile
   714                           
   715                           ;main.c: 102:   PORTA = 0x00;
   716  03AA  1283               	bcf	3,5	;RP0=0, select bank0
   717  03AB  1303               	bcf	3,6	;RP1=0, select bank0
   718  03AC  0185               	clrf	5	;volatile
   719                           
   720                           ;main.c: 103:   TRISD = 0x00;
   721  03AD  1683               	bsf	3,5	;RP0=1, select bank1
   722  03AE  1303               	bcf	3,6	;RP1=0, select bank1
   723  03AF  0188               	clrf	8	;volatile
   724                           
   725                           ;main.c: 104:   TRISC = 0x00;
   726  03B0  0187               	clrf	7	;volatile
   727                           
   728                           ;main.c: 105:   PORTD = 0x00;
   729  03B1  1283               	bcf	3,5	;RP0=0, select bank0
   730  03B2  1303               	bcf	3,6	;RP1=0, select bank0
   731  03B3  0188               	clrf	8	;volatile
   732                           
   733                           ;main.c: 110:     INTCONbits.GIE = 1;
   734  03B4  178B               	bsf	11,7	;volatile
   735                           
   736                           ;main.c: 112:     INTCONbits.PEIE = 1;
   737  03B5  170B               	bsf	11,6	;volatile
   738                           
   739                           ;main.c: 114:     INTCONbits.INTE = 1;
   740  03B6  160B               	bsf	11,4	;volatile
   741  03B7                     l1714:	
   742                           
   743                           ;main.c: 120:     {;main.c: 122:     ADC_Initialize();
   744  03B7  120A  118A  207D  120A  118A  	fcall	_ADC_Initialize
   745                           
   746                           ;main.c: 125:     adc=(ADC_Read(4));
   747  03BC  3004               	movlw	4
   748  03BD  120A  118A  2086  120A  118A  	fcall	_ADC_Read
   749  03C2  0871               	movf	?_ADC_Read+1,w
   750  03C3  1283               	bcf	3,5	;RP0=0, select bank0
   751  03C4  1303               	bcf	3,6	;RP1=0, select bank0
   752  03C5  00D3               	movwf	main@adc+1
   753  03C6  0870               	movf	?_ADC_Read,w
   754  03C7  00D2               	movwf	main@adc
   755                           
   756                           ;main.c: 126:     i=adc*0.488281;
   757  03C8  0852               	movf	main@adc,w
   758  03C9  00F0               	movwf	___xxtofl@val
   759  03CA  0853               	movf	main@adc+1,w
   760  03CB  00F1               	movwf	___xxtofl@val+1
   761  03CC  3000               	movlw	0
   762  03CD  1BF1               	btfsc	___xxtofl@val+1,7
   763  03CE  30FF               	movlw	255
   764  03CF  00F2               	movwf	___xxtofl@val+2
   765  03D0  00F3               	movwf	___xxtofl@val+3
   766  03D1  3001               	movlw	1
   767  03D2  120A  118A  2300  120A  118A  	fcall	___xxtofl
   768  03D7  0873               	movf	?___xxtofl+3,w
   769  03D8  1283               	bcf	3,5	;RP0=0, select bank0
   770  03D9  1303               	bcf	3,6	;RP1=0, select bank0
   771  03DA  00A7               	movwf	___flmul@a+3
   772  03DB  0872               	movf	?___xxtofl+2,w
   773  03DC  00A6               	movwf	___flmul@a+2
   774  03DD  0871               	movf	?___xxtofl+1,w
   775  03DE  00A5               	movwf	___flmul@a+1
   776  03DF  0870               	movf	?___xxtofl,w
   777  03E0  00A4               	movwf	___flmul@a
   778  03E1  303E               	movlw	62
   779  03E2  00A3               	movwf	___flmul@b+3
   780  03E3  30F9               	movlw	249
   781  03E4  00A2               	movwf	___flmul@b+2
   782  03E5  30FF               	movlw	255
   783  03E6  00A1               	movwf	___flmul@b+1
   784  03E7  30F8               	movlw	248
   785  03E8  00A0               	movwf	___flmul@b
   786  03E9  120A  118A  24E7  120A  118A  	fcall	___flmul
   787  03EE  1283               	bcf	3,5	;RP0=0, select bank0
   788  03EF  1303               	bcf	3,6	;RP1=0, select bank0
   789  03F0  0823               	movf	?___flmul+3,w
   790  03F1  00BD               	movwf	___fltol@f1+3
   791  03F2  0822               	movf	?___flmul+2,w
   792  03F3  00BC               	movwf	___fltol@f1+2
   793  03F4  0821               	movf	?___flmul+1,w
   794  03F5  00BB               	movwf	___fltol@f1+1
   795  03F6  0820               	movf	?___flmul,w
   796  03F7  00BA               	movwf	___fltol@f1
   797  03F8  120A  118A  21FA  120A  118A  	fcall	___fltol
   798  03FD  1283               	bcf	3,5	;RP0=0, select bank0
   799  03FE  1303               	bcf	3,6	;RP1=0, select bank0
   800  03FF  083B               	movf	?___fltol+1,w
   801  0400  00D5               	movwf	main@i+1
   802  0401  083A               	movf	?___fltol,w
   803  0402  00D4               	movwf	main@i
   804                           
   805                           ;main.c: 127:     flag =0;
   806  0403  01D0               	clrf	main@flag
   807  0404  01D1               	clrf	main@flag+1
   808                           
   809                           ;main.c: 137:        flag++;
   810  0405  3001               	movlw	1
   811  0406  07D0               	addwf	main@flag,f
   812  0407  1803               	skipnc
   813  0408  0AD1               	incf	main@flag+1,f
   814  0409  3000               	movlw	0
   815  040A  07D1               	addwf	main@flag+1,f
   816                           
   817                           ;main.c: 140:        k1 = (i/1000)%10;
   818  040B  300A               	movlw	10
   819  040C  00F9               	movwf	___awmod@divisor
   820  040D  3000               	movlw	0
   821  040E  00FA               	movwf	___awmod@divisor+1
   822  040F  30E8               	movlw	232
   823  0410  00F0               	movwf	___awdiv@divisor
   824  0411  3003               	movlw	3
   825  0412  00F1               	movwf	___awdiv@divisor+1
   826  0413  0855               	movf	main@i+1,w
   827  0414  00F3               	movwf	___awdiv@dividend+1
   828  0415  0854               	movf	main@i,w
   829  0416  00F2               	movwf	___awdiv@dividend
   830  0417  120A  118A  2146  120A  118A  	fcall	___awdiv
   831  041C  0871               	movf	?___awdiv+1,w
   832  041D  00FC               	movwf	___awmod@dividend+1
   833  041E  0870               	movf	?___awdiv,w
   834  041F  00FB               	movwf	___awmod@dividend
   835  0420  120A  118A  20F9  120A  118A  	fcall	___awmod
   836  0425  087A               	movf	?___awmod+1,w
   837  0426  1283               	bcf	3,5	;RP0=0, select bank0
   838  0427  1303               	bcf	3,6	;RP1=0, select bank0
   839  0428  00C9               	movwf	main@k1+1
   840  0429  0879               	movf	?___awmod,w
   841  042A  00C8               	movwf	main@k1
   842                           
   843                           ;main.c: 141:        k2 = (i/100)%10;
   844  042B  300A               	movlw	10
   845  042C  00F9               	movwf	___awmod@divisor
   846  042D  3000               	movlw	0
   847  042E  00FA               	movwf	___awmod@divisor+1
   848  042F  3064               	movlw	100
   849  0430  00F0               	movwf	___awdiv@divisor
   850  0431  3000               	movlw	0
   851  0432  00F1               	movwf	___awdiv@divisor+1
   852  0433  0855               	movf	main@i+1,w
   853  0434  00F3               	movwf	___awdiv@dividend+1
   854  0435  0854               	movf	main@i,w
   855  0436  00F2               	movwf	___awdiv@dividend
   856  0437  120A  118A  2146  120A  118A  	fcall	___awdiv
   857  043C  0871               	movf	?___awdiv+1,w
   858  043D  00FC               	movwf	___awmod@dividend+1
   859  043E  0870               	movf	?___awdiv,w
   860  043F  00FB               	movwf	___awmod@dividend
   861  0440  120A  118A  20F9  120A  118A  	fcall	___awmod
   862  0445  087A               	movf	?___awmod+1,w
   863  0446  1283               	bcf	3,5	;RP0=0, select bank0
   864  0447  1303               	bcf	3,6	;RP1=0, select bank0
   865  0448  00CB               	movwf	main@k2+1
   866  0449  0879               	movf	?___awmod,w
   867  044A  00CA               	movwf	main@k2
   868                           
   869                           ;main.c: 142:        k3 = (i/10)%10;
   870  044B  300A               	movlw	10
   871  044C  00F9               	movwf	___awmod@divisor
   872  044D  3000               	movlw	0
   873  044E  00FA               	movwf	___awmod@divisor+1
   874  044F  300A               	movlw	10
   875  0450  00F0               	movwf	___awdiv@divisor
   876  0451  3000               	movlw	0
   877  0452  00F1               	movwf	___awdiv@divisor+1
   878  0453  0855               	movf	main@i+1,w
   879  0454  00F3               	movwf	___awdiv@dividend+1
   880  0455  0854               	movf	main@i,w
   881  0456  00F2               	movwf	___awdiv@dividend
   882  0457  120A  118A  2146  120A  118A  	fcall	___awdiv
   883  045C  0871               	movf	?___awdiv+1,w
   884  045D  00FC               	movwf	___awmod@dividend+1
   885  045E  0870               	movf	?___awdiv,w
   886  045F  00FB               	movwf	___awmod@dividend
   887  0460  120A  118A  20F9  120A  118A  	fcall	___awmod
   888  0465  087A               	movf	?___awmod+1,w
   889  0466  1283               	bcf	3,5	;RP0=0, select bank0
   890  0467  1303               	bcf	3,6	;RP1=0, select bank0
   891  0468  00CD               	movwf	main@k3+1
   892  0469  0879               	movf	?___awmod,w
   893  046A  00CC               	movwf	main@k3
   894                           
   895                           ;main.c: 143:        k4 = (i/1)%10;
   896  046B  300A               	movlw	10
   897  046C  00F9               	movwf	___awmod@divisor
   898  046D  3000               	movlw	0
   899  046E  00FA               	movwf	___awmod@divisor+1
   900  046F  0855               	movf	main@i+1,w
   901  0470  00FC               	movwf	___awmod@dividend+1
   902  0471  0854               	movf	main@i,w
   903  0472  00FB               	movwf	___awmod@dividend
   904  0473  120A  118A  20F9  120A  118A  	fcall	___awmod
   905  0478  087A               	movf	?___awmod+1,w
   906  0479  1283               	bcf	3,5	;RP0=0, select bank0
   907  047A  1303               	bcf	3,6	;RP1=0, select bank0
   908  047B  00CF               	movwf	main@k4+1
   909  047C  0879               	movf	?___awmod,w
   910  047D  00CE               	movwf	main@k4
   911                           
   912                           ;main.c: 145:         Lcd_Init();
   913  047E  120A  118A  219F  120A  118A  	fcall	_Lcd_Init
   914                           
   915                           ;main.c: 146:         Lcd_Clear();
   916  0483  120A  158A  2745  120A  118A  	fcall	_Lcd_Clear
   917                           
   918                           ;main.c: 147:         Lcd_Set_Cursor(1,1);
   919  0488  01F4               	clrf	Lcd_Set_Cursor@b
   920  0489  0AF4               	incf	Lcd_Set_Cursor@b,f
   921  048A  3001               	movlw	1
   922  048B  120A  118A  20AF  120A  118A  	fcall	_Lcd_Set_Cursor
   923                           
   924                           ;main.c: 148:         Lcd_Write_String("VOLTAGE READING:");
   925  0490  3001               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   926  0491  120A  158A  2784  120A  118A  	fcall	_Lcd_Write_String
   927                           
   928                           ;main.c: 149:         Lcd_Set_Cursor(2,5);
   929  0496  3005               	movlw	5
   930  0497  1283               	bcf	3,5	;RP0=0, select bank0
   931  0498  1303               	bcf	3,6	;RP1=0, select bank0
   932  0499  00C5               	movwf	??_main
   933  049A  0845               	movf	??_main,w
   934  049B  00F4               	movwf	Lcd_Set_Cursor@b
   935  049C  3002               	movlw	2
   936  049D  120A  118A  20AF  120A  118A  	fcall	_Lcd_Set_Cursor
   937                           
   938                           ;main.c: 150:         Lcd_Write_Char(k1+'0');
   939  04A2  1283               	bcf	3,5	;RP0=0, select bank0
   940  04A3  1303               	bcf	3,6	;RP1=0, select bank0
   941  04A4  0848               	movf	main@k1,w
   942  04A5  3E30               	addlw	48
   943  04A6  120A  158A  27C9  120A  118A  	fcall	_Lcd_Write_Char
   944                           
   945                           ;main.c: 151:         Lcd_Write_Char(k2+'0');
   946  04AB  1283               	bcf	3,5	;RP0=0, select bank0
   947  04AC  1303               	bcf	3,6	;RP1=0, select bank0
   948  04AD  084A               	movf	main@k2,w
   949  04AE  3E30               	addlw	48
   950  04AF  120A  158A  27C9  120A  118A  	fcall	_Lcd_Write_Char
   951                           
   952                           ;main.c: 152:         Lcd_Write_String(".");
   953  04B4  3071               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   954  04B5  120A  158A  2784  120A  118A  	fcall	_Lcd_Write_String
   955                           
   956                           ;main.c: 153:         Lcd_Write_Char(k3+'0');
   957  04BA  1283               	bcf	3,5	;RP0=0, select bank0
   958  04BB  1303               	bcf	3,6	;RP1=0, select bank0
   959  04BC  084C               	movf	main@k3,w
   960  04BD  3E30               	addlw	48
   961  04BE  120A  158A  27C9  120A  118A  	fcall	_Lcd_Write_Char
   962                           
   963                           ;main.c: 154:         Lcd_Write_Char(k4+'0');
   964  04C3  1283               	bcf	3,5	;RP0=0, select bank0
   965  04C4  1303               	bcf	3,6	;RP1=0, select bank0
   966  04C5  084E               	movf	main@k4,w
   967  04C6  3E30               	addlw	48
   968  04C7  120A  158A  27C9  120A  118A  	fcall	_Lcd_Write_Char
   969                           
   970                           ;main.c: 155:         Lcd_Write_String("V");
   971  04CC  3073               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   972  04CD  120A  158A  2784  120A  118A  	fcall	_Lcd_Write_String
   973                           
   974                           ;main.c: 156:         _delay((unsigned long)((200)*(4000000/4000.0)));
   975  04D2  3002               	movlw	2
   976  04D3  1283               	bcf	3,5	;RP0=0, select bank0
   977  04D4  1303               	bcf	3,6	;RP1=0, select bank0
   978  04D5  00C7               	movwf	??_main+2
   979  04D6  3004               	movlw	4
   980  04D7  00C6               	movwf	??_main+1
   981  04D8  30B9               	movlw	185
   982  04D9  00C5               	movwf	??_main
   983  04DA                     u1957:	
   984  04DA  0BC5               	decfsz	??_main,f
   985  04DB  2CDA               	goto	u1957
   986  04DC  0BC6               	decfsz	??_main+1,f
   987  04DD  2CDA               	goto	u1957
   988  04DE  0BC7               	decfsz	??_main+2,f
   989  04DF  2CDA               	goto	u1957
   990  04E0  2CE1               	nop2
   991                           
   992                           ;main.c: 160:        ISR();
   993  04E1  120A  118A  2267  120A  118A  	fcall	_ISR
   994  04E6  2BB7               	goto	l1714
   995  04E7                     __end_of_main:	
   996                           
   997                           	psect	text1
   998  0300                     __ptext1:	
   999 ;; *************** function ___xxtofl *****************
  1000 ;; Defined at:
  1001 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  sign            1    wreg     unsigned char 
  1004 ;;  val             4    0[COMMON] long 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  sign            1    8[COMMON] unsigned char 
  1007 ;;  arg             4   10[COMMON] unsigned long 
  1008 ;;  exp             1    9[COMMON] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  4    0[COMMON] unsigned char 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         4       0       0       0       0
  1019 ;;      Locals:         6       0       0       0       0
  1020 ;;      Temps:          4       0       0       0       0
  1021 ;;      Totals:        14       0       0       0       0
  1022 ;;Total ram usage:       14 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function ___xxtofl
  1033  0300                     ___xxtofl:	
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1037                           ;___xxtofl@sign stored from wreg
  1038  0300  00F8               	movwf	___xxtofl@sign
  1039  0301  0878               	movf	___xxtofl@sign,w
  1040  0302  1D03               	btfss	3,2
  1041  0303  1FF3               	btfss	___xxtofl@val+3,7
  1042  0304  2B15               	goto	l1642
  1043  0305  0970               	comf	___xxtofl@val,w
  1044  0306  00FA               	movwf	___xxtofl@arg
  1045  0307  0971               	comf	___xxtofl@val+1,w
  1046  0308  00FB               	movwf	___xxtofl@arg+1
  1047  0309  0972               	comf	___xxtofl@val+2,w
  1048  030A  00FC               	movwf	___xxtofl@arg+2
  1049  030B  0973               	comf	___xxtofl@val+3,w
  1050  030C  00FD               	movwf	___xxtofl@arg+3
  1051  030D  0AFA               	incf	___xxtofl@arg,f
  1052  030E  1903               	skipnz
  1053  030F  0AFB               	incf	___xxtofl@arg+1,f
  1054  0310  1903               	skipnz
  1055  0311  0AFC               	incf	___xxtofl@arg+2,f
  1056  0312  1903               	skipnz
  1057  0313  0AFD               	incf	___xxtofl@arg+3,f
  1058  0314  2B1D               	goto	l619
  1059  0315                     l1642:	
  1060  0315  0873               	movf	___xxtofl@val+3,w
  1061  0316  00FD               	movwf	___xxtofl@arg+3
  1062  0317  0872               	movf	___xxtofl@val+2,w
  1063  0318  00FC               	movwf	___xxtofl@arg+2
  1064  0319  0871               	movf	___xxtofl@val+1,w
  1065  031A  00FB               	movwf	___xxtofl@arg+1
  1066  031B  0870               	movf	___xxtofl@val,w
  1067  031C  00FA               	movwf	___xxtofl@arg
  1068  031D                     l619:	
  1069  031D  0873               	movf	___xxtofl@val+3,w
  1070  031E  0472               	iorwf	___xxtofl@val+2,w
  1071  031F  0471               	iorwf	___xxtofl@val+1,w
  1072  0320  0470               	iorwf	___xxtofl@val,w
  1073  0321  1D03               	skipz
  1074  0322  2B2C               	goto	l1648
  1075  0323  3000               	movlw	0
  1076  0324  00F3               	movwf	?___xxtofl+3
  1077  0325  3000               	movlw	0
  1078  0326  00F2               	movwf	?___xxtofl+2
  1079  0327  3000               	movlw	0
  1080  0328  00F1               	movwf	?___xxtofl+1
  1081  0329  3000               	movlw	0
  1082  032A  00F0               	movwf	?___xxtofl
  1083  032B  0008               	return
  1084  032C                     l1648:	
  1085  032C  3096               	movlw	150
  1086  032D  00F4               	movwf	??___xxtofl
  1087  032E  0874               	movf	??___xxtofl,w
  1088  032F  00F9               	movwf	___xxtofl@exp
  1089  0330                     l1652:	
  1090  0330  30FE               	movlw	254
  1091  0331  057D               	andwf	___xxtofl@arg+3,w
  1092  0332  1903               	btfsc	3,2
  1093  0333  2B5D               	goto	l625
  1094  0334  3001               	movlw	1
  1095  0335  00F4               	movwf	??___xxtofl
  1096  0336  0874               	movf	??___xxtofl,w
  1097  0337  07F9               	addwf	___xxtofl@exp,f
  1098  0338  3001               	movlw	1
  1099  0339                     u1845:	
  1100  0339  1003               	clrc
  1101  033A  0CFD               	rrf	___xxtofl@arg+3,f
  1102  033B  0CFC               	rrf	___xxtofl@arg+2,f
  1103  033C  0CFB               	rrf	___xxtofl@arg+1,f
  1104  033D  0CFA               	rrf	___xxtofl@arg,f
  1105  033E  3EFF               	addlw	-1
  1106  033F  1D03               	skipz
  1107  0340  2B39               	goto	u1845
  1108  0341  2B30               	goto	l1652
  1109  0342                     l1654:	
  1110  0342  3001               	movlw	1
  1111  0343  00F4               	movwf	??___xxtofl
  1112  0344  0874               	movf	??___xxtofl,w
  1113  0345  07F9               	addwf	___xxtofl@exp,f
  1114  0346  3001               	movlw	1
  1115  0347  07FA               	addwf	___xxtofl@arg,f
  1116  0348  3000               	movlw	0
  1117  0349  1803               	skipnc
  1118  034A  3001               	movlw	1
  1119  034B  07FB               	addwf	___xxtofl@arg+1,f
  1120  034C  3000               	movlw	0
  1121  034D  1803               	skipnc
  1122  034E  3001               	movlw	1
  1123  034F  07FC               	addwf	___xxtofl@arg+2,f
  1124  0350  3000               	movlw	0
  1125  0351  1803               	skipnc
  1126  0352  3001               	movlw	1
  1127  0353  07FD               	addwf	___xxtofl@arg+3,f
  1128  0354  3001               	movlw	1
  1129  0355                     u1865:	
  1130  0355  1003               	clrc
  1131  0356  0CFD               	rrf	___xxtofl@arg+3,f
  1132  0357  0CFC               	rrf	___xxtofl@arg+2,f
  1133  0358  0CFB               	rrf	___xxtofl@arg+1,f
  1134  0359  0CFA               	rrf	___xxtofl@arg,f
  1135  035A  3EFF               	addlw	-1
  1136  035B  1D03               	skipz
  1137  035C  2B55               	goto	u1865
  1138  035D                     l625:	
  1139  035D  30FF               	movlw	255
  1140  035E  057D               	andwf	___xxtofl@arg+3,w
  1141  035F  1903               	btfsc	3,2
  1142  0360  2B71               	goto	l1662
  1143  0361  2B42               	goto	l1654
  1144  0362                     l1664:	
  1145  0362  3002               	movlw	2
  1146  0363  0279               	subwf	___xxtofl@exp,w
  1147  0364  1C03               	btfss	3,0
  1148  0365  2B73               	goto	l632
  1149  0366  3001               	movlw	1
  1150  0367  02F9               	subwf	___xxtofl@exp,f
  1151  0368  3001               	movlw	1
  1152  0369  00F4               	movwf	??___xxtofl
  1153  036A                     u1885:	
  1154  036A  1003               	clrc
  1155  036B  0DFA               	rlf	___xxtofl@arg,f
  1156  036C  0DFB               	rlf	___xxtofl@arg+1,f
  1157  036D  0DFC               	rlf	___xxtofl@arg+2,f
  1158  036E  0DFD               	rlf	___xxtofl@arg+3,f
  1159  036F  0BF4               	decfsz	??___xxtofl,f
  1160  0370  2B6A               	goto	u1885
  1161  0371                     l1662:	
  1162  0371  1FFC               	btfss	___xxtofl@arg+2,7
  1163  0372  2B62               	goto	l1664
  1164  0373                     l632:	
  1165  0373  1879               	btfsc	___xxtofl@exp,0
  1166  0374  2B7D               	goto	l633
  1167  0375  30FF               	movlw	255
  1168  0376  05FA               	andwf	___xxtofl@arg,f
  1169  0377  30FF               	movlw	255
  1170  0378  05FB               	andwf	___xxtofl@arg+1,f
  1171  0379  307F               	movlw	127
  1172  037A  05FC               	andwf	___xxtofl@arg+2,f
  1173  037B  30FF               	movlw	255
  1174  037C  05FD               	andwf	___xxtofl@arg+3,f
  1175  037D                     l633:	
  1176  037D  1003               	clrc
  1177  037E  0CF9               	rrf	___xxtofl@exp,f
  1178  037F  0879               	movf	___xxtofl@exp,w
  1179  0380  00F4               	movwf	??___xxtofl
  1180  0381  01F5               	clrf	??___xxtofl+1
  1181  0382  01F6               	clrf	??___xxtofl+2
  1182  0383  01F7               	clrf	??___xxtofl+3
  1183  0384  3018               	movlw	24
  1184  0385                     u1925:	
  1185  0385  1003               	clrc
  1186  0386  0DF4               	rlf	??___xxtofl,f
  1187  0387  0DF5               	rlf	??___xxtofl+1,f
  1188  0388  0DF6               	rlf	??___xxtofl+2,f
  1189  0389  0DF7               	rlf	??___xxtofl+3,f
  1190  038A  3EFF               	addlw	-1
  1191  038B  1D03               	skipz
  1192  038C  2B85               	goto	u1925
  1193  038D  0874               	movf	??___xxtofl,w
  1194  038E  04FA               	iorwf	___xxtofl@arg,f
  1195  038F  0875               	movf	??___xxtofl+1,w
  1196  0390  04FB               	iorwf	___xxtofl@arg+1,f
  1197  0391  0876               	movf	??___xxtofl+2,w
  1198  0392  04FC               	iorwf	___xxtofl@arg+2,f
  1199  0393  0877               	movf	??___xxtofl+3,w
  1200  0394  04FD               	iorwf	___xxtofl@arg+3,f
  1201  0395  0878               	movf	___xxtofl@sign,w
  1202  0396  1D03               	btfss	3,2
  1203  0397  1FF3               	btfss	___xxtofl@val+3,7
  1204  0398  2B9A               	goto	l1676
  1205  0399  17FD               	bsf	___xxtofl@arg+3,7
  1206  039A                     l1676:	
  1207  039A  087D               	movf	___xxtofl@arg+3,w
  1208  039B  00F3               	movwf	?___xxtofl+3
  1209  039C  087C               	movf	___xxtofl@arg+2,w
  1210  039D  00F2               	movwf	?___xxtofl+2
  1211  039E  087B               	movf	___xxtofl@arg+1,w
  1212  039F  00F1               	movwf	?___xxtofl+1
  1213  03A0  087A               	movf	___xxtofl@arg,w
  1214  03A1  00F0               	movwf	?___xxtofl
  1215  03A2  0008               	return
  1216  03A3                     __end_of___xxtofl:	
  1217                           
  1218                           	psect	text2
  1219  01FA                     __ptext2:	
  1220 ;; *************** function ___fltol *****************
  1221 ;; Defined at:
  1222 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  f1              4   26[BANK0 ] unsigned char 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  exp1            1   36[BANK0 ] unsigned char 
  1227 ;;  sign1           1   35[BANK0 ] unsigned char 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  4   26[BANK0 ] long 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       4       0       0       0
  1238 ;;      Locals:         0       2       0       0       0
  1239 ;;      Temps:          0       5       0       0       0
  1240 ;;      Totals:         0      11       0       0       0
  1241 ;;Total ram usage:       11 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function ___fltol
  1252  01FA                     ___fltol:	
  1253                           
  1254                           ;incstack = 0
  1255                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1256  01FA  1003               	clrc
  1257  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1258  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1259  01FD  0D3C               	rlf	___fltol@f1+2,w
  1260  01FE  0D3D               	rlf	___fltol@f1+3,w
  1261  01FF  00BE               	movwf	??___fltol
  1262  0200  083E               	movf	??___fltol,w
  1263  0201  00C4               	movwf	___fltol@exp1
  1264  0202  0844               	movf	___fltol@exp1,w
  1265  0203  1D03               	btfss	3,2
  1266  0204  2A0E               	goto	l1466
  1267  0205                     l1462:	
  1268  0205  3000               	movlw	0
  1269  0206  00BD               	movwf	?___fltol+3
  1270  0207  3000               	movlw	0
  1271  0208  00BC               	movwf	?___fltol+2
  1272  0209  3000               	movlw	0
  1273  020A  00BB               	movwf	?___fltol+1
  1274  020B  3000               	movlw	0
  1275  020C  00BA               	movwf	?___fltol
  1276  020D  0008               	return
  1277  020E                     l1466:	
  1278  020E  083A               	movf	___fltol@f1,w
  1279  020F  00BE               	movwf	??___fltol
  1280  0210  083B               	movf	___fltol@f1+1,w
  1281  0211  00BF               	movwf	??___fltol+1
  1282  0212  083C               	movf	___fltol@f1+2,w
  1283  0213  00C0               	movwf	??___fltol+2
  1284  0214  083D               	movf	___fltol@f1+3,w
  1285  0215  00C1               	movwf	??___fltol+3
  1286  0216  301F               	movlw	31
  1287  0217                     u1355:	
  1288  0217  1003               	clrc
  1289  0218  0CC1               	rrf	??___fltol+3,f
  1290  0219  0CC0               	rrf	??___fltol+2,f
  1291  021A  0CBF               	rrf	??___fltol+1,f
  1292  021B  0CBE               	rrf	??___fltol,f
  1293  021C  3EFF               	addlw	-1
  1294  021D  1D03               	skipz
  1295  021E  2A17               	goto	u1355
  1296  021F  083E               	movf	??___fltol,w
  1297  0220  00C2               	movwf	??___fltol+4
  1298  0221  0842               	movf	??___fltol+4,w
  1299  0222  00C3               	movwf	___fltol@sign1
  1300  0223  17BC               	bsf	___fltol@f1+2,7
  1301  0224  30FF               	movlw	255
  1302  0225  05BA               	andwf	___fltol@f1,f
  1303  0226  30FF               	movlw	255
  1304  0227  05BB               	andwf	___fltol@f1+1,f
  1305  0228  30FF               	movlw	255
  1306  0229  05BC               	andwf	___fltol@f1+2,f
  1307  022A  3000               	movlw	0
  1308  022B  05BD               	andwf	___fltol@f1+3,f
  1309  022C  3096               	movlw	150
  1310  022D  02C4               	subwf	___fltol@exp1,f
  1311  022E  1FC4               	btfss	___fltol@exp1,7
  1312  022F  2A45               	goto	l1484
  1313  0230  0844               	movf	___fltol@exp1,w
  1314  0231  3A80               	xorlw	128
  1315  0232  3E97               	addlw	151
  1316  0233  1C03               	btfss	3,0
  1317  0234  2A05               	goto	l1462
  1318  0235                     l1482:	
  1319  0235  3001               	movlw	1
  1320  0236                     u1385:	
  1321  0236  1003               	clrc
  1322  0237  0CBD               	rrf	___fltol@f1+3,f
  1323  0238  0CBC               	rrf	___fltol@f1+2,f
  1324  0239  0CBB               	rrf	___fltol@f1+1,f
  1325  023A  0CBA               	rrf	___fltol@f1,f
  1326  023B  3EFF               	addlw	-1
  1327  023C  1D03               	skipz
  1328  023D  2A36               	goto	u1385
  1329  023E  3001               	movlw	1
  1330  023F  00BE               	movwf	??___fltol
  1331  0240  083E               	movf	??___fltol,w
  1332  0241  07C4               	addwf	___fltol@exp1,f
  1333  0242  1903               	btfsc	3,2
  1334  0243  2A58               	goto	l1492
  1335  0244  2A35               	goto	l1482
  1336  0245                     l1484:	
  1337  0245  3020               	movlw	32
  1338  0246  0244               	subwf	___fltol@exp1,w
  1339  0247  1803               	btfsc	3,0
  1340  0248  2A05               	goto	l1462
  1341  0249                     l385:	
  1342  0249  0844               	movf	___fltol@exp1,w
  1343  024A  1903               	btfsc	3,2
  1344  024B  2A58               	goto	l1492
  1345  024C  3001               	movlw	1
  1346  024D  00BE               	movwf	??___fltol
  1347  024E                     u1415:	
  1348  024E  1003               	clrc
  1349  024F  0DBA               	rlf	___fltol@f1,f
  1350  0250  0DBB               	rlf	___fltol@f1+1,f
  1351  0251  0DBC               	rlf	___fltol@f1+2,f
  1352  0252  0DBD               	rlf	___fltol@f1+3,f
  1353  0253  0BBE               	decfsz	??___fltol,f
  1354  0254  2A4E               	goto	u1415
  1355  0255  3001               	movlw	1
  1356  0256  02C4               	subwf	___fltol@exp1,f
  1357  0257  2A49               	goto	l385
  1358  0258                     l1492:	
  1359  0258  0843               	movf	___fltol@sign1,w
  1360  0259  1903               	btfsc	3,2
  1361  025A  0008               	return
  1362  025B  09BA               	comf	___fltol@f1,f
  1363  025C  09BB               	comf	___fltol@f1+1,f
  1364  025D  09BC               	comf	___fltol@f1+2,f
  1365  025E  09BD               	comf	___fltol@f1+3,f
  1366  025F  0ABA               	incf	___fltol@f1,f
  1367  0260  1903               	skipnz
  1368  0261  0ABB               	incf	___fltol@f1+1,f
  1369  0262  1903               	skipnz
  1370  0263  0ABC               	incf	___fltol@f1+2,f
  1371  0264  1903               	skipnz
  1372  0265  0ABD               	incf	___fltol@f1+3,f
  1373  0266  0008               	return
  1374  0267                     __end_of___fltol:	
  1375                           
  1376                           	psect	text3
  1377  04E7                     __ptext3:	
  1378 ;; *************** function ___flmul *****************
  1379 ;; Defined at:
  1380 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  b               4    0[BANK0 ] long 
  1383 ;;  a               4    4[BANK0 ] long 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  prod            4   20[BANK0 ] struct .
  1386 ;;  grs             4   14[BANK0 ] unsigned long 
  1387 ;;  temp            2   24[BANK0 ] struct .
  1388 ;;  bexp            1   19[BANK0 ] unsigned char 
  1389 ;;  aexp            1   18[BANK0 ] unsigned char 
  1390 ;;  sign            1   13[BANK0 ] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  4    0[BANK0 ] unsigned char 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       8       0       0       0
  1401 ;;      Locals:         0      13       0       0       0
  1402 ;;      Temps:          0       5       0       0       0
  1403 ;;      Totals:         0      26       0       0       0
  1404 ;;Total ram usage:       26 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    1
  1407 ;; This function calls:
  1408 ;;		__Umul8_16
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function ___flmul
  1416  04E7                     ___flmul:	
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1420  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1421  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1422  04E9  0823               	movf	___flmul@b+3,w
  1423  04EA  3980               	andlw	128
  1424  04EB  00A8               	movwf	??___flmul
  1425  04EC  0828               	movf	??___flmul,w
  1426  04ED  00AD               	movwf	___flmul@sign
  1427  04EE  0823               	movf	___flmul@b+3,w
  1428  04EF  00A8               	movwf	??___flmul
  1429  04F0  0728               	addwf	??___flmul,w
  1430  04F1  00A9               	movwf	??___flmul+1
  1431  04F2  0829               	movf	??___flmul+1,w
  1432  04F3  00B3               	movwf	___flmul@bexp
  1433  04F4  1BA2               	btfsc	___flmul@b+2,7
  1434  04F5  1433               	bsf	___flmul@bexp,0
  1435  04F6  0833               	movf	___flmul@bexp,w
  1436  04F7  1903               	btfsc	3,2
  1437  04F8  2D06               	goto	l1512
  1438  04F9  0A33               	incf	___flmul@bexp,w
  1439  04FA  1D03               	btfss	3,2
  1440  04FB  2D04               	goto	l1510
  1441  04FC  3000               	movlw	0
  1442  04FD  00A3               	movwf	___flmul@b+3
  1443  04FE  3000               	movlw	0
  1444  04FF  00A2               	movwf	___flmul@b+2
  1445  0500  3000               	movlw	0
  1446  0501  00A1               	movwf	___flmul@b+1
  1447  0502  3000               	movlw	0
  1448  0503  00A0               	movwf	___flmul@b
  1449  0504                     l1510:	
  1450  0504  17A2               	bsf	___flmul@b+2,7
  1451  0505  2D0E               	goto	l1514
  1452  0506                     l1512:	
  1453  0506  3000               	movlw	0
  1454  0507  00A3               	movwf	___flmul@b+3
  1455  0508  3000               	movlw	0
  1456  0509  00A2               	movwf	___flmul@b+2
  1457  050A  3000               	movlw	0
  1458  050B  00A1               	movwf	___flmul@b+1
  1459  050C  3000               	movlw	0
  1460  050D  00A0               	movwf	___flmul@b
  1461  050E                     l1514:	
  1462  050E  0827               	movf	___flmul@a+3,w
  1463  050F  3980               	andlw	128
  1464  0510  00A8               	movwf	??___flmul
  1465  0511  0828               	movf	??___flmul,w
  1466  0512  06AD               	xorwf	___flmul@sign,f
  1467  0513  0827               	movf	___flmul@a+3,w
  1468  0514  00A8               	movwf	??___flmul
  1469  0515  0728               	addwf	??___flmul,w
  1470  0516  00A9               	movwf	??___flmul+1
  1471  0517  0829               	movf	??___flmul+1,w
  1472  0518  00B2               	movwf	___flmul@aexp
  1473  0519  1BA6               	btfsc	___flmul@a+2,7
  1474  051A  1432               	bsf	___flmul@aexp,0
  1475  051B  0832               	movf	___flmul@aexp,w
  1476  051C  1903               	btfsc	3,2
  1477  051D  2D2B               	goto	l1530
  1478  051E  0A32               	incf	___flmul@aexp,w
  1479  051F  1D03               	btfss	3,2
  1480  0520  2D29               	goto	l1528
  1481  0521  3000               	movlw	0
  1482  0522  00A7               	movwf	___flmul@a+3
  1483  0523  3000               	movlw	0
  1484  0524  00A6               	movwf	___flmul@a+2
  1485  0525  3000               	movlw	0
  1486  0526  00A5               	movwf	___flmul@a+1
  1487  0527  3000               	movlw	0
  1488  0528  00A4               	movwf	___flmul@a
  1489  0529                     l1528:	
  1490  0529  17A6               	bsf	___flmul@a+2,7
  1491  052A  2D33               	goto	l1532
  1492  052B                     l1530:	
  1493  052B  3000               	movlw	0
  1494  052C  00A7               	movwf	___flmul@a+3
  1495  052D  3000               	movlw	0
  1496  052E  00A6               	movwf	___flmul@a+2
  1497  052F  3000               	movlw	0
  1498  0530  00A5               	movwf	___flmul@a+1
  1499  0531  3000               	movlw	0
  1500  0532  00A4               	movwf	___flmul@a
  1501  0533                     l1532:	
  1502  0533  0832               	movf	___flmul@aexp,w
  1503  0534  1D03               	btfss	3,2
  1504  0535  0833               	movf	___flmul@bexp,w
  1505  0536  1D03               	btfss	3,2
  1506  0537  2D41               	goto	l1540
  1507  0538  3000               	movlw	0
  1508  0539  00A3               	movwf	?___flmul+3
  1509  053A  3000               	movlw	0
  1510  053B  00A2               	movwf	?___flmul+2
  1511  053C  3000               	movlw	0
  1512  053D  00A1               	movwf	?___flmul+1
  1513  053E  3000               	movlw	0
  1514  053F  00A0               	movwf	?___flmul
  1515  0540  0008               	return
  1516  0541                     l1540:	
  1517  0541  0820               	movf	___flmul@b,w
  1518  0542  00A8               	movwf	??___flmul
  1519  0543  0828               	movf	??___flmul,w
  1520  0544  00F0               	movwf	__Umul8_16@multiplicand
  1521  0545  0826               	movf	___flmul@a+2,w
  1522  0546  120A  158A  27A6  120A  118A  	fcall	__Umul8_16
  1523  054B  0871               	movf	?__Umul8_16+1,w
  1524  054C  1283               	bcf	3,5	;RP0=0, select bank0
  1525  054D  1303               	bcf	3,6	;RP1=0, select bank0
  1526  054E  00B9               	movwf	___flmul@temp+1
  1527  054F  0870               	movf	?__Umul8_16,w
  1528  0550  00B8               	movwf	___flmul@temp
  1529  0551  0838               	movf	___flmul@temp,w
  1530  0552  00A8               	movwf	??___flmul
  1531  0553  01A9               	clrf	??___flmul+1
  1532  0554  01AA               	clrf	??___flmul+2
  1533  0555  01AB               	clrf	??___flmul+3
  1534  0556  082B               	movf	??___flmul+3,w
  1535  0557  00B1               	movwf	___flmul@grs+3
  1536  0558  082A               	movf	??___flmul+2,w
  1537  0559  00B0               	movwf	___flmul@grs+2
  1538  055A  0829               	movf	??___flmul+1,w
  1539  055B  00AF               	movwf	___flmul@grs+1
  1540  055C  0828               	movf	??___flmul,w
  1541  055D  00AE               	movwf	___flmul@grs
  1542  055E  0839               	movf	___flmul@temp+1,w
  1543  055F  00A8               	movwf	??___flmul
  1544  0560  01A9               	clrf	??___flmul+1
  1545  0561  01AA               	clrf	??___flmul+2
  1546  0562  01AB               	clrf	??___flmul+3
  1547  0563  082B               	movf	??___flmul+3,w
  1548  0564  00B7               	movwf	___flmul@prod+3
  1549  0565  082A               	movf	??___flmul+2,w
  1550  0566  00B6               	movwf	___flmul@prod+2
  1551  0567  0829               	movf	??___flmul+1,w
  1552  0568  00B5               	movwf	___flmul@prod+1
  1553  0569  0828               	movf	??___flmul,w
  1554  056A  00B4               	movwf	___flmul@prod
  1555  056B  0821               	movf	___flmul@b+1,w
  1556  056C  00A8               	movwf	??___flmul
  1557  056D  0828               	movf	??___flmul,w
  1558  056E  00F0               	movwf	__Umul8_16@multiplicand
  1559  056F  0825               	movf	___flmul@a+1,w
  1560  0570  120A  158A  27A6  120A  118A  	fcall	__Umul8_16
  1561  0575  0871               	movf	?__Umul8_16+1,w
  1562  0576  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0577  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0578  00B9               	movwf	___flmul@temp+1
  1565  0579  0870               	movf	?__Umul8_16,w
  1566  057A  00B8               	movwf	___flmul@temp
  1567  057B  0838               	movf	___flmul@temp,w
  1568  057C  00A8               	movwf	??___flmul
  1569  057D  01A9               	clrf	??___flmul+1
  1570  057E  01AA               	clrf	??___flmul+2
  1571  057F  01AB               	clrf	??___flmul+3
  1572  0580  0828               	movf	??___flmul,w
  1573  0581  07AE               	addwf	___flmul@grs,f
  1574  0582  0829               	movf	??___flmul+1,w
  1575  0583  1103               	clrz
  1576  0584  1803               	skipnc
  1577  0585  3E01               	addlw	1
  1578  0586  1D03               	btfss	3,2
  1579  0587  07AF               	addwf	___flmul@grs+1,f
  1580  0588  082A               	movf	??___flmul+2,w
  1581  0589  1103               	clrz
  1582  058A  1803               	skipnc
  1583  058B  3E01               	addlw	1
  1584  058C  1D03               	btfss	3,2
  1585  058D  07B0               	addwf	___flmul@grs+2,f
  1586  058E  082B               	movf	??___flmul+3,w
  1587  058F  1103               	clrz
  1588  0590  1803               	skipnc
  1589  0591  3E01               	addlw	1
  1590  0592  1D03               	btfss	3,2
  1591  0593  07B1               	addwf	___flmul@grs+3,f
  1592  0594  0839               	movf	___flmul@temp+1,w
  1593  0595  00A8               	movwf	??___flmul
  1594  0596  01A9               	clrf	??___flmul+1
  1595  0597  01AA               	clrf	??___flmul+2
  1596  0598  01AB               	clrf	??___flmul+3
  1597  0599  0828               	movf	??___flmul,w
  1598  059A  07B4               	addwf	___flmul@prod,f
  1599  059B  0829               	movf	??___flmul+1,w
  1600  059C  1103               	clrz
  1601  059D  1803               	skipnc
  1602  059E  3E01               	addlw	1
  1603  059F  1D03               	btfss	3,2
  1604  05A0  07B5               	addwf	___flmul@prod+1,f
  1605  05A1  082A               	movf	??___flmul+2,w
  1606  05A2  1103               	clrz
  1607  05A3  1803               	skipnc
  1608  05A4  3E01               	addlw	1
  1609  05A5  1D03               	btfss	3,2
  1610  05A6  07B6               	addwf	___flmul@prod+2,f
  1611  05A7  082B               	movf	??___flmul+3,w
  1612  05A8  1103               	clrz
  1613  05A9  1803               	skipnc
  1614  05AA  3E01               	addlw	1
  1615  05AB  1D03               	btfss	3,2
  1616  05AC  07B7               	addwf	___flmul@prod+3,f
  1617  05AD  0822               	movf	___flmul@b+2,w
  1618  05AE  00A8               	movwf	??___flmul
  1619  05AF  0828               	movf	??___flmul,w
  1620  05B0  00F0               	movwf	__Umul8_16@multiplicand
  1621  05B1  0824               	movf	___flmul@a,w
  1622  05B2  120A  158A  27A6  120A  118A  	fcall	__Umul8_16
  1623  05B7  0871               	movf	?__Umul8_16+1,w
  1624  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1625  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1626  05BA  00B9               	movwf	___flmul@temp+1
  1627  05BB  0870               	movf	?__Umul8_16,w
  1628  05BC  00B8               	movwf	___flmul@temp
  1629  05BD  0838               	movf	___flmul@temp,w
  1630  05BE  00A8               	movwf	??___flmul
  1631  05BF  01A9               	clrf	??___flmul+1
  1632  05C0  01AA               	clrf	??___flmul+2
  1633  05C1  01AB               	clrf	??___flmul+3
  1634  05C2  0828               	movf	??___flmul,w
  1635  05C3  07AE               	addwf	___flmul@grs,f
  1636  05C4  0829               	movf	??___flmul+1,w
  1637  05C5  1103               	clrz
  1638  05C6  1803               	skipnc
  1639  05C7  3E01               	addlw	1
  1640  05C8  1D03               	btfss	3,2
  1641  05C9  07AF               	addwf	___flmul@grs+1,f
  1642  05CA  082A               	movf	??___flmul+2,w
  1643  05CB  1103               	clrz
  1644  05CC  1803               	skipnc
  1645  05CD  3E01               	addlw	1
  1646  05CE  1D03               	btfss	3,2
  1647  05CF  07B0               	addwf	___flmul@grs+2,f
  1648  05D0  082B               	movf	??___flmul+3,w
  1649  05D1  1103               	clrz
  1650  05D2  1803               	skipnc
  1651  05D3  3E01               	addlw	1
  1652  05D4  1D03               	btfss	3,2
  1653  05D5  07B1               	addwf	___flmul@grs+3,f
  1654  05D6  0839               	movf	___flmul@temp+1,w
  1655  05D7  00A8               	movwf	??___flmul
  1656  05D8  01A9               	clrf	??___flmul+1
  1657  05D9  01AA               	clrf	??___flmul+2
  1658  05DA  01AB               	clrf	??___flmul+3
  1659  05DB  0828               	movf	??___flmul,w
  1660  05DC  07B4               	addwf	___flmul@prod,f
  1661  05DD  0829               	movf	??___flmul+1,w
  1662  05DE  1103               	clrz
  1663  05DF  1803               	skipnc
  1664  05E0  3E01               	addlw	1
  1665  05E1  1D03               	btfss	3,2
  1666  05E2  07B5               	addwf	___flmul@prod+1,f
  1667  05E3  082A               	movf	??___flmul+2,w
  1668  05E4  1103               	clrz
  1669  05E5  1803               	skipnc
  1670  05E6  3E01               	addlw	1
  1671  05E7  1D03               	btfss	3,2
  1672  05E8  07B6               	addwf	___flmul@prod+2,f
  1673  05E9  082B               	movf	??___flmul+3,w
  1674  05EA  1103               	clrz
  1675  05EB  1803               	skipnc
  1676  05EC  3E01               	addlw	1
  1677  05ED  1D03               	btfss	3,2
  1678  05EE  07B7               	addwf	___flmul@prod+3,f
  1679  05EF  3008               	movlw	8
  1680  05F0  00A8               	movwf	??___flmul
  1681  05F1                     u1565:	
  1682  05F1  1003               	clrc
  1683  05F2  0DAE               	rlf	___flmul@grs,f
  1684  05F3  0DAF               	rlf	___flmul@grs+1,f
  1685  05F4  0DB0               	rlf	___flmul@grs+2,f
  1686  05F5  0DB1               	rlf	___flmul@grs+3,f
  1687  05F6  0BA8               	decfsz	??___flmul,f
  1688  05F7  2DF1               	goto	u1565
  1689  05F8  0821               	movf	___flmul@b+1,w
  1690  05F9  00A8               	movwf	??___flmul
  1691  05FA  0828               	movf	??___flmul,w
  1692  05FB  00F0               	movwf	__Umul8_16@multiplicand
  1693  05FC  0824               	movf	___flmul@a,w
  1694  05FD  120A  158A  27A6  120A  118A  	fcall	__Umul8_16
  1695  0602  0871               	movf	?__Umul8_16+1,w
  1696  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1697  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1698  0605  00B9               	movwf	___flmul@temp+1
  1699  0606  0870               	movf	?__Umul8_16,w
  1700  0607  00B8               	movwf	___flmul@temp
  1701  0608  0838               	movf	___flmul@temp,w
  1702  0609  00A8               	movwf	??___flmul
  1703  060A  0839               	movf	___flmul@temp+1,w
  1704  060B  00A9               	movwf	??___flmul+1
  1705  060C  01AA               	clrf	??___flmul+2
  1706  060D  01AB               	clrf	??___flmul+3
  1707  060E  0828               	movf	??___flmul,w
  1708  060F  07AE               	addwf	___flmul@grs,f
  1709  0610  0829               	movf	??___flmul+1,w
  1710  0611  1103               	clrz
  1711  0612  1803               	skipnc
  1712  0613  3E01               	addlw	1
  1713  0614  1D03               	btfss	3,2
  1714  0615  07AF               	addwf	___flmul@grs+1,f
  1715  0616  082A               	movf	??___flmul+2,w
  1716  0617  1103               	clrz
  1717  0618  1803               	skipnc
  1718  0619  3E01               	addlw	1
  1719  061A  1D03               	btfss	3,2
  1720  061B  07B0               	addwf	___flmul@grs+2,f
  1721  061C  082B               	movf	??___flmul+3,w
  1722  061D  1103               	clrz
  1723  061E  1803               	skipnc
  1724  061F  3E01               	addlw	1
  1725  0620  1D03               	btfss	3,2
  1726  0621  07B1               	addwf	___flmul@grs+3,f
  1727  0622  0820               	movf	___flmul@b,w
  1728  0623  00A8               	movwf	??___flmul
  1729  0624  0828               	movf	??___flmul,w
  1730  0625  00F0               	movwf	__Umul8_16@multiplicand
  1731  0626  0825               	movf	___flmul@a+1,w
  1732  0627  120A  158A  27A6  120A  118A  	fcall	__Umul8_16
  1733  062C  0871               	movf	?__Umul8_16+1,w
  1734  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1735  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1736  062F  00B9               	movwf	___flmul@temp+1
  1737  0630  0870               	movf	?__Umul8_16,w
  1738  0631  00B8               	movwf	___flmul@temp
  1739  0632  0838               	movf	___flmul@temp,w
  1740  0633  00A8               	movwf	??___flmul
  1741  0634  0839               	movf	___flmul@temp+1,w
  1742  0635  00A9               	movwf	??___flmul+1
  1743  0636  01AA               	clrf	??___flmul+2
  1744  0637  01AB               	clrf	??___flmul+3
  1745  0638  0828               	movf	??___flmul,w
  1746  0639  07AE               	addwf	___flmul@grs,f
  1747  063A  0829               	movf	??___flmul+1,w
  1748  063B  1103               	clrz
  1749  063C  1803               	skipnc
  1750  063D  3E01               	addlw	1
  1751  063E  1D03               	btfss	3,2
  1752  063F  07AF               	addwf	___flmul@grs+1,f
  1753  0640  082A               	movf	??___flmul+2,w
  1754  0641  1103               	clrz
  1755  0642  1803               	skipnc
  1756  0643  3E01               	addlw	1
  1757  0644  1D03               	btfss	3,2
  1758  0645  07B0               	addwf	___flmul@grs+2,f
  1759  0646  082B               	movf	??___flmul+3,w
  1760  0647  1103               	clrz
  1761  0648  1803               	skipnc
  1762  0649  3E01               	addlw	1
  1763  064A  1D03               	btfss	3,2
  1764  064B  07B1               	addwf	___flmul@grs+3,f
  1765  064C  3008               	movlw	8
  1766  064D  00A8               	movwf	??___flmul
  1767  064E                     u1595:	
  1768  064E  1003               	clrc
  1769  064F  0DAE               	rlf	___flmul@grs,f
  1770  0650  0DAF               	rlf	___flmul@grs+1,f
  1771  0651  0DB0               	rlf	___flmul@grs+2,f
  1772  0652  0DB1               	rlf	___flmul@grs+3,f
  1773  0653  0BA8               	decfsz	??___flmul,f
  1774  0654  2E4E               	goto	u1595
  1775  0655  0820               	movf	___flmul@b,w
  1776  0656  00A8               	movwf	??___flmul
  1777  0657  0828               	movf	??___flmul,w
  1778  0658  00F0               	movwf	__Umul8_16@multiplicand
  1779  0659  0824               	movf	___flmul@a,w
  1780  065A  120A  158A  27A6  120A  118A  	fcall	__Umul8_16
  1781  065F  0871               	movf	?__Umul8_16+1,w
  1782  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0662  00B9               	movwf	___flmul@temp+1
  1785  0663  0870               	movf	?__Umul8_16,w
  1786  0664  00B8               	movwf	___flmul@temp
  1787  0665  0838               	movf	___flmul@temp,w
  1788  0666  00A8               	movwf	??___flmul
  1789  0667  0839               	movf	___flmul@temp+1,w
  1790  0668  00A9               	movwf	??___flmul+1
  1791  0669  01AA               	clrf	??___flmul+2
  1792  066A  01AB               	clrf	??___flmul+3
  1793  066B  0828               	movf	??___flmul,w
  1794  066C  07AE               	addwf	___flmul@grs,f
  1795  066D  0829               	movf	??___flmul+1,w
  1796  066E  1103               	clrz
  1797  066F  1803               	skipnc
  1798  0670  3E01               	addlw	1
  1799  0671  1D03               	btfss	3,2
  1800  0672  07AF               	addwf	___flmul@grs+1,f
  1801  0673  082A               	movf	??___flmul+2,w
  1802  0674  1103               	clrz
  1803  0675  1803               	skipnc
  1804  0676  3E01               	addlw	1
  1805  0677  1D03               	btfss	3,2
  1806  0678  07B0               	addwf	___flmul@grs+2,f
  1807  0679  082B               	movf	??___flmul+3,w
  1808  067A  1103               	clrz
  1809  067B  1803               	skipnc
  1810  067C  3E01               	addlw	1
  1811  067D  1D03               	btfss	3,2
  1812  067E  07B1               	addwf	___flmul@grs+3,f
  1813  067F  0821               	movf	___flmul@b+1,w
  1814  0680  00A8               	movwf	??___flmul
  1815  0681  0828               	movf	??___flmul,w
  1816  0682  00F0               	movwf	__Umul8_16@multiplicand
  1817  0683  0826               	movf	___flmul@a+2,w
  1818  0684  120A  158A  27A6  120A  118A  	fcall	__Umul8_16
  1819  0689  0871               	movf	?__Umul8_16+1,w
  1820  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1821  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1822  068C  00B9               	movwf	___flmul@temp+1
  1823  068D  0870               	movf	?__Umul8_16,w
  1824  068E  00B8               	movwf	___flmul@temp
  1825  068F  0838               	movf	___flmul@temp,w
  1826  0690  00A8               	movwf	??___flmul
  1827  0691  0839               	movf	___flmul@temp+1,w
  1828  0692  00A9               	movwf	??___flmul+1
  1829  0693  01AA               	clrf	??___flmul+2
  1830  0694  01AB               	clrf	??___flmul+3
  1831  0695  0828               	movf	??___flmul,w
  1832  0696  07B4               	addwf	___flmul@prod,f
  1833  0697  0829               	movf	??___flmul+1,w
  1834  0698  1103               	clrz
  1835  0699  1803               	skipnc
  1836  069A  3E01               	addlw	1
  1837  069B  1D03               	btfss	3,2
  1838  069C  07B5               	addwf	___flmul@prod+1,f
  1839  069D  082A               	movf	??___flmul+2,w
  1840  069E  1103               	clrz
  1841  069F  1803               	skipnc
  1842  06A0  3E01               	addlw	1
  1843  06A1  1D03               	btfss	3,2
  1844  06A2  07B6               	addwf	___flmul@prod+2,f
  1845  06A3  082B               	movf	??___flmul+3,w
  1846  06A4  1103               	clrz
  1847  06A5  1803               	skipnc
  1848  06A6  3E01               	addlw	1
  1849  06A7  1D03               	btfss	3,2
  1850  06A8  07B7               	addwf	___flmul@prod+3,f
  1851  06A9  0822               	movf	___flmul@b+2,w
  1852  06AA  00A8               	movwf	??___flmul
  1853  06AB  0828               	movf	??___flmul,w
  1854  06AC  00F0               	movwf	__Umul8_16@multiplicand
  1855  06AD  0825               	movf	___flmul@a+1,w
  1856  06AE  120A  158A  27A6  120A  118A  	fcall	__Umul8_16
  1857  06B3  0871               	movf	?__Umul8_16+1,w
  1858  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1859  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1860  06B6  00B9               	movwf	___flmul@temp+1
  1861  06B7  0870               	movf	?__Umul8_16,w
  1862  06B8  00B8               	movwf	___flmul@temp
  1863  06B9  0838               	movf	___flmul@temp,w
  1864  06BA  00A8               	movwf	??___flmul
  1865  06BB  0839               	movf	___flmul@temp+1,w
  1866  06BC  00A9               	movwf	??___flmul+1
  1867  06BD  01AA               	clrf	??___flmul+2
  1868  06BE  01AB               	clrf	??___flmul+3
  1869  06BF  0828               	movf	??___flmul,w
  1870  06C0  07B4               	addwf	___flmul@prod,f
  1871  06C1  0829               	movf	??___flmul+1,w
  1872  06C2  1103               	clrz
  1873  06C3  1803               	skipnc
  1874  06C4  3E01               	addlw	1
  1875  06C5  1D03               	btfss	3,2
  1876  06C6  07B5               	addwf	___flmul@prod+1,f
  1877  06C7  082A               	movf	??___flmul+2,w
  1878  06C8  1103               	clrz
  1879  06C9  1803               	skipnc
  1880  06CA  3E01               	addlw	1
  1881  06CB  1D03               	btfss	3,2
  1882  06CC  07B6               	addwf	___flmul@prod+2,f
  1883  06CD  082B               	movf	??___flmul+3,w
  1884  06CE  1103               	clrz
  1885  06CF  1803               	skipnc
  1886  06D0  3E01               	addlw	1
  1887  06D1  1D03               	btfss	3,2
  1888  06D2  07B7               	addwf	___flmul@prod+3,f
  1889  06D3  0822               	movf	___flmul@b+2,w
  1890  06D4  00A8               	movwf	??___flmul
  1891  06D5  0828               	movf	??___flmul,w
  1892  06D6  00F0               	movwf	__Umul8_16@multiplicand
  1893  06D7  0826               	movf	___flmul@a+2,w
  1894  06D8  120A  158A  27A6  120A  118A  	fcall	__Umul8_16
  1895  06DD  0871               	movf	?__Umul8_16+1,w
  1896  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1897  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1898  06E0  00B9               	movwf	___flmul@temp+1
  1899  06E1  0870               	movf	?__Umul8_16,w
  1900  06E2  00B8               	movwf	___flmul@temp
  1901  06E3  0838               	movf	___flmul@temp,w
  1902  06E4  00A8               	movwf	??___flmul
  1903  06E5  0839               	movf	___flmul@temp+1,w
  1904  06E6  00A9               	movwf	??___flmul+1
  1905  06E7  01AA               	clrf	??___flmul+2
  1906  06E8  01AB               	clrf	??___flmul+3
  1907  06E9  3008               	movlw	8
  1908  06EA                     u1635:	
  1909  06EA  1003               	clrc
  1910  06EB  0DA8               	rlf	??___flmul,f
  1911  06EC  0DA9               	rlf	??___flmul+1,f
  1912  06ED  0DAA               	rlf	??___flmul+2,f
  1913  06EE  0DAB               	rlf	??___flmul+3,f
  1914  06EF  3EFF               	addlw	-1
  1915  06F0  1D03               	skipz
  1916  06F1  2EEA               	goto	u1635
  1917  06F2  0828               	movf	??___flmul,w
  1918  06F3  07B4               	addwf	___flmul@prod,f
  1919  06F4  0829               	movf	??___flmul+1,w
  1920  06F5  1103               	clrz
  1921  06F6  1803               	skipnc
  1922  06F7  3E01               	addlw	1
  1923  06F8  1D03               	btfss	3,2
  1924  06F9  07B5               	addwf	___flmul@prod+1,f
  1925  06FA  082A               	movf	??___flmul+2,w
  1926  06FB  1103               	clrz
  1927  06FC  1803               	skipnc
  1928  06FD  3E01               	addlw	1
  1929  06FE  1D03               	btfss	3,2
  1930  06FF  07B6               	addwf	___flmul@prod+2,f
  1931  0700  082B               	movf	??___flmul+3,w
  1932  0701  1103               	clrz
  1933  0702  1803               	skipnc
  1934  0703  3E01               	addlw	1
  1935  0704  1D03               	btfss	3,2
  1936  0705  07B7               	addwf	___flmul@prod+3,f
  1937  0706  082E               	movf	___flmul@grs,w
  1938  0707  00A8               	movwf	??___flmul
  1939  0708  082F               	movf	___flmul@grs+1,w
  1940  0709  00A9               	movwf	??___flmul+1
  1941  070A  0830               	movf	___flmul@grs+2,w
  1942  070B  00AA               	movwf	??___flmul+2
  1943  070C  0831               	movf	___flmul@grs+3,w
  1944  070D  00AB               	movwf	??___flmul+3
  1945  070E  3018               	movlw	24
  1946  070F                     u1655:	
  1947  070F  1003               	clrc
  1948  0710  0CAB               	rrf	??___flmul+3,f
  1949  0711  0CAA               	rrf	??___flmul+2,f
  1950  0712  0CA9               	rrf	??___flmul+1,f
  1951  0713  0CA8               	rrf	??___flmul,f
  1952  0714  3EFF               	addlw	-1
  1953  0715  1D03               	skipz
  1954  0716  2F0F               	goto	u1655
  1955  0717  0828               	movf	??___flmul,w
  1956  0718  07B4               	addwf	___flmul@prod,f
  1957  0719  0829               	movf	??___flmul+1,w
  1958  071A  1103               	clrz
  1959  071B  1803               	skipnc
  1960  071C  3E01               	addlw	1
  1961  071D  1D03               	btfss	3,2
  1962  071E  07B5               	addwf	___flmul@prod+1,f
  1963  071F  082A               	movf	??___flmul+2,w
  1964  0720  1103               	clrz
  1965  0721  1803               	skipnc
  1966  0722  3E01               	addlw	1
  1967  0723  1D03               	btfss	3,2
  1968  0724  07B6               	addwf	___flmul@prod+2,f
  1969  0725  082B               	movf	??___flmul+3,w
  1970  0726  1103               	clrz
  1971  0727  1803               	skipnc
  1972  0728  3E01               	addlw	1
  1973  0729  1D03               	btfss	3,2
  1974  072A  07B7               	addwf	___flmul@prod+3,f
  1975  072B  3008               	movlw	8
  1976  072C  00A8               	movwf	??___flmul
  1977  072D                     u1675:	
  1978  072D  1003               	clrc
  1979  072E  0DAE               	rlf	___flmul@grs,f
  1980  072F  0DAF               	rlf	___flmul@grs+1,f
  1981  0730  0DB0               	rlf	___flmul@grs+2,f
  1982  0731  0DB1               	rlf	___flmul@grs+3,f
  1983  0732  0BA8               	decfsz	??___flmul,f
  1984  0733  2F2D               	goto	u1675
  1985  0734  0833               	movf	___flmul@bexp,w
  1986  0735  0732               	addwf	___flmul@aexp,w
  1987  0736  00A8               	movwf	??___flmul
  1988  0737  01A9               	clrf	??___flmul+1
  1989  0738  0DA9               	rlf	??___flmul+1,f
  1990  0739  0828               	movf	??___flmul,w
  1991  073A  3E82               	addlw	130
  1992  073B  00B8               	movwf	___flmul@temp
  1993  073C  0829               	movf	??___flmul+1,w
  1994  073D  1803               	skipnc
  1995  073E  3E01               	addlw	1
  1996  073F  3EFF               	addlw	255
  1997  0740  00B9               	movwf	___flmul@temp+1
  1998  0741                     l1592:	
  1999  0741  1BB6               	btfsc	___flmul@prod+2,7
  2000  0742  2F5E               	goto	l1594
  2001  0743  3001               	movlw	1
  2002  0744  00A8               	movwf	??___flmul
  2003  0745                     u1685:	
  2004  0745  1003               	clrc
  2005  0746  0DB4               	rlf	___flmul@prod,f
  2006  0747  0DB5               	rlf	___flmul@prod+1,f
  2007  0748  0DB6               	rlf	___flmul@prod+2,f
  2008  0749  0DB7               	rlf	___flmul@prod+3,f
  2009  074A  0BA8               	decfsz	??___flmul,f
  2010  074B  2F45               	goto	u1685
  2011  074C  1BB1               	btfsc	___flmul@grs+3,7
  2012  074D  1434               	bsf	___flmul@prod,0
  2013  074E  3001               	movlw	1
  2014  074F  00A8               	movwf	??___flmul
  2015  0750                     u1705:	
  2016  0750  1003               	clrc
  2017  0751  0DAE               	rlf	___flmul@grs,f
  2018  0752  0DAF               	rlf	___flmul@grs+1,f
  2019  0753  0DB0               	rlf	___flmul@grs+2,f
  2020  0754  0DB1               	rlf	___flmul@grs+3,f
  2021  0755  0BA8               	decfsz	??___flmul,f
  2022  0756  2F50               	goto	u1705
  2023  0757  30FF               	movlw	255
  2024  0758  07B8               	addwf	___flmul@temp,f
  2025  0759  1803               	skipnc
  2026  075A  0AB9               	incf	___flmul@temp+1,f
  2027  075B  30FF               	movlw	255
  2028  075C  07B9               	addwf	___flmul@temp+1,f
  2029  075D  2F41               	goto	l1592
  2030  075E                     l1594:	
  2031  075E  01B2               	clrf	___flmul@aexp
  2032  075F  1FB1               	btfss	___flmul@grs+3,7
  2033  0760  2F77               	goto	l1604
  2034  0761  30FF               	movlw	255
  2035  0762  052E               	andwf	___flmul@grs,w
  2036  0763  00A8               	movwf	??___flmul
  2037  0764  30FF               	movlw	255
  2038  0765  052F               	andwf	___flmul@grs+1,w
  2039  0766  00A9               	movwf	??___flmul+1
  2040  0767  30FF               	movlw	255
  2041  0768  0530               	andwf	___flmul@grs+2,w
  2042  0769  00AA               	movwf	??___flmul+2
  2043  076A  307F               	movlw	127
  2044  076B  0531               	andwf	___flmul@grs+3,w
  2045  076C  00AB               	movwf	??___flmul+3
  2046  076D  082B               	movf	??___flmul+3,w
  2047  076E  042A               	iorwf	??___flmul+2,w
  2048  076F  0429               	iorwf	??___flmul+1,w
  2049  0770  0428               	iorwf	??___flmul,w
  2050  0771  1903               	skipnz
  2051  0772  1834               	btfsc	___flmul@prod,0
  2052  0773  2F75               	goto	l1600
  2053  0774  2F77               	goto	l1604
  2054  0775                     l1600:	
  2055  0775  01B2               	clrf	___flmul@aexp
  2056  0776  0AB2               	incf	___flmul@aexp,f
  2057  0777                     l1604:	
  2058  0777  0832               	movf	___flmul@aexp,w
  2059  0778  1903               	btfsc	3,2
  2060  0779  2FA9               	goto	l1614
  2061  077A  3001               	movlw	1
  2062  077B  07B4               	addwf	___flmul@prod,f
  2063  077C  3000               	movlw	0
  2064  077D  1803               	skipnc
  2065  077E  3001               	movlw	1
  2066  077F  07B5               	addwf	___flmul@prod+1,f
  2067  0780  3000               	movlw	0
  2068  0781  1803               	skipnc
  2069  0782  3001               	movlw	1
  2070  0783  07B6               	addwf	___flmul@prod+2,f
  2071  0784  3000               	movlw	0
  2072  0785  1803               	skipnc
  2073  0786  3001               	movlw	1
  2074  0787  07B7               	addwf	___flmul@prod+3,f
  2075  0788  1C37               	btfss	___flmul@prod+3,0
  2076  0789  2FA9               	goto	l1614
  2077  078A  0834               	movf	___flmul@prod,w
  2078  078B  00A8               	movwf	??___flmul
  2079  078C  0835               	movf	___flmul@prod+1,w
  2080  078D  00A9               	movwf	??___flmul+1
  2081  078E  0836               	movf	___flmul@prod+2,w
  2082  078F  00AA               	movwf	??___flmul+2
  2083  0790  0837               	movf	___flmul@prod+3,w
  2084  0791  00AB               	movwf	??___flmul+3
  2085  0792  3001               	movlw	1
  2086  0793  00AC               	movwf	??___flmul+4
  2087  0794                     u1775:	
  2088  0794  0D2B               	rlf	??___flmul+3,w
  2089  0795  0CAB               	rrf	??___flmul+3,f
  2090  0796  0CAA               	rrf	??___flmul+2,f
  2091  0797  0CA9               	rrf	??___flmul+1,f
  2092  0798  0CA8               	rrf	??___flmul,f
  2093  0799  0BAC               	decfsz	??___flmul+4,f
  2094  079A  2F94               	goto	u1775
  2095  079B  082B               	movf	??___flmul+3,w
  2096  079C  00B7               	movwf	___flmul@prod+3
  2097  079D  082A               	movf	??___flmul+2,w
  2098  079E  00B6               	movwf	___flmul@prod+2
  2099  079F  0829               	movf	??___flmul+1,w
  2100  07A0  00B5               	movwf	___flmul@prod+1
  2101  07A1  0828               	movf	??___flmul,w
  2102  07A2  00B4               	movwf	___flmul@prod
  2103  07A3  3001               	movlw	1
  2104  07A4  07B8               	addwf	___flmul@temp,f
  2105  07A5  1803               	skipnc
  2106  07A6  0AB9               	incf	___flmul@temp+1,f
  2107  07A7  3000               	movlw	0
  2108  07A8  07B9               	addwf	___flmul@temp+1,f
  2109  07A9                     l1614:	
  2110  07A9  0839               	movf	___flmul@temp+1,w
  2111  07AA  3A80               	xorlw	128
  2112  07AB  00FF               	movwf	127
  2113  07AC  3080               	movlw	128
  2114  07AD  027F               	subwf	127,w
  2115  07AE  1D03               	skipz
  2116  07AF  2FB2               	goto	u1785
  2117  07B0  30FF               	movlw	255
  2118  07B1  0238               	subwf	___flmul@temp,w
  2119  07B2                     u1785:	
  2120  07B2  1C03               	skipc
  2121  07B3  2FBF               	goto	l1618
  2122  07B4  307F               	movlw	127
  2123  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  2124  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  2125  07B7  00B7               	movwf	___flmul@prod+3
  2126  07B8  3080               	movlw	128
  2127  07B9  00B6               	movwf	___flmul@prod+2
  2128  07BA  3000               	movlw	0
  2129  07BB  00B5               	movwf	___flmul@prod+1
  2130  07BC  3000               	movlw	0
  2131  07BD  00B4               	movwf	___flmul@prod
  2132  07BE  2FEF               	goto	l593
  2133  07BF                     l1618:	
  2134  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  2135  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  2136  07C1  0839               	movf	___flmul@temp+1,w
  2137  07C2  3A80               	xorlw	128
  2138  07C3  00FF               	movwf	127
  2139  07C4  3080               	movlw	128
  2140  07C5  027F               	subwf	127,w
  2141  07C6  1D03               	skipz
  2142  07C7  2FCA               	goto	u1795
  2143  07C8  3001               	movlw	1
  2144  07C9  0238               	subwf	___flmul@temp,w
  2145  07CA                     u1795:	
  2146  07CA  1803               	skipnc
  2147  07CB  2FD8               	goto	l1624
  2148  07CC  3000               	movlw	0
  2149  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  2150  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  2151  07CF  00B7               	movwf	___flmul@prod+3
  2152  07D0  3000               	movlw	0
  2153  07D1  00B6               	movwf	___flmul@prod+2
  2154  07D2  3000               	movlw	0
  2155  07D3  00B5               	movwf	___flmul@prod+1
  2156  07D4  3000               	movlw	0
  2157  07D5  00B4               	movwf	___flmul@prod
  2158  07D6  01AD               	clrf	___flmul@sign
  2159  07D7  2FEF               	goto	l593
  2160  07D8                     l1624:	
  2161  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  2162  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  2163  07DA  0838               	movf	___flmul@temp,w
  2164  07DB  00A8               	movwf	??___flmul
  2165  07DC  0828               	movf	??___flmul,w
  2166  07DD  00B3               	movwf	___flmul@bexp
  2167  07DE  30FF               	movlw	255
  2168  07DF  05B4               	andwf	___flmul@prod,f
  2169  07E0  30FF               	movlw	255
  2170  07E1  05B5               	andwf	___flmul@prod+1,f
  2171  07E2  307F               	movlw	127
  2172  07E3  05B6               	andwf	___flmul@prod+2,f
  2173  07E4  3000               	movlw	0
  2174  07E5  05B7               	andwf	___flmul@prod+3,f
  2175  07E6  1833               	btfsc	___flmul@bexp,0
  2176  07E7  17B6               	bsf	___flmul@prod+2,7
  2177  07E8  0833               	movf	___flmul@bexp,w
  2178  07E9  00A8               	movwf	??___flmul
  2179  07EA  1003               	clrc
  2180  07EB  0C28               	rrf	??___flmul,w
  2181  07EC  00A9               	movwf	??___flmul+1
  2182  07ED  0829               	movf	??___flmul+1,w
  2183  07EE  00B7               	movwf	___flmul@prod+3
  2184  07EF                     l593:	
  2185  07EF  082D               	movf	___flmul@sign,w
  2186  07F0  00A8               	movwf	??___flmul
  2187  07F1  0828               	movf	??___flmul,w
  2188  07F2  04B7               	iorwf	___flmul@prod+3,f
  2189  07F3  0837               	movf	___flmul@prod+3,w
  2190  07F4  00A3               	movwf	?___flmul+3
  2191  07F5  0836               	movf	___flmul@prod+2,w
  2192  07F6  00A2               	movwf	?___flmul+2
  2193  07F7  0835               	movf	___flmul@prod+1,w
  2194  07F8  00A1               	movwf	?___flmul+1
  2195  07F9  0834               	movf	___flmul@prod,w
  2196  07FA  00A0               	movwf	?___flmul
  2197  07FB  0008               	return
  2198  07FC                     __end_of___flmul:	
  2199                           
  2200                           	psect	text4
  2201  0FA6                     __ptext4:	
  2202 ;; *************** function __Umul8_16 *****************
  2203 ;; Defined at:
  2204 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  multiplier      1    wreg     unsigned char 
  2207 ;;  multiplicand    1    0[COMMON] unsigned char 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  multiplier      1    8[COMMON] unsigned char 
  2210 ;;  word_mpld       2    6[COMMON] unsigned int 
  2211 ;;  product         2    4[COMMON] unsigned int 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  2    0[COMMON] unsigned int 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         2       0       0       0       0
  2222 ;;      Locals:         5       0       0       0       0
  2223 ;;      Temps:          2       0       0       0       0
  2224 ;;      Totals:         9       0       0       0       0
  2225 ;;Total ram usage:        9 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		___flmul
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           
  2235                           ;psect for function __Umul8_16
  2236  0FA6                     __Umul8_16:	
  2237                           
  2238                           ;incstack = 0
  2239                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  2240                           ;__Umul8_16@multiplier stored from wreg
  2241  0FA6  00F8               	movwf	__Umul8_16@multiplier
  2242  0FA7  01F4               	clrf	__Umul8_16@product
  2243  0FA8  01F5               	clrf	__Umul8_16@product+1
  2244  0FA9  0870               	movf	__Umul8_16@multiplicand,w
  2245  0FAA  00F2               	movwf	??__Umul8_16
  2246  0FAB  01F3               	clrf	??__Umul8_16+1
  2247  0FAC  0872               	movf	??__Umul8_16,w
  2248  0FAD  00F6               	movwf	__Umul8_16@word_mpld
  2249  0FAE  0873               	movf	??__Umul8_16+1,w
  2250  0FAF  00F7               	movwf	__Umul8_16@word_mpld+1
  2251  0FB0                     l1306:	
  2252  0FB0  1C78               	btfss	__Umul8_16@multiplier,0
  2253  0FB1  2FB8               	goto	l638
  2254  0FB2  0876               	movf	__Umul8_16@word_mpld,w
  2255  0FB3  07F4               	addwf	__Umul8_16@product,f
  2256  0FB4  1803               	skipnc
  2257  0FB5  0AF5               	incf	__Umul8_16@product+1,f
  2258  0FB6  0877               	movf	__Umul8_16@word_mpld+1,w
  2259  0FB7  07F5               	addwf	__Umul8_16@product+1,f
  2260  0FB8                     l638:	
  2261  0FB8  3001               	movlw	1
  2262  0FB9                     u1095:	
  2263  0FB9  1003               	clrc
  2264  0FBA  0DF6               	rlf	__Umul8_16@word_mpld,f
  2265  0FBB  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  2266  0FBC  3EFF               	addlw	-1
  2267  0FBD  1D03               	skipz
  2268  0FBE  2FB9               	goto	u1095
  2269  0FBF  1003               	clrc
  2270  0FC0  0CF8               	rrf	__Umul8_16@multiplier,f
  2271  0FC1  0878               	movf	__Umul8_16@multiplier,w
  2272  0FC2  1D03               	btfss	3,2
  2273  0FC3  2FB0               	goto	l1306
  2274  0FC4  0875               	movf	__Umul8_16@product+1,w
  2275  0FC5  00F1               	movwf	?__Umul8_16+1
  2276  0FC6  0874               	movf	__Umul8_16@product,w
  2277  0FC7  00F0               	movwf	?__Umul8_16
  2278  0FC8  0008               	return
  2279  0FC9                     __end_of__Umul8_16:	
  2280                           
  2281                           	psect	text5
  2282  00F9                     __ptext5:	
  2283 ;; *************** function ___awmod *****************
  2284 ;; Defined at:
  2285 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  divisor         2    9[COMMON] int 
  2288 ;;  dividend        2   11[COMMON] int 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  sign            1    1[BANK0 ] unsigned char 
  2291 ;;  counter         1    0[BANK0 ] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  2    9[COMMON] int 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         4       0       0       0       0
  2302 ;;      Locals:         0       2       0       0       0
  2303 ;;      Temps:          1       0       0       0       0
  2304 ;;      Totals:         5       2       0       0       0
  2305 ;;Total ram usage:        7 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_main
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           
  2315                           ;psect for function ___awmod
  2316  00F9                     ___awmod:	
  2317                           
  2318                           ;incstack = 0
  2319                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2320  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  2321  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  2322  00FB  01A1               	clrf	___awmod@sign
  2323  00FC  1FFC               	btfss	___awmod@dividend+1,7
  2324  00FD  2905               	goto	l1430
  2325  00FE  09FB               	comf	___awmod@dividend,f
  2326  00FF  09FC               	comf	___awmod@dividend+1,f
  2327  0100  0AFB               	incf	___awmod@dividend,f
  2328  0101  1903               	skipnz
  2329  0102  0AFC               	incf	___awmod@dividend+1,f
  2330  0103  01A1               	clrf	___awmod@sign
  2331  0104  0AA1               	incf	___awmod@sign,f
  2332  0105                     l1430:	
  2333  0105  1FFA               	btfss	___awmod@divisor+1,7
  2334  0106  290C               	goto	l1434
  2335  0107  09F9               	comf	___awmod@divisor,f
  2336  0108  09FA               	comf	___awmod@divisor+1,f
  2337  0109  0AF9               	incf	___awmod@divisor,f
  2338  010A  1903               	skipnz
  2339  010B  0AFA               	incf	___awmod@divisor+1,f
  2340  010C                     l1434:	
  2341  010C  0879               	movf	___awmod@divisor,w
  2342  010D  047A               	iorwf	___awmod@divisor+1,w
  2343  010E  1903               	btfsc	3,2
  2344  010F  2939               	goto	l1452
  2345  0110  01A0               	clrf	___awmod@counter
  2346  0111  0AA0               	incf	___awmod@counter,f
  2347  0112                     l1442:	
  2348  0112  1BFA               	btfsc	___awmod@divisor+1,7
  2349  0113  2920               	goto	l1444
  2350  0114  3001               	movlw	1
  2351  0115                     u1285:	
  2352  0115  1003               	clrc
  2353  0116  0DF9               	rlf	___awmod@divisor,f
  2354  0117  0DFA               	rlf	___awmod@divisor+1,f
  2355  0118  3EFF               	addlw	-1
  2356  0119  1D03               	skipz
  2357  011A  2915               	goto	u1285
  2358  011B  3001               	movlw	1
  2359  011C  00FD               	movwf	??___awmod
  2360  011D  087D               	movf	??___awmod,w
  2361  011E  07A0               	addwf	___awmod@counter,f
  2362  011F  2912               	goto	l1442
  2363  0120                     l1444:	
  2364  0120  087A               	movf	___awmod@divisor+1,w
  2365  0121  027C               	subwf	___awmod@dividend+1,w
  2366  0122  1D03               	skipz
  2367  0123  2926               	goto	u1305
  2368  0124  0879               	movf	___awmod@divisor,w
  2369  0125  027B               	subwf	___awmod@dividend,w
  2370  0126                     u1305:	
  2371  0126  1C03               	skipc
  2372  0127  292E               	goto	l1448
  2373  0128  0879               	movf	___awmod@divisor,w
  2374  0129  02FB               	subwf	___awmod@dividend,f
  2375  012A  087A               	movf	___awmod@divisor+1,w
  2376  012B  1C03               	skipc
  2377  012C  03FC               	decf	___awmod@dividend+1,f
  2378  012D  02FC               	subwf	___awmod@dividend+1,f
  2379  012E                     l1448:	
  2380  012E  3001               	movlw	1
  2381  012F                     u1315:	
  2382  012F  1003               	clrc
  2383  0130  0CFA               	rrf	___awmod@divisor+1,f
  2384  0131  0CF9               	rrf	___awmod@divisor,f
  2385  0132  3EFF               	addlw	-1
  2386  0133  1D03               	skipz
  2387  0134  292F               	goto	u1315
  2388  0135  3001               	movlw	1
  2389  0136  02A0               	subwf	___awmod@counter,f
  2390  0137  1D03               	btfss	3,2
  2391  0138  2920               	goto	l1444
  2392  0139                     l1452:	
  2393  0139  0821               	movf	___awmod@sign,w
  2394  013A  1903               	btfsc	3,2
  2395  013B  2941               	goto	l1456
  2396  013C  09FB               	comf	___awmod@dividend,f
  2397  013D  09FC               	comf	___awmod@dividend+1,f
  2398  013E  0AFB               	incf	___awmod@dividend,f
  2399  013F  1903               	skipnz
  2400  0140  0AFC               	incf	___awmod@dividend+1,f
  2401  0141                     l1456:	
  2402  0141  087C               	movf	___awmod@dividend+1,w
  2403  0142  00FA               	movwf	?___awmod+1
  2404  0143  087B               	movf	___awmod@dividend,w
  2405  0144  00F9               	movwf	?___awmod
  2406  0145  0008               	return
  2407  0146                     __end_of___awmod:	
  2408                           
  2409                           	psect	text6
  2410  0146                     __ptext6:	
  2411 ;; *************** function ___awdiv *****************
  2412 ;; Defined at:
  2413 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  divisor         2    0[COMMON] int 
  2416 ;;  dividend        2    2[COMMON] int 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  quotient        2    7[COMMON] int 
  2419 ;;  sign            1    6[COMMON] unsigned char 
  2420 ;;  counter         1    5[COMMON] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  2    0[COMMON] int 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         4       0       0       0       0
  2431 ;;      Locals:         4       0       0       0       0
  2432 ;;      Temps:          1       0       0       0       0
  2433 ;;      Totals:         9       0       0       0       0
  2434 ;;Total ram usage:        9 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function ___awdiv
  2445  0146                     ___awdiv:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2449  0146  01F6               	clrf	___awdiv@sign
  2450  0147  1FF1               	btfss	___awdiv@divisor+1,7
  2451  0148  2950               	goto	l1386
  2452  0149  09F0               	comf	___awdiv@divisor,f
  2453  014A  09F1               	comf	___awdiv@divisor+1,f
  2454  014B  0AF0               	incf	___awdiv@divisor,f
  2455  014C  1903               	skipnz
  2456  014D  0AF1               	incf	___awdiv@divisor+1,f
  2457  014E  01F6               	clrf	___awdiv@sign
  2458  014F  0AF6               	incf	___awdiv@sign,f
  2459  0150                     l1386:	
  2460  0150  1FF3               	btfss	___awdiv@dividend+1,7
  2461  0151  295B               	goto	l1392
  2462  0152  09F2               	comf	___awdiv@dividend,f
  2463  0153  09F3               	comf	___awdiv@dividend+1,f
  2464  0154  0AF2               	incf	___awdiv@dividend,f
  2465  0155  1903               	skipnz
  2466  0156  0AF3               	incf	___awdiv@dividend+1,f
  2467  0157  3001               	movlw	1
  2468  0158  00F4               	movwf	??___awdiv
  2469  0159  0874               	movf	??___awdiv,w
  2470  015A  06F6               	xorwf	___awdiv@sign,f
  2471  015B                     l1392:	
  2472  015B  01F7               	clrf	___awdiv@quotient
  2473  015C  01F8               	clrf	___awdiv@quotient+1
  2474  015D  0870               	movf	___awdiv@divisor,w
  2475  015E  0471               	iorwf	___awdiv@divisor+1,w
  2476  015F  1903               	btfsc	3,2
  2477  0160  2992               	goto	l1414
  2478  0161  01F5               	clrf	___awdiv@counter
  2479  0162  0AF5               	incf	___awdiv@counter,f
  2480  0163                     l1402:	
  2481  0163  1BF1               	btfsc	___awdiv@divisor+1,7
  2482  0164  2971               	goto	l1404
  2483  0165  3001               	movlw	1
  2484  0166                     u1185:	
  2485  0166  1003               	clrc
  2486  0167  0DF0               	rlf	___awdiv@divisor,f
  2487  0168  0DF1               	rlf	___awdiv@divisor+1,f
  2488  0169  3EFF               	addlw	-1
  2489  016A  1D03               	skipz
  2490  016B  2966               	goto	u1185
  2491  016C  3001               	movlw	1
  2492  016D  00F4               	movwf	??___awdiv
  2493  016E  0874               	movf	??___awdiv,w
  2494  016F  07F5               	addwf	___awdiv@counter,f
  2495  0170  2963               	goto	l1402
  2496  0171                     l1404:	
  2497  0171  3001               	movlw	1
  2498  0172                     u1205:	
  2499  0172  1003               	clrc
  2500  0173  0DF7               	rlf	___awdiv@quotient,f
  2501  0174  0DF8               	rlf	___awdiv@quotient+1,f
  2502  0175  3EFF               	addlw	-1
  2503  0176  1D03               	skipz
  2504  0177  2972               	goto	u1205
  2505  0178  0871               	movf	___awdiv@divisor+1,w
  2506  0179  0273               	subwf	___awdiv@dividend+1,w
  2507  017A  1D03               	skipz
  2508  017B  297E               	goto	u1215
  2509  017C  0870               	movf	___awdiv@divisor,w
  2510  017D  0272               	subwf	___awdiv@dividend,w
  2511  017E                     u1215:	
  2512  017E  1C03               	skipc
  2513  017F  2987               	goto	l1410
  2514  0180  0870               	movf	___awdiv@divisor,w
  2515  0181  02F2               	subwf	___awdiv@dividend,f
  2516  0182  0871               	movf	___awdiv@divisor+1,w
  2517  0183  1C03               	skipc
  2518  0184  03F3               	decf	___awdiv@dividend+1,f
  2519  0185  02F3               	subwf	___awdiv@dividend+1,f
  2520  0186  1477               	bsf	___awdiv@quotient,0
  2521  0187                     l1410:	
  2522  0187  3001               	movlw	1
  2523  0188                     u1225:	
  2524  0188  1003               	clrc
  2525  0189  0CF1               	rrf	___awdiv@divisor+1,f
  2526  018A  0CF0               	rrf	___awdiv@divisor,f
  2527  018B  3EFF               	addlw	-1
  2528  018C  1D03               	skipz
  2529  018D  2988               	goto	u1225
  2530  018E  3001               	movlw	1
  2531  018F  02F5               	subwf	___awdiv@counter,f
  2532  0190  1D03               	btfss	3,2
  2533  0191  2971               	goto	l1404
  2534  0192                     l1414:	
  2535  0192  0876               	movf	___awdiv@sign,w
  2536  0193  1903               	btfsc	3,2
  2537  0194  299A               	goto	l1418
  2538  0195  09F7               	comf	___awdiv@quotient,f
  2539  0196  09F8               	comf	___awdiv@quotient+1,f
  2540  0197  0AF7               	incf	___awdiv@quotient,f
  2541  0198  1903               	skipnz
  2542  0199  0AF8               	incf	___awdiv@quotient+1,f
  2543  019A                     l1418:	
  2544  019A  0878               	movf	___awdiv@quotient+1,w
  2545  019B  00F1               	movwf	?___awdiv+1
  2546  019C  0877               	movf	___awdiv@quotient,w
  2547  019D  00F0               	movwf	?___awdiv
  2548  019E  0008               	return
  2549  019F                     __end_of___awdiv:	
  2550                           
  2551                           	psect	text7
  2552  019F                     __ptext7:	
  2553 ;; *************** function _Lcd_Init *****************
  2554 ;; Defined at:
  2555 ;;		line 62 in file "./lcd.h"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0, pclath, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         0       0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0
  2571 ;;      Temps:          2       0       0       0       0
  2572 ;;      Totals:         2       0       0       0       0
  2573 ;;Total ram usage:        2 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    2
  2576 ;; This function calls:
  2577 ;;		_Lcd_Cmd
  2578 ;;		_Lcd_Port
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;;		_welcome
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           
  2586                           ;psect for function _Lcd_Init
  2587  019F                     _Lcd_Init:	
  2588                           
  2589                           ;./lcd.h: 64:   Lcd_Port(0x00);
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2593  019F  3000               	movlw	0
  2594  01A0  120A  158A  2750  120A  118A  	fcall	_Lcd_Port
  2595                           
  2596                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  2597  01A5  301A               	movlw	26
  2598  01A6  00F5               	movwf	??_Lcd_Init+1
  2599  01A7  30F8               	movlw	248
  2600  01A8  00F4               	movwf	??_Lcd_Init
  2601  01A9                     u1967:	
  2602  01A9  0BF4               	decfsz	??_Lcd_Init,f
  2603  01AA  29A9               	goto	u1967
  2604  01AB  0BF5               	decfsz	??_Lcd_Init+1,f
  2605  01AC  29A9               	goto	u1967
  2606  01AD  0000               	nop
  2607                           
  2608                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  2609  01AE  3003               	movlw	3
  2610  01AF  120A  158A  276A  120A  118A  	fcall	_Lcd_Cmd
  2611                           
  2612                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2613  01B4  3007               	movlw	7
  2614  01B5  00F5               	movwf	??_Lcd_Init+1
  2615  01B6  307D               	movlw	125
  2616  01B7  00F4               	movwf	??_Lcd_Init
  2617  01B8                     u1977:	
  2618  01B8  0BF4               	decfsz	??_Lcd_Init,f
  2619  01B9  29B8               	goto	u1977
  2620  01BA  0BF5               	decfsz	??_Lcd_Init+1,f
  2621  01BB  29B8               	goto	u1977
  2622                           
  2623                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  2624  01BC  3003               	movlw	3
  2625  01BD  120A  158A  276A  120A  118A  	fcall	_Lcd_Cmd
  2626                           
  2627                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  2628  01C2  300F               	movlw	15
  2629  01C3  00F5               	movwf	??_Lcd_Init+1
  2630  01C4  3047               	movlw	71
  2631  01C5  00F4               	movwf	??_Lcd_Init
  2632  01C6                     u1987:	
  2633  01C6  0BF4               	decfsz	??_Lcd_Init,f
  2634  01C7  29C6               	goto	u1987
  2635  01C8  0BF5               	decfsz	??_Lcd_Init+1,f
  2636  01C9  29C6               	goto	u1987
  2637  01CA  29CB               	nop2
  2638                           
  2639                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  2640  01CB  3003               	movlw	3
  2641  01CC  120A  158A  276A  120A  118A  	fcall	_Lcd_Cmd
  2642                           
  2643                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  2644  01D1  3002               	movlw	2
  2645  01D2  120A  158A  276A  120A  118A  	fcall	_Lcd_Cmd
  2646                           
  2647                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  2648  01D7  3002               	movlw	2
  2649  01D8  120A  158A  276A  120A  118A  	fcall	_Lcd_Cmd
  2650                           
  2651                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  2652  01DD  3008               	movlw	8
  2653  01DE  120A  158A  276A  120A  118A  	fcall	_Lcd_Cmd
  2654                           
  2655                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  2656  01E3  3000               	movlw	0
  2657  01E4  120A  158A  276A  120A  118A  	fcall	_Lcd_Cmd
  2658                           
  2659                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  2660  01E9  300C               	movlw	12
  2661  01EA  120A  158A  276A  120A  118A  	fcall	_Lcd_Cmd
  2662                           
  2663                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  2664  01EF  3000               	movlw	0
  2665  01F0  120A  158A  276A  120A  118A  	fcall	_Lcd_Cmd
  2666                           
  2667                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  2668  01F5  3006               	movlw	6
  2669  01F6  120A  158A  276A   	fcall	_Lcd_Cmd
  2670  01F9  0008               	return
  2671  01FA                     __end_of_Lcd_Init:	
  2672                           
  2673                           	psect	text8
  2674  0267                     __ptext8:	
  2675 ;; *************** function _ISR *****************
  2676 ;; Defined at:
  2677 ;;		line 51 in file "main.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  y               2    0[BANK0 ] int 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         0       0       0       0       0
  2692 ;;      Locals:         0       2       0       0       0
  2693 ;;      Temps:          3       0       0       0       0
  2694 ;;      Totals:         3       2       0       0       0
  2695 ;;Total ram usage:        5 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    3
  2698 ;; This function calls:
  2699 ;;		_Lcd_Clear
  2700 ;;		_Lcd_Set_Cursor
  2701 ;;		_Lcd_Write_String
  2702 ;; This function is called by:
  2703 ;;		_main
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function _ISR
  2709  0267                     _ISR:	
  2710                           
  2711                           ;main.c: 55:     if(INTCONbits.INTF == 1)
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2715  0267  1C8B               	btfss	11,1	;volatile
  2716  0268  0008               	return
  2717                           
  2718                           ;main.c: 56:     {;main.c: 57:            _delay((unsigned long)((100)*(4000000/4000.0))
      +                          );
  2719  0269  3082               	movlw	130
  2720  026A  00FC               	movwf	??_ISR+1
  2721  026B  30DD               	movlw	221
  2722  026C  00FB               	movwf	??_ISR
  2723  026D                     u1997:	
  2724  026D  0BFB               	decfsz	??_ISR,f
  2725  026E  2A6D               	goto	u1997
  2726  026F  0BFC               	decfsz	??_ISR+1,f
  2727  0270  2A6D               	goto	u1997
  2728  0271  2A72               	nop2
  2729                           
  2730                           ;main.c: 59:         INTCONbits.INTF = 0;
  2731  0272  108B               	bcf	11,1	;volatile
  2732                           
  2733                           ;main.c: 61:         TRISD = 0x00;
  2734  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2735  0274  1303               	bcf	3,6	;RP1=0, select bank1
  2736  0275  0188               	clrf	8	;volatile
  2737                           
  2738                           ;main.c: 64:             Lcd_Clear();
  2739  0276  120A  158A  2745  120A  118A  	fcall	_Lcd_Clear
  2740                           
  2741                           ;main.c: 65:             Lcd_Set_Cursor(1,1);
  2742  027B  01F4               	clrf	Lcd_Set_Cursor@b
  2743  027C  0AF4               	incf	Lcd_Set_Cursor@b,f
  2744  027D  3001               	movlw	1
  2745  027E  120A  118A  20AF  120A  118A  	fcall	_Lcd_Set_Cursor
  2746                           
  2747                           ;main.c: 66:             Lcd_Write_String("Button is Pushed");
  2748  0283  3012               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2749  0284  120A  158A  2784  120A  118A  	fcall	_Lcd_Write_String
  2750                           
  2751                           ;main.c: 67:             Lcd_Set_Cursor(2,2);
  2752  0289  3002               	movlw	2
  2753  028A  00FB               	movwf	??_ISR
  2754  028B  087B               	movf	??_ISR,w
  2755  028C  00F4               	movwf	Lcd_Set_Cursor@b
  2756  028D  3002               	movlw	2
  2757  028E  120A  118A  20AF  120A  118A  	fcall	_Lcd_Set_Cursor
  2758                           
  2759                           ;main.c: 68:             Lcd_Write_String("Please Wait!");
  2760  0293  3050               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2761  0294  120A  158A  2784  120A  118A  	fcall	_Lcd_Write_String
  2762                           
  2763                           ;main.c: 69:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  2764  0299  300B               	movlw	11
  2765  029A  00FD               	movwf	??_ISR+2
  2766  029B  3026               	movlw	38
  2767  029C  00FC               	movwf	??_ISR+1
  2768  029D  305D               	movlw	93
  2769  029E  00FB               	movwf	??_ISR
  2770  029F                     u2007:	
  2771  029F  0BFB               	decfsz	??_ISR,f
  2772  02A0  2A9F               	goto	u2007
  2773  02A1  0BFC               	decfsz	??_ISR+1,f
  2774  02A2  2A9F               	goto	u2007
  2775  02A3  0BFD               	decfsz	??_ISR+2,f
  2776  02A4  2A9F               	goto	u2007
  2777  02A5  2AA6               	nop2
  2778                           
  2779                           ;main.c: 72:             Lcd_Clear();
  2780  02A6  120A  158A  2745  120A  118A  	fcall	_Lcd_Clear
  2781                           
  2782                           ;main.c: 73:             Lcd_Set_Cursor(1,3);
  2783  02AB  3003               	movlw	3
  2784  02AC  00FB               	movwf	??_ISR
  2785  02AD  087B               	movf	??_ISR,w
  2786  02AE  00F4               	movwf	Lcd_Set_Cursor@b
  2787  02AF  3001               	movlw	1
  2788  02B0  120A  118A  20AF  120A  118A  	fcall	_Lcd_Set_Cursor
  2789                           
  2790                           ;main.c: 74:             Lcd_Write_String("ISR ON");
  2791  02B5  306A               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2792  02B6  120A  158A  2784  120A  118A  	fcall	_Lcd_Write_String
  2793                           
  2794                           ;main.c: 75:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  2795  02BB  300B               	movlw	11
  2796  02BC  00FD               	movwf	??_ISR+2
  2797  02BD  3026               	movlw	38
  2798  02BE  00FC               	movwf	??_ISR+1
  2799  02BF  305D               	movlw	93
  2800  02C0  00FB               	movwf	??_ISR
  2801  02C1                     u2017:	
  2802  02C1  0BFB               	decfsz	??_ISR,f
  2803  02C2  2AC1               	goto	u2017
  2804  02C3  0BFC               	decfsz	??_ISR+1,f
  2805  02C4  2AC1               	goto	u2017
  2806  02C5  0BFD               	decfsz	??_ISR+2,f
  2807  02C6  2AC1               	goto	u2017
  2808  02C7  2AC8               	nop2
  2809                           
  2810                           ;main.c: 79:             for (int y=0; y<5; y++)
  2811  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2812  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2813  02CA  01A0               	clrf	ISR@y
  2814  02CB  01A1               	clrf	ISR@y+1
  2815  02CC                     l95:	
  2816                           
  2817                           ;main.c: 80:             {;main.c: 81:                 PORTAbits.RA0 = 1;
  2818  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  2819  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  2820  02CE  1405               	bsf	5,0	;volatile
  2821                           
  2822                           ;main.c: 82:                 _delay((unsigned long)((200)*(4000000/4000.0)));
  2823  02CF  3002               	movlw	2
  2824  02D0  00FD               	movwf	??_ISR+2
  2825  02D1  3004               	movlw	4
  2826  02D2  00FC               	movwf	??_ISR+1
  2827  02D3  30BA               	movlw	186
  2828  02D4  00FB               	movwf	??_ISR
  2829  02D5                     u2027:	
  2830  02D5  0BFB               	decfsz	??_ISR,f
  2831  02D6  2AD5               	goto	u2027
  2832  02D7  0BFC               	decfsz	??_ISR+1,f
  2833  02D8  2AD5               	goto	u2027
  2834  02D9  0BFD               	decfsz	??_ISR+2,f
  2835  02DA  2AD5               	goto	u2027
  2836  02DB  0000               	nop
  2837                           
  2838                           ;main.c: 83:                 PORTAbits.RA0 = 0;
  2839  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2840  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2841  02DE  1005               	bcf	5,0	;volatile
  2842                           
  2843                           ;main.c: 84:                 _delay((unsigned long)((200)*(4000000/4000.0)));
  2844  02DF  3002               	movlw	2
  2845  02E0  00FD               	movwf	??_ISR+2
  2846  02E1  3004               	movlw	4
  2847  02E2  00FC               	movwf	??_ISR+1
  2848  02E3  30BA               	movlw	186
  2849  02E4  00FB               	movwf	??_ISR
  2850  02E5                     u2037:	
  2851  02E5  0BFB               	decfsz	??_ISR,f
  2852  02E6  2AE5               	goto	u2037
  2853  02E7  0BFC               	decfsz	??_ISR+1,f
  2854  02E8  2AE5               	goto	u2037
  2855  02E9  0BFD               	decfsz	??_ISR+2,f
  2856  02EA  2AE5               	goto	u2037
  2857  02EB  0000               	nop
  2858                           
  2859                           ;main.c: 85:             }
  2860  02EC  3001               	movlw	1
  2861  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2862  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2863  02EF  07A0               	addwf	ISR@y,f
  2864  02F0  1803               	skipnc
  2865  02F1  0AA1               	incf	ISR@y+1,f
  2866  02F2  3000               	movlw	0
  2867  02F3  07A1               	addwf	ISR@y+1,f
  2868  02F4  0821               	movf	ISR@y+1,w
  2869  02F5  3A80               	xorlw	128
  2870  02F6  00FF               	movwf	127
  2871  02F7  3080               	movlw	128
  2872  02F8  027F               	subwf	127,w
  2873  02F9  1D03               	skipz
  2874  02FA  2AFD               	goto	u1145
  2875  02FB  3005               	movlw	5
  2876  02FC  0220               	subwf	ISR@y,w
  2877  02FD                     u1145:	
  2878  02FD  1803               	btfsc	3,0
  2879  02FE  0008               	return
  2880  02FF  2ACC               	goto	l95
  2881  0300                     __end_of_ISR:	
  2882                           
  2883                           	psect	text9
  2884  0F84                     __ptext9:	
  2885 ;; *************** function _Lcd_Write_String *****************
  2886 ;; Defined at:
  2887 ;;		line 97 in file "./lcd.h"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  a               1    wreg     PTR unsigned char 
  2890 ;;		 -> STR_10(2), STR_9(2), STR_8(17), STR_7(7), 
  2891 ;;		 -> STR_6(13), STR_5(17), STR_4(14), STR_3(13), 
  2892 ;;		 -> STR_2(14), STR_1(17), 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  a               1    7[COMMON] PTR unsigned char 
  2895 ;;		 -> STR_10(2), STR_9(2), STR_8(17), STR_7(7), 
  2896 ;;		 -> STR_6(13), STR_5(17), STR_4(14), STR_3(13), 
  2897 ;;		 -> STR_2(14), STR_1(17), 
  2898 ;;  i               2    5[COMMON] int 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2908 ;;      Params:         0       0       0       0       0
  2909 ;;      Locals:         3       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0
  2911 ;;      Totals:         3       0       0       0       0
  2912 ;;Total ram usage:        3 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    2
  2915 ;; This function calls:
  2916 ;;		_Lcd_Write_Char
  2917 ;; This function is called by:
  2918 ;;		_ISR
  2919 ;;		_main
  2920 ;;		_welcome
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           
  2925                           ;psect for function _Lcd_Write_String
  2926  0F84                     _Lcd_Write_String:	
  2927                           
  2928                           ;incstack = 0
  2929                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2930                           ;Lcd_Write_String@a stored from wreg
  2931  0F84  00F7               	movwf	Lcd_Write_String@a
  2932                           
  2933                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  2934  0F85  01F5               	clrf	Lcd_Write_String@i
  2935  0F86  01F6               	clrf	Lcd_Write_String@i+1
  2936  0F87                     l1300:	
  2937  0F87  0875               	movf	Lcd_Write_String@i,w
  2938  0F88  0777               	addwf	Lcd_Write_String@a,w
  2939  0F89  0084               	movwf	4
  2940  0F8A  120A  118A  2003  120A  158A  	fcall	stringdir
  2941  0F8F  3A00               	xorlw	0
  2942  0F90  1903               	btfsc	3,2
  2943  0F91  0008               	return
  2944                           
  2945                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  2946  0F92  0875               	movf	Lcd_Write_String@i,w
  2947  0F93  0777               	addwf	Lcd_Write_String@a,w
  2948  0F94  0084               	movwf	4
  2949  0F95  120A  118A  2003  120A  158A  	fcall	stringdir
  2950  0F9A  120A  158A  27C9  120A  158A  	fcall	_Lcd_Write_Char
  2951  0F9F  3001               	movlw	1
  2952  0FA0  07F5               	addwf	Lcd_Write_String@i,f
  2953  0FA1  1803               	skipnc
  2954  0FA2  0AF6               	incf	Lcd_Write_String@i+1,f
  2955  0FA3  3000               	movlw	0
  2956  0FA4  07F6               	addwf	Lcd_Write_String@i+1,f
  2957  0FA5  2F87               	goto	l1300
  2958  0FA6                     __end_of_Lcd_Write_String:	
  2959                           
  2960                           	psect	text10
  2961  0FC9                     __ptext10:	
  2962 ;; *************** function _Lcd_Write_Char *****************
  2963 ;; Defined at:
  2964 ;;		line 81 in file "./lcd.h"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  a               1    wreg     unsigned char 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  a               1    4[COMMON] unsigned char 
  2969 ;;  y               1    3[COMMON] unsigned char 
  2970 ;;  temp            1    2[COMMON] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0, pclath, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2980 ;;      Params:         0       0       0       0       0
  2981 ;;      Locals:         3       0       0       0       0
  2982 ;;      Temps:          1       0       0       0       0
  2983 ;;      Totals:         4       0       0       0       0
  2984 ;;Total ram usage:        4 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    1
  2987 ;; This function calls:
  2988 ;;		_Lcd_Port
  2989 ;; This function is called by:
  2990 ;;		_Lcd_Write_String
  2991 ;;		_main
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           
  2996                           ;psect for function _Lcd_Write_Char
  2997  0FC9                     _Lcd_Write_Char:	
  2998                           
  2999                           ;incstack = 0
  3000                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3001                           ;Lcd_Write_Char@a stored from wreg
  3002  0FC9  00F4               	movwf	Lcd_Write_Char@a
  3003                           
  3004                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  3005  0FCA  0874               	movf	Lcd_Write_Char@a,w
  3006  0FCB  390F               	andlw	15
  3007  0FCC  00F1               	movwf	??_Lcd_Write_Char
  3008  0FCD  0871               	movf	??_Lcd_Write_Char,w
  3009  0FCE  00F2               	movwf	Lcd_Write_Char@temp
  3010                           
  3011                           ;./lcd.h: 85:    y = a&0xF0;
  3012  0FCF  0874               	movf	Lcd_Write_Char@a,w
  3013  0FD0  39F0               	andlw	240
  3014  0FD1  00F1               	movwf	??_Lcd_Write_Char
  3015  0FD2  0871               	movf	??_Lcd_Write_Char,w
  3016  0FD3  00F3               	movwf	Lcd_Write_Char@y
  3017                           
  3018                           ;./lcd.h: 86:    RD1 = 1;
  3019  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  3021  0FD6  1488               	bsf	8,1	;volatile
  3022                           
  3023                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  3024  0FD7  0873               	movf	Lcd_Write_Char@y,w
  3025  0FD8  00F1               	movwf	??_Lcd_Write_Char
  3026  0FD9  3004               	movlw	4
  3027  0FDA                     u1025:	
  3028  0FDA  1003               	clrc
  3029  0FDB  0CF1               	rrf	??_Lcd_Write_Char,f
  3030  0FDC  3EFF               	addlw	-1
  3031  0FDD  1D03               	skipz
  3032  0FDE  2FDA               	goto	u1025
  3033  0FDF  0871               	movf	??_Lcd_Write_Char,w
  3034  0FE0  120A  158A  2750  120A  158A  	fcall	_Lcd_Port
  3035                           
  3036                           ;./lcd.h: 88:    RD3 = 1;
  3037  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  3039  0FE7  1588               	bsf	8,3	;volatile
  3040                           
  3041                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3042  0FE8  300D               	movlw	13
  3043  0FE9  00F1               	movwf	??_Lcd_Write_Char
  3044  0FEA                     u2047:	
  3045  0FEA  0BF1               	decfsz	??_Lcd_Write_Char,f
  3046  0FEB  2FEA               	goto	u2047
  3047                           
  3048                           ;./lcd.h: 90:    RD3 = 0;
  3049  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  3050  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  3051  0FEE  1188               	bcf	8,3	;volatile
  3052                           
  3053                           ;./lcd.h: 91:    Lcd_Port(temp);
  3054  0FEF  0872               	movf	Lcd_Write_Char@temp,w
  3055  0FF0  120A  158A  2750  120A  158A  	fcall	_Lcd_Port
  3056                           
  3057                           ;./lcd.h: 92:    RD3 = 1;
  3058  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  3059  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  3060  0FF7  1588               	bsf	8,3	;volatile
  3061                           
  3062                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3063  0FF8  300D               	movlw	13
  3064  0FF9  00F1               	movwf	??_Lcd_Write_Char
  3065  0FFA                     u2057:	
  3066  0FFA  0BF1               	decfsz	??_Lcd_Write_Char,f
  3067  0FFB  2FFA               	goto	u2057
  3068                           
  3069                           ;./lcd.h: 94:    RD3 = 0;
  3070  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0FFE  1188               	bcf	8,3	;volatile
  3073  0FFF  0008               	return
  3074  1000                     __end_of_Lcd_Write_Char:	
  3075                           
  3076                           	psect	text11
  3077  00AF                     __ptext11:	
  3078 ;; *************** function _Lcd_Set_Cursor *****************
  3079 ;; Defined at:
  3080 ;;		line 41 in file "./lcd.h"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  a               1    wreg     unsigned char 
  3083 ;;  b               1    4[COMMON] unsigned char 
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;  a               1    7[COMMON] unsigned char 
  3086 ;;  temp            1   10[COMMON] unsigned char 
  3087 ;;  y               1    9[COMMON] unsigned char 
  3088 ;;  z               1    8[COMMON] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0, pclath, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         1       0       0       0       0
  3099 ;;      Locals:         4       0       0       0       0
  3100 ;;      Temps:          2       0       0       0       0
  3101 ;;      Totals:         7       0       0       0       0
  3102 ;;Total ram usage:        7 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    2
  3105 ;; This function calls:
  3106 ;;		_Lcd_Cmd
  3107 ;; This function is called by:
  3108 ;;		_ISR
  3109 ;;		_main
  3110 ;;		_welcome
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _Lcd_Set_Cursor
  3116  00AF                     _Lcd_Set_Cursor:	
  3117                           
  3118                           ;incstack = 0
  3119                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3120                           ;Lcd_Set_Cursor@a stored from wreg
  3121  00AF  00F7               	movwf	Lcd_Set_Cursor@a
  3122                           
  3123                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  3124  00B0  0377               	decf	Lcd_Set_Cursor@a,w
  3125  00B1  1D03               	btfss	3,2
  3126  00B2  28D4               	goto	l1284
  3127                           
  3128                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  3129  00B3  0874               	movf	Lcd_Set_Cursor@b,w
  3130  00B4  3E7F               	addlw	127
  3131  00B5  00F5               	movwf	??_Lcd_Set_Cursor
  3132  00B6  0875               	movf	??_Lcd_Set_Cursor,w
  3133  00B7  00FA               	movwf	Lcd_Set_Cursor@temp
  3134                           
  3135                           ;./lcd.h: 47:   z = temp>>4;
  3136  00B8  087A               	movf	Lcd_Set_Cursor@temp,w
  3137  00B9  00F5               	movwf	??_Lcd_Set_Cursor
  3138  00BA  3004               	movlw	4
  3139  00BB                     u1045:	
  3140  00BB  1003               	clrc
  3141  00BC  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3142  00BD  3EFF               	addlw	-1
  3143  00BE  1D03               	skipz
  3144  00BF  28BB               	goto	u1045
  3145  00C0  0875               	movf	??_Lcd_Set_Cursor,w
  3146  00C1  00F6               	movwf	??_Lcd_Set_Cursor+1
  3147  00C2  0876               	movf	??_Lcd_Set_Cursor+1,w
  3148  00C3  00F8               	movwf	Lcd_Set_Cursor@z
  3149                           
  3150                           ;./lcd.h: 48:   y = temp & 0x0F;
  3151  00C4  087A               	movf	Lcd_Set_Cursor@temp,w
  3152  00C5  390F               	andlw	15
  3153  00C6  00F5               	movwf	??_Lcd_Set_Cursor
  3154  00C7  0875               	movf	??_Lcd_Set_Cursor,w
  3155  00C8  00F9               	movwf	Lcd_Set_Cursor@y
  3156                           
  3157                           ;./lcd.h: 49:   Lcd_Cmd(z);
  3158  00C9  0878               	movf	Lcd_Set_Cursor@z,w
  3159  00CA  120A  158A  276A  120A  118A  	fcall	_Lcd_Cmd
  3160                           
  3161                           ;./lcd.h: 50:   Lcd_Cmd(y);
  3162  00CF  0879               	movf	Lcd_Set_Cursor@y,w
  3163  00D0  120A  158A  276A   	fcall	_Lcd_Cmd
  3164                           
  3165                           ;./lcd.h: 51:  }
  3166  00D3  0008               	return
  3167  00D4                     l1284:	
  3168  00D4  3002               	movlw	2
  3169  00D5  0677               	xorwf	Lcd_Set_Cursor@a,w
  3170  00D6  1D03               	btfss	3,2
  3171  00D7  0008               	return
  3172                           
  3173                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  3174  00D8  0874               	movf	Lcd_Set_Cursor@b,w
  3175  00D9  3EBF               	addlw	191
  3176  00DA  00F5               	movwf	??_Lcd_Set_Cursor
  3177  00DB  0875               	movf	??_Lcd_Set_Cursor,w
  3178  00DC  00FA               	movwf	Lcd_Set_Cursor@temp
  3179                           
  3180                           ;./lcd.h: 55:   z = temp>>4;
  3181  00DD  087A               	movf	Lcd_Set_Cursor@temp,w
  3182  00DE  00F5               	movwf	??_Lcd_Set_Cursor
  3183  00DF  3004               	movlw	4
  3184  00E0                     u1065:	
  3185  00E0  1003               	clrc
  3186  00E1  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3187  00E2  3EFF               	addlw	-1
  3188  00E3  1D03               	skipz
  3189  00E4  28E0               	goto	u1065
  3190  00E5  0875               	movf	??_Lcd_Set_Cursor,w
  3191  00E6  00F6               	movwf	??_Lcd_Set_Cursor+1
  3192  00E7  0876               	movf	??_Lcd_Set_Cursor+1,w
  3193  00E8  00F8               	movwf	Lcd_Set_Cursor@z
  3194                           
  3195                           ;./lcd.h: 56:   y = temp & 0x0F;
  3196  00E9  087A               	movf	Lcd_Set_Cursor@temp,w
  3197  00EA  390F               	andlw	15
  3198  00EB  00F5               	movwf	??_Lcd_Set_Cursor
  3199  00EC  0875               	movf	??_Lcd_Set_Cursor,w
  3200  00ED  00F9               	movwf	Lcd_Set_Cursor@y
  3201                           
  3202                           ;./lcd.h: 57:   Lcd_Cmd(z);
  3203  00EE  0878               	movf	Lcd_Set_Cursor@z,w
  3204  00EF  120A  158A  276A  120A  118A  	fcall	_Lcd_Cmd
  3205                           
  3206                           ;./lcd.h: 58:   Lcd_Cmd(y);
  3207  00F4  0879               	movf	Lcd_Set_Cursor@y,w
  3208  00F5  120A  158A  276A   	fcall	_Lcd_Cmd
  3209  00F8  0008               	return
  3210  00F9                     __end_of_Lcd_Set_Cursor:	
  3211                           
  3212                           	psect	text12
  3213  0F45                     __ptext12:	
  3214 ;; *************** function _Lcd_Clear *****************
  3215 ;; Defined at:
  3216 ;;		line 35 in file "./lcd.h"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  2   54[None  ] int 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3230 ;;      Params:         0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0
  3233 ;;      Totals:         0       0       0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    2
  3237 ;; This function calls:
  3238 ;;		_Lcd_Cmd
  3239 ;; This function is called by:
  3240 ;;		_ISR
  3241 ;;		_main
  3242 ;;		_welcome
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           
  3247                           ;psect for function _Lcd_Clear
  3248  0F45                     _Lcd_Clear:	
  3249                           
  3250                           ;./lcd.h: 37:  Lcd_Cmd(0);
  3251                           
  3252                           ;incstack = 0
  3253                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3254  0F45  3000               	movlw	0
  3255  0F46  120A  158A  276A  120A  158A  	fcall	_Lcd_Cmd
  3256                           
  3257                           ;./lcd.h: 38:  Lcd_Cmd(1);
  3258  0F4B  3001               	movlw	1
  3259  0F4C  120A  158A  276A   	fcall	_Lcd_Cmd
  3260  0F4F  0008               	return
  3261  0F50                     __end_of_Lcd_Clear:	
  3262                           
  3263                           	psect	text13
  3264  0F6A                     __ptext13:	
  3265 ;; *************** function _Lcd_Cmd *****************
  3266 ;; Defined at:
  3267 ;;		line 26 in file "./lcd.h"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  a               1    wreg     unsigned char 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  a               1    3[COMMON] unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0, pclath, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       0       0       0       0
  3282 ;;      Locals:         1       0       0       0       0
  3283 ;;      Temps:          2       0       0       0       0
  3284 ;;      Totals:         3       0       0       0       0
  3285 ;;Total ram usage:        3 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    1
  3288 ;; This function calls:
  3289 ;;		_Lcd_Port
  3290 ;; This function is called by:
  3291 ;;		_Lcd_Clear
  3292 ;;		_Lcd_Set_Cursor
  3293 ;;		_Lcd_Init
  3294 ;;		_Lcd_Shift_Right
  3295 ;;		_Lcd_Shift_Left
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           
  3300                           ;psect for function _Lcd_Cmd
  3301  0F6A                     _Lcd_Cmd:	
  3302                           
  3303                           ;incstack = 0
  3304                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3305                           ;Lcd_Cmd@a stored from wreg
  3306  0F6A  00F3               	movwf	Lcd_Cmd@a
  3307                           
  3308                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RD1 = 0;
  3309  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  3311  0F6D  1088               	bcf	8,1	;volatile
  3312                           
  3313                           ;./lcd.h: 29:  Lcd_Port(a);
  3314  0F6E  0873               	movf	Lcd_Cmd@a,w
  3315  0F6F  120A  158A  2750  120A  158A  	fcall	_Lcd_Port
  3316                           
  3317                           ;./lcd.h: 30:  RD3 = 1;
  3318  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  3320  0F76  1588               	bsf	8,3	;volatile
  3321                           
  3322                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  3323  0F77  3006               	movlw	6
  3324  0F78  00F2               	movwf	??_Lcd_Cmd+1
  3325  0F79  3030               	movlw	48
  3326  0F7A  00F1               	movwf	??_Lcd_Cmd
  3327  0F7B                     u2067:	
  3328  0F7B  0BF1               	decfsz	??_Lcd_Cmd,f
  3329  0F7C  2F7B               	goto	u2067
  3330  0F7D  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3331  0F7E  2F7B               	goto	u2067
  3332  0F7F  0000               	nop
  3333                           
  3334                           ;./lcd.h: 32:         RD3 = 0;
  3335  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0F82  1188               	bcf	8,3	;volatile
  3338  0F83  0008               	return
  3339  0F84                     __end_of_Lcd_Cmd:	
  3340                           
  3341                           	psect	text14
  3342  0F50                     __ptext14:	
  3343 ;; *************** function _Lcd_Port *****************
  3344 ;; Defined at:
  3345 ;;		line 4 in file "./lcd.h"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  a               1    wreg     unsigned char 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  a               1    0[COMMON] unsigned char 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3359 ;;      Params:         0       0       0       0       0
  3360 ;;      Locals:         1       0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0
  3362 ;;      Totals:         1       0       0       0       0
  3363 ;;Total ram usage:        1 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_Lcd_Cmd
  3369 ;;		_Lcd_Init
  3370 ;;		_Lcd_Write_Char
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           
  3375                           ;psect for function _Lcd_Port
  3376  0F50                     _Lcd_Port:	
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in _Lcd_Port: [wreg]
  3380                           ;Lcd_Port@a stored from wreg
  3381  0F50  00F0               	movwf	Lcd_Port@a
  3382                           
  3383                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  3384  0F51  1C70               	btfss	Lcd_Port@a,0
  3385  0F52  2F57               	goto	l41
  3386                           
  3387                           ;./lcd.h: 7:   RD4 = 1;
  3388  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  3390  0F55  1608               	bsf	8,4	;volatile
  3391  0F56  2F5A               	goto	l42
  3392  0F57                     l41:	
  3393                           ;./lcd.h: 8:  else
  3394                           
  3395                           
  3396                           ;./lcd.h: 9:   RD4 = 0;
  3397  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  3398  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  3399  0F59  1208               	bcf	8,4	;volatile
  3400  0F5A                     l42:	
  3401                           
  3402                           ;./lcd.h: 11:  if(a & 2)
  3403  0F5A  1CF0               	btfss	Lcd_Port@a,1
  3404  0F5B  2F5E               	goto	l43
  3405                           
  3406                           ;./lcd.h: 12:   RD5 = 1;
  3407  0F5C  1688               	bsf	8,5	;volatile
  3408  0F5D  2F5F               	goto	l44
  3409  0F5E                     l43:	
  3410                           ;./lcd.h: 13:  else
  3411                           
  3412                           
  3413                           ;./lcd.h: 14:   RD5 = 0;
  3414  0F5E  1288               	bcf	8,5	;volatile
  3415  0F5F                     l44:	
  3416                           
  3417                           ;./lcd.h: 16:  if(a & 4)
  3418  0F5F  1D70               	btfss	Lcd_Port@a,2
  3419  0F60  2F63               	goto	l45
  3420                           
  3421                           ;./lcd.h: 17:   RD6 = 1;
  3422  0F61  1708               	bsf	8,6	;volatile
  3423  0F62  2F64               	goto	l46
  3424  0F63                     l45:	
  3425                           ;./lcd.h: 18:  else
  3426                           
  3427                           
  3428                           ;./lcd.h: 19:   RD6 = 0;
  3429  0F63  1308               	bcf	8,6	;volatile
  3430  0F64                     l46:	
  3431                           
  3432                           ;./lcd.h: 21:  if(a & 8)
  3433  0F64  1DF0               	btfss	Lcd_Port@a,3
  3434  0F65  2F68               	goto	l47
  3435                           
  3436                           ;./lcd.h: 22:   RD7 = 1;
  3437  0F66  1788               	bsf	8,7	;volatile
  3438  0F67  0008               	return
  3439  0F68                     l47:	
  3440                           ;./lcd.h: 23:  else
  3441                           
  3442                           
  3443                           ;./lcd.h: 24:   RD7 = 0;
  3444  0F68  1388               	bcf	8,7	;volatile
  3445  0F69  0008               	return
  3446  0F6A                     __end_of_Lcd_Port:	
  3447                           
  3448                           	psect	text15
  3449  0086                     __ptext15:	
  3450 ;; *************** function _ADC_Read *****************
  3451 ;; Defined at:
  3452 ;;		line 41 in file "main.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  channel         1    wreg     unsigned char 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  channel         1    4[COMMON] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  2    0[COMMON] unsigned int 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3466 ;;      Params:         2       0       0       0       0
  3467 ;;      Locals:         1       0       0       0       0
  3468 ;;      Temps:          2       0       0       0       0
  3469 ;;      Totals:         5       0       0       0       0
  3470 ;;Total ram usage:        5 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; This function calls:
  3473 ;;		Nothing
  3474 ;; This function is called by:
  3475 ;;		_main
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           
  3480                           ;psect for function _ADC_Read
  3481  0086                     _ADC_Read:	
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  3485                           ;ADC_Read@channel stored from wreg
  3486  0086  00F4               	movwf	ADC_Read@channel
  3487                           
  3488                           ;main.c: 41: unsigned int ADC_Read(unsigned char channel);main.c: 42: {;main.c: 43:  ADC
      +                          ON0 &= 0x11000101;
  3489  0087  3001               	movlw	1
  3490  0088  00F2               	movwf	??_ADC_Read
  3491  0089  0872               	movf	??_ADC_Read,w
  3492  008A  1283               	bcf	3,5	;RP0=0, select bank0
  3493  008B  1303               	bcf	3,6	;RP1=0, select bank0
  3494  008C  059F               	andwf	31,f	;volatile
  3495                           
  3496                           ;main.c: 44:  ADCON0 |= channel<<3;
  3497  008D  0874               	movf	ADC_Read@channel,w	;volatile
  3498  008E  00F2               	movwf	??_ADC_Read
  3499  008F  3002               	movlw	2
  3500  0090                     u1115:	
  3501  0090  1003               	clrc
  3502  0091  0DF2               	rlf	??_ADC_Read,f
  3503  0092  3EFF               	addlw	-1
  3504  0093  1D03               	skipz
  3505  0094  2890               	goto	u1115
  3506  0095  1003               	clrc
  3507  0096  0D72               	rlf	??_ADC_Read,w
  3508  0097  00F3               	movwf	??_ADC_Read+1
  3509  0098  0873               	movf	??_ADC_Read+1,w
  3510  0099  049F               	iorwf	31,f	;volatile
  3511                           
  3512                           ;main.c: 45:  _delay((unsigned long)((2)*(4000000/4000.0)));
  3513  009A  3003               	movlw	3
  3514  009B  00F3               	movwf	??_ADC_Read+1
  3515  009C  3097               	movlw	151
  3516  009D  00F2               	movwf	??_ADC_Read
  3517  009E                     u2077:	
  3518  009E  0BF2               	decfsz	??_ADC_Read,f
  3519  009F  289E               	goto	u2077
  3520  00A0  0BF3               	decfsz	??_ADC_Read+1,f
  3521  00A1  289E               	goto	u2077
  3522  00A2  28A3               	nop2
  3523                           
  3524                           ;main.c: 46:  GO_nDONE = 1;
  3525  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  3526  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  3527  00A5  151F               	bsf	31,2	;volatile
  3528  00A6                     l88:	
  3529                           ;main.c: 47:  while(GO_nDONE);
  3530                           
  3531  00A6  191F               	btfsc	31,2	;volatile
  3532  00A7  28A6               	goto	l88
  3533                           
  3534                           ;main.c: 48:  return ((ADRESH<<8)+ADRESL);
  3535  00A8  081E               	movf	30,w	;volatile
  3536  00A9  00F1               	movwf	?_ADC_Read+1
  3537  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  3538  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  3539  00AC  081E               	movf	30,w	;volatile
  3540  00AD  00F0               	movwf	?_ADC_Read
  3541  00AE  0008               	return
  3542  00AF                     __end_of_ADC_Read:	
  3543                           
  3544                           	psect	text16
  3545  007D                     __ptext16:	
  3546 ;; *************** function _ADC_Initialize *****************
  3547 ;; Defined at:
  3548 ;;		line 35 in file "main.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _ADC_Initialize
  3577  007D                     _ADC_Initialize:	
  3578                           
  3579                           ;main.c: 37:  ADCON0 = 0b01000001;
  3580                           
  3581                           ;incstack = 0
  3582                           ; Regs used in _ADC_Initialize: [wreg]
  3583  007D  3041               	movlw	65
  3584  007E  1283               	bcf	3,5	;RP0=0, select bank0
  3585  007F  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0080  009F               	movwf	31	;volatile
  3587                           
  3588                           ;main.c: 38:  ADCON1 = 0b11000000;
  3589  0081  30C0               	movlw	192
  3590  0082  1683               	bsf	3,5	;RP0=1, select bank1
  3591  0083  1303               	bcf	3,6	;RP1=0, select bank1
  3592  0084  009F               	movwf	31	;volatile
  3593  0085  0008               	return
  3594  0086                     __end_of_ADC_Initialize:	
  3595  007E                     btemp	set	126	;btemp
  3596  007E                     wtemp0	set	126


Data Sizes:
    Strings     116
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[17]), STR_7(CODE[7]), 
		 -> STR_6(CODE[13]), STR_5(CODE[17]), STR_4(CODE[14]), STR_3(CODE[13]), 
		 -> STR_2(CODE[14]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_ISR
    _main->___awmod
    _main->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___awmod->___awdiv
    _Lcd_Init->_Lcd_Cmd
    _ISR->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0    9327
                                             37 BANK0     17    17      0
                     _ADC_Initialize
                           _ADC_Read
                                _ISR
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  5     5      0    1818
                                             11 COMMON     3     3      0
                                              0 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     598
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1064
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _ISR
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     36      36       5       67.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Feb 24 11:26:21 2020

                        pc 0002                __CFG_CP$OFF 0000                         l41 0F57  
                       l42 0F5A                         l43 0F5E                         l44 0F5F  
                       l45 0F63                         l46 0F64                         l47 0F68  
                       l95 02CC                         l88 00A6               ___awdiv@sign 0076  
                       fsr 0004        __Umul8_16@word_mpld 0076                        l632 0373  
                      l385 0249                        l633 037D                        l625 035D  
                      l619 031D                        l638 0FB8                        l593 07EF  
                      _RD1 0041                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
             __CFG_CPD$OFF 0000                        _ISR 0267                        fsr0 0004  
             ___awmod@sign 0021               __CFG_FOSC$HS 0000               ___flmul@aexp 0032  
             ___flmul@bexp 0033               ___flmul@sign 002D               ___flmul@temp 0038  
             ___flmul@prod 0034               __CFG_LVP$OFF 0000                       ?_ISR 0070  
                     ISR@y 0020               ___fltol@exp1 0044                       l1300 0F87  
                     l1410 0187                       l1402 0163                       l1306 0FB0  
                     l1404 0171                       l1414 0192                       l1430 0105  
                     l1510 0504                       l1600 0775                       l1512 0506  
                     l1418 019A                       l1442 0112                       l1434 010C  
                     l1530 052B                       l1514 050E                       l1284 00D4  
                     l1444 0120                       l1452 0139                       l1604 0777  
                     l1540 0541                       l1532 0533                       l1614 07A9  
                     l1462 0205                       l1392 015B                       l1456 0141  
                     l1448 012E                       l1624 07D8                       l1528 0529  
                     l1386 0150                       l1618 07BF                       l1482 0235  
                     l1466 020E                       l1642 0315                       l1714 03B7  
                     l1492 0258                       l1484 0245                       l1652 0330  
                     l1662 0371                       l1654 0342                       l1592 0741  
                     l1664 0362                       l1648 032C                       l1594 075E  
                     l1676 039A                       STR_1 002B                       STR_2 003C  
                     STR_3 0065                       STR_4 004A                       STR_5 001A  
                     STR_6 0058                       STR_7 0072                       STR_8 0009  
                     STR_9 0079                       u1025 0FDA                       u1115 0090  
                     u1045 00BB                       u1205 0172                       u2007 029F  
                     u1215 017E                       u1065 00E0                       u1145 02FD  
                     u2017 02C1                       u1225 0188                       u1305 0126  
                     u2027 02D5                       u1315 012F                       u2037 02E5  
                     u2047 0FEA                       u1095 0FB9                       u1415 024E  
                     u2057 0FFA                       u1185 0166                       u2067 0F7B  
                     u1355 0217                       u2077 009E                       u1285 0115  
                     u1705 0750                       u1385 0236                       u1635 06EA  
                     u1565 05F1                       u1655 070F                       u1675 072D  
                     u1595 064E                       u1685 0745                       u1925 0385  
                     u1845 0339                       u1775 0794                       u1785 07B2  
                     u1865 0355                       u1795 07CA                       u1885 036A  
                     u1957 04DA                       u1967 01A9                       u1977 01B8  
                     u1987 01C6                       u1997 026D               __CFG_WRT$OFF 0000  
        ?_Lcd_Write_String 0070                       _main 03A3                       btemp 007E  
         __end_of_ADC_Read 00AF              __CFG_BOREN$ON 0000                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0F84                      ??_ISR 007B  
            ___fltol@sign1 0043                      ?_main 0070            __end_of___awdiv 019F  
                    STR_10 007B              __CFG_WDTE$OFF 0000            __end_of___awmod 0146  
          __end_of___flmul 07FC            __end_of___fltol 0267            ___awdiv@divisor 0070  
          ___awdiv@counter 0075                      _PORTA 0005                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 004A                      _TRISA 0085                      _TRISC 0087  
                    _TRISD 0088                      main@i 0054                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 01FA  
         __end_of_Lcd_Port 0F6A            __initialization 07FC               __end_of_main 04E7  
                   ??_main 0045         __size_of_Lcd_Clear 000B                     _ADCON0 001F  
                   _ADCON1 009F                     _ADRESH 001E                     _ADRESL 009E  
         ___awdiv@dividend 0072                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0037  
         __end_of___xxtofl 03A3             __CFG_PWRTE$OFF 0000                  ??___awdiv 0074  
                ??___awmod 007D                  ??___flmul 0028                  ??___fltol 003E  
          ADC_Read@channel 0074           ___awdiv@quotient 0077            ___awmod@divisor 0079  
          ___awmod@counter 0020                     main@k1 0048                     main@k2 004A  
                   main@k3 004C                     main@k4 004E         __size_of__Umul8_16 0023  
                ?_ADC_Read 0070            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 0F50                 ___fltol@f1 003A             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 00AF                 ??_ADC_Read 0072                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070          __end_of__Umul8_16 0FC9                 __pmaintext 03A3  
__size_of_Lcd_Write_String 0022     __end_of_Lcd_Set_Cursor 00F9    __size_of_ADC_Initialize 0009  
                ?___xxtofl 0070                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 0FC9                    _Lcd_Cmd 0F6A  
                  ___awdiv 0146                    ___awmod 00F9                    ___flmul 04E7  
                  ___fltol 01FA            ?_Lcd_Set_Cursor 0074                    __ptext1 0300  
                  __ptext2 01FA                    __ptext3 04E7                    __ptext4 0FA6  
                  __ptext5 00F9                    __ptext6 0146                    __ptext7 019F  
                  __ptext8 0267                    __ptext9 0F84               __size_of_ISR 0099  
               ??___xxtofl 0074           ___awmod@dividend 007B                    main@adc 0052  
   __end_of_Lcd_Write_Char 1000       end_of_initialization 07FC                  Lcd_Port@a 0070  
                _PORTAbits 0005              ___xxtofl@sign 0078          __size_of_ADC_Read 0029  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
              ___flmul@grs 002E                  _Lcd_Clear 0F45           _Lcd_Write_String 0F84  
           _ADC_Initialize 007D        start_initialization 07FC                __end_of_ISR 0300  
        __size_of_Lcd_Init 005B          __size_of_Lcd_Port 001A                 ?_Lcd_Clear 0070  
   __end_of_ADC_Initialize 0086                  __Umul8_16 0FA6            Lcd_Write_Char@a 0074  
          Lcd_Write_Char@y 0073                  ___flmul@a 0024                  ___flmul@b 0020  
                ___latbits 0002              __pcstackBANK0 0020          __size_of___xxtofl 00A3  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075                   ?___awdiv 0070  
                 ?___awmod 0079                   ?___flmul 0020                   ?___fltol 003A  
               ?__Umul8_16 0070            ?_ADC_Initialize 0070                  __pstrings 0003  
                 _ADC_Read 0086                   Lcd_Cmd@a 0073                   _GO_nDONE 00FA  
              ??_Lcd_Clear 0074                __stringbase 0008           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 019F                   _Lcd_Port 0F50   __end_of_Lcd_Write_String 0FA6  
         __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072           __size_of___awdiv 0059  
         __size_of___awmod 004D           __size_of___flmul 0315           __size_of___fltol 006D  
       __end_of__stringtab 0009                   ___xxtofl 0300                   __ptext10 0FC9  
                 __ptext11 00AF                   __ptext12 0F45                   __ptext13 0F6A  
                 __ptext14 0F50                   __ptext15 0086                   __ptext16 007D  
            __size_of_main 0144                   main@flag 0050                 _INTCONbits 000B  
       Lcd_Write_Char@temp 0072           ??_ADC_Initialize 0070                  stringcode 0003  
       Lcd_Set_Cursor@temp 007A     __Umul8_16@multiplicand 0070                   stringdir 0003  
                 stringtab 0003       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
